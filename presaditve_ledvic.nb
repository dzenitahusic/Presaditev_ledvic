(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1589063,      33888]
NotebookOptionsPosition[   1581110,      33751]
NotebookOutlinePosition[   1581509,      33767]
CellTagsIndexPosition[   1581466,      33764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Presaditve ledvic", "Title"]], "Subtitle",
 CellChangeTimes->{{3.8396797659527564`*^9, 
  3.839679819797832*^9}},ExpressionUUID->"166ed084-126c-4039-95fb-\
04fdd7847506"],

Cell["Analiza presaditve ledvic", "Subtitle",
 CellChangeTimes->{{3.8396798487278724`*^9, 
  3.839679860512889*^9}},ExpressionUUID->"28332046-5308-4b83-bd08-\
5a3a5c625a0f"],

Cell[CellGroupData[{

Cell["Pridobivanje podatkov", "Section",
 CellChangeTimes->{{3.8260954647490697`*^9, 
  3.8260954718585615`*^9}},ExpressionUUID->"aacb228d-71b7-4dd6-b92a-\
93fbed7bb007"],

Cell[TextData[{
 "Podatke sem pridobila iz podatkovne baze ",
 StyleBox["Wolfram data repository",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.826095493623759*^9, 3.826095495861269*^9}, {
  3.8260955445323353`*^9, 
  3.826095569795841*^9}},ExpressionUUID->"56bd5a75-e853-43d1-b705-\
e321272c9c8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"podatki", " ", "=", " ", 
   RowBox[{
   "ResourceData", "[", "\"\<Sample Data: Kidney Transplant\>\"", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.826095591201747*^9, 3.826095611794001*^9}, 
   3.8286204006584363`*^9, 3.8286205269416018`*^9, {3.839601401428545*^9, 
   3.839601443373604*^9}, {3.839601864153498*^9, 3.839601864638499*^9}, {
   3.8396019098465633`*^9, 3.839601911661566*^9}, {3.8396019927758923`*^9, 
   3.8396020100359163`*^9}, {3.8396697462452445`*^9, 3.839669873655424*^9}, {
   3.839679936960419*^9, 3.839679938676422*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"d0a908c5-1ceb-44a8-9bc4-a1651be7832f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Time" -> Quantity[1, "Days"], "Delta" -> "alive", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[5, "Days"], "Delta" -> "alive", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[7, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[9, "Days"], "Delta" -> "alive", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[13, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[13, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[17, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[20, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[26, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[26, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[28, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[32, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[32, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[43, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[43, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[44, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[51, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[51, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[51, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[56, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[57, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[59, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[62, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[66, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[66, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[67, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[68, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[69, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[79, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[79, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[79, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[87, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[88, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[91, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[93, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[98, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[98, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[104, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[11, "Years"]], 
       Association[
       "Time" -> Quantity[105, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[106, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[112, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[116, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[116, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[118, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[119, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[121, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[121, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[135, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[144, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[150, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[150, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[162, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[68, "Years"]], 
       Association[
       "Time" -> Quantity[162, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[167, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[19, "Years"]], 
       Association[
       "Time" -> Quantity[183, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[186, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[190, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[198, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[198, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[200, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[211, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[215, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[223, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[224, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[228, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[236, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[238, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[242, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[243, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[248, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[249, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[251, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[252, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[253, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[256, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[257, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[259, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[75, "Years"]], 
       Association[
       "Time" -> Quantity[261, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[271, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[68, "Years"]], 
       Association[
       "Time" -> Quantity[271, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[277, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[283, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[284, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[289, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[291, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[311, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[312, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[316, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[316, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[331, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[334, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[338, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[340, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[340, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[341, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[346, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[347, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[354, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[361, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[367, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[370, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[370, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[386, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[391, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[392, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[403, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[406, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[410, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[421, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[428, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[432, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[432, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[439, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[452, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[478, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[481, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[485, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[486, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[490, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[494, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[495, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[512, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[512, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[535, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[543, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[545, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[545, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[545, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[563, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[570, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[570, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[572, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[579, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[582, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[11, "Years"]], 
       Association[
       "Time" -> Quantity[583, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[70, "Years"]], 
       Association[
       "Time" -> Quantity[590, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[596, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[615, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[621, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[630, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[631, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[17, "Years"]], 
       Association[
       "Time" -> Quantity[633, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[652, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[654, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[655, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[659, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[670, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[670, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[692, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[697, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[701, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[719, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[723, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[725, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[730, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[734, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[753, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[757, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[773, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[776, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[790, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[806, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[834, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[18, "Years"]], 
       Association[
       "Time" -> Quantity[835, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[864, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[864, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[875, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[888, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[890, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[903, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[909, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[915, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[932, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[939, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[945, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[945, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[946, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[951, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[961, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[965, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[19, "Years"]], 
       Association[
       "Time" -> Quantity[968, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[1016, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[1028, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[1050, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[1058, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[1058, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[1092, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1092, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1105, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[1110, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1110, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1114, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1115, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[1118, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[1124, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[1124, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1125, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1128, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[1128, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[1145, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[1149, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1154, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[1154, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[1165, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[1186, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1191, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[1196, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[1208, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1208, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[1210, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[1224, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[1224, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[1229, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1230, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1252, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[1256, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1274, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1291, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1297, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1297, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[1302, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[1313, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[1316, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[1350, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1357, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[1383, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[1383, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[1383, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[1383, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[1386, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[68, "Years"]], 
       Association[
       "Time" -> Quantity[1388, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1395, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[3, "Years"]], 
       Association[
       "Time" -> Quantity[1418, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[1428, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[1429, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[1435, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[1449, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[1449, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[1450, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1457, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1463, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1470, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[1497, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1497, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[1500, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[1509, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[1522, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[1527, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[1527, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[1541, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[1567, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[1571, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1578, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1586, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[1594, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[1610, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[1610, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[1611, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[1617, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[1624, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[1638, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[1641, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1655, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1668, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1674, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[1699, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1700, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[1700, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[1707, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1717, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1717, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1718, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[1718, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1734, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[1736, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[1736, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[1739, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[1739, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[1739, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[1745, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[1745, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[1746, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[1749, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[1770, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1770, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[1795, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[1802, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[1802, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1803, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1808, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[1808, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1815, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[1820, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[1839, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1861, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1861, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[1893, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[1900, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1920, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1937, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1947, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[1947, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1959, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1959, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[1975, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1988, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[1988, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[1995, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[1995, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[2001, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[2016, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[2025, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[2032, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[2035, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[2038, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[2041, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[29, "Years"]], 
       Association[
       "Time" -> Quantity[2043, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[2048, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[2049, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[2056, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[2060, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[2090, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2090, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2095, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[2096, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2096, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2098, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2102, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[2109, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[11, "Years"]], 
       Association[
       "Time" -> Quantity[2135, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[2135, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[2147, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[18, "Years"]], 
       Association[
       "Time" -> Quantity[2190, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2211, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[2221, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2223, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[2253, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2253, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[18, "Years"]], 
       Association[
       "Time" -> Quantity[2264, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[2267, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[2270, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[2291, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[2291, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[2313, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[2313, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2313, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[2330, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[2332, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[2335, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[2356, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[2367, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2384, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[2418, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[2421, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[2421, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[2430, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[2433, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[2434, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[2462, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[2462, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[2488, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[12, "Years"]], 
       Association[
       "Time" -> Quantity[2489, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[2497, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[2516, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[2531, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[12, "Years"]], 
       Association[
       "Time" -> Quantity[2533, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[2575, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[2585, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[2589, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[2601, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2607, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[2625, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[2630, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2646, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[2654, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[2, "Years"]], 
       Association[
       "Time" -> Quantity[2690, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[2696, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2700, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[2712, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2714, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[2716, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[2716, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[2740, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[2761, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2762, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2765, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[2789, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[2789, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[2812, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[2815, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[2827, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[2831, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[2846, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[2867, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[2871, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2889, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[2909, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[2922, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[2936, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[2948, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[2955, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2957, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2994, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2994, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[2999, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[3007, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[3045, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[3060, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[3078, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[3078, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[3084, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[3084, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[3110, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[3130, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[3131, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[3146, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[3147, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[3172, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[3179, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[3187, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[3187, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[3255, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[3260, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[3287, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[3289, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[3300, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[3301, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[6, "Years"]], 
       Association[
       "Time" -> Quantity[3319, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[29, "Years"]], 
       Association[
       "Time" -> Quantity[3361, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[3402, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[3425, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[3434, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[37, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "black", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[43, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "black", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[57, "Days"], "Delta" -> "dead", "Gender" -> "male", 
        "Race" -> "black", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[80, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[82, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[93, "Days"], "Delta" -> "alive", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[114, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[116, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[116, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[119, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[152, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[158, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[172, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[200, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[206, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[211, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[231, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[280, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[311, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[312, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[402, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[414, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[443, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[450, "Days"], "Delta" -> "dead", "Gender" -> "male",
         "Race" -> "black", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[452, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[479, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[499, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[535, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[642, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[646, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[661, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[663, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[663, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[671, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[750, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[777, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[863, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[863, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[864, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[868, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[934, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[951, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[992, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[1001, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[1002, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1109, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[1122, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[1124, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[1149, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[1178, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[1230, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[1232, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1242, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1275, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[1352, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[1384, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[1450, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[1586, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[1624, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[1668, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1681, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[1778, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[1795, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[1795, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[1877, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[1989, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[2049, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[2094, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[2095, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[2264, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[2291, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2369, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[2369, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[2414, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2425, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[2451, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2455, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2557, "Days"], "Delta" -> "dead", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[2598, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[2625, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2659, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2688, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2726, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[2741, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[2750, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[2909, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[2961, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[7, "Years"]], 
       Association[
       "Time" -> Quantity[2994, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[3019, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[3255, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[3281, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[3430, "Days"], "Delta" -> "alive", "Gender" -> 
        "male", "Race" -> "black", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[1, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2, "Days"], "Delta" -> "dead", "Gender" -> "female",
         "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[3, "Days"], "Delta" -> "dead", "Gender" -> "female",
         "Race" -> "white", "Age" -> Quantity[18, "Years"]], 
       Association[
       "Time" -> Quantity[5, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[7, "Days"], "Delta" -> "dead", "Gender" -> "female",
         "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[9, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[71, "Years"]], 
       Association[
       "Time" -> Quantity[10, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[10, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[17, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[20, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[21, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[26, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[33, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[43, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[43, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[48, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[50, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[51, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[52, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[62, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[62, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[68, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[78, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[79, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[82, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[97, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[104, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[105, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[112, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[115, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[124, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[141, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[142, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[143, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[150, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[154, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[162, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[162, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[14, "Years"]], 
       Association[
       "Time" -> Quantity[167, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[173, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[68, "Years"]], 
       Association[
       "Time" -> Quantity[193, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[205, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[209, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[231, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[238, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[239, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[246, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[246, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[250, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[253, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[260, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[269, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[271, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[273, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[280, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[297, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[306, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[331, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[337, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[341, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[341, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[347, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[366, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[377, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[387, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[71, "Years"]], 
       Association[
       "Time" -> Quantity[388, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[399, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[417, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[424, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[428, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[448, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[448, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[448, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[459, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[470, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[490, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[507, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[512, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[549, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[593, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[65, "Years"]], 
       Association[
       "Time" -> Quantity[604, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[614, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[642, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[652, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[654, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[660, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[670, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[675, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[678, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[693, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[715, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[731, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[750, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[753, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[757, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[759, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[62, "Years"]], 
       Association[
       "Time" -> Quantity[762, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[772, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[772, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[777, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[777, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[793, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[840, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[852, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[900, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[17, "Years"]], 
       Association[
       "Time" -> Quantity[907, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[907, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[909, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[915, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[963, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[995, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[995, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[1012, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1013, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[68, "Years"]], 
       Association[
       "Time" -> Quantity[1051, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[1072, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[1086, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[1114, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1125, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1164, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1196, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1229, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[1242, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[1252, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[29, "Years"]], 
       Association[
       "Time" -> Quantity[1254, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[1254, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1269, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[1291, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[1291, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[1299, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[1304, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[17, "Years"]], 
       Association[
       "Time" -> Quantity[1309, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[1315, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[1326, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1331, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1350, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[1365, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[1368, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1368, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[1427, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[1435, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[60, "Years"]], 
       Association[
       "Time" -> Quantity[1449, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[1473, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1497, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[1594, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[1605, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[1606, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[1611, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[1623, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1638, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[1673, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1681, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[1698, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1699, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1702, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1702, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[1707, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[1732, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[1736, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[1746, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[1777, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[1778, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1785, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1786, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[1786, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1791, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[1795, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[1815, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[1835, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[1875, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[1877, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[1893, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[1914, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1939, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[1940, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[1942, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[67, "Years"]], 
       Association[
       "Time" -> Quantity[1962, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[5, "Years"]], 
       Association[
       "Time" -> Quantity[1966, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[1973, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[1980, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[2001, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[2014, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2014, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2025, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[2034, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[2034, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[2034, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[2038, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2048, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[13, "Years"]], 
       Association[
       "Time" -> Quantity[2060, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[2083, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2094, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[2102, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[2108, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[2129, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[2193, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[17, "Years"]], 
       Association[
       "Time" -> Quantity[2211, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2221, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2223, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[2233, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2236, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[2252, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[2252, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[2271, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[2301, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[2312, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[58, "Years"]], 
       Association[
       "Time" -> Quantity[2332, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2335, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[2356, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[2392, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[2405, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[17, "Years"]], 
       Association[
       "Time" -> Quantity[2405, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[1, "Years"]], 
       Association[
       "Time" -> Quantity[2421, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[2433, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[2462, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[2486, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[2488, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[8, "Years"]], 
       Association[
       "Time" -> Quantity[2504, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[2529, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[2529, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[2531, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[2556, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[2567, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[2632, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[2638, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[2638, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[2654, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[2659, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[2663, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2670, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[2680, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[2700, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[2701, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[2705, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[2726, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[29, "Years"]], 
       Association[
       "Time" -> Quantity[2750, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[2759, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[51, "Years"]], 
       Association[
       "Time" -> Quantity[2768, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[2783, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[2795, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[2870, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[12, "Years"]], 
       Association[
       "Time" -> Quantity[2871, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[2876, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[24, "Years"]], 
       Association[
       "Time" -> Quantity[2900, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[2906, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[2918, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[2948, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[2993, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[3028, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[3042, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[3063, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[53, "Years"]], 
       Association[
       "Time" -> Quantity[3063, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[14, "Years"]], 
       Association[
       "Time" -> Quantity[3072, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[3077, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[3084, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[3086, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[3096, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[26, "Years"]], 
       Association[
       "Time" -> Quantity[3102, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[3106, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[3116, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[63, "Years"]], 
       Association[
       "Time" -> Quantity[3124, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[3142, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[3145, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[32, "Years"]], 
       Association[
       "Time" -> Quantity[3145, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[3172, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[47, "Years"]], 
       Association[
       "Time" -> Quantity[3173, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[28, "Years"]], 
       Association[
       "Time" -> Quantity[3175, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[3186, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[3202, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[3215, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[3224, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[3229, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[34, "Years"]], 
       Association[
       "Time" -> Quantity[3265, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[3300, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[16, "Years"]], 
       Association[
       "Time" -> Quantity[3325, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[3360, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[3372, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[30, "Years"]], 
       Association[
       "Time" -> Quantity[3379, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[22, "Years"]], 
       Association[
       "Time" -> Quantity[3412, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[3420, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "white", "Age" -> Quantity[29, "Years"]], 
       Association[
       "Time" -> Quantity[14, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[40, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[45, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[66, "Years"]], 
       Association[
       "Time" -> Quantity[93, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[106, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[40, "Years"]], 
       Association[
       "Time" -> Quantity[116, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[116, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[121, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[229, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[250, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[259, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[57, "Years"]], 
       Association[
       "Time" -> Quantity[261, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[27, "Years"]], 
       Association[
       "Time" -> Quantity[306, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[312, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[344, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[392, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[36, "Years"]], 
       Association[
       "Time" -> Quantity[442, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[512, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[625, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[35, "Years"]], 
       Association[
       "Time" -> Quantity[673, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[33, "Years"]], 
       Association[
       "Time" -> Quantity[731, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[38, "Years"]], 
       Association[
       "Time" -> Quantity[777, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[31, "Years"]], 
       Association[
       "Time" -> Quantity[864, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[59, "Years"]], 
       Association[
       "Time" -> Quantity[879, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[46, "Years"]], 
       Association[
       "Time" -> Quantity[887, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[899, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[64, "Years"]], 
       Association[
       "Time" -> Quantity[899, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[903, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[920, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[37, "Years"]], 
       Association[
       "Time" -> Quantity[929, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[50, "Years"]], 
       Association[
       "Time" -> Quantity[943, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[953, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[953, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[42, "Years"]], 
       Association[
       "Time" -> Quantity[1016, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[1151, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[13, "Years"]], 
       Association[
       "Time" -> Quantity[1196, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[23, "Years"]], 
       Association[
       "Time" -> Quantity[1291, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[1291, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1457, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[1508, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[25, "Years"]], 
       Association[
       "Time" -> Quantity[1567, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[41, "Years"]], 
       Association[
       "Time" -> Quantity[1674, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[44, "Years"]], 
       Association[
       "Time" -> Quantity[1736, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[39, "Years"]], 
       Association[
       "Time" -> Quantity[1739, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[1942, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[2026, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[52, "Years"]], 
       Association[
       "Time" -> Quantity[2171, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[61, "Years"]], 
       Association[
       "Time" -> Quantity[2268, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[49, "Years"]], 
       Association[
       "Time" -> Quantity[2276, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[2413, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[45, "Years"]], 
       Association[
       "Time" -> Quantity[2434, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[21, "Years"]], 
       Association[
       "Time" -> Quantity[2463, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[2650, "Days"], "Delta" -> "dead", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[48, "Years"]], 
       Association[
       "Time" -> Quantity[2680, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[54, "Years"]], 
       Association[
       "Time" -> Quantity[2935, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[20, "Years"]], 
       Association[
       "Time" -> Quantity[3072, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[55, "Years"]], 
       Association[
       "Time" -> Quantity[3161, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[56, "Years"]], 
       Association[
       "Time" -> Quantity[3211, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[43, "Years"]], 
       Association[
       "Time" -> Quantity[3304, "Days"], "Delta" -> "alive", "Gender" -> 
        "female", "Race" -> "black", "Age" -> Quantity[52, "Years"]]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Time"} -> 1, {All, "Delta"} -> 1, {All, "Gender"} -> 
        1, {All, "Race"} -> 1, {All, "Age"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Time" -> TypeSystem`PackageScope`AtomShape[75], "Delta" -> 
            TypeSystem`PackageScope`AtomShape[45.], "Gender" -> 
            TypeSystem`PackageScope`AtomShape[54.], "Race" -> 
            TypeSystem`PackageScope`AtomShape[45.], "Age" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Time", "Delta", "Gender", "Race", "Age"}, {
         TypeSystem`Atom[
          Quantity[1, "Days"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["alive", "dead"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["black", "white"]], 
         TypeSystem`Atom[
          Quantity[1, "Years"]]}], 863], "Meta" -> 
     Association["ID" -> 231644831423293], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Time"} -> 1, {All, "Delta"} -> 1, {All, "Gender"} -> 
        1, {All, "Race"} -> 1, {All, "Age"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Time" -> TypeSystem`PackageScope`AtomShape[75], "Delta" -> 
            TypeSystem`PackageScope`AtomShape[45.], "Gender" -> 
            TypeSystem`PackageScope`AtomShape[54.], "Race" -> 
            TypeSystem`PackageScope`AtomShape[45.], "Age" -> 
            TypeSystem`PackageScope`AtomShape[75]]], 
          DirectedInfinity[1], 5, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"Time", "Delta", "Gender", "Race", "Age"}, {
         TypeSystem`Atom[
          Quantity[1, "Days"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["alive", "dead"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["black", "white"]], 
         TypeSystem`Atom[
          Quantity[1, "Years"]]}], 863], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     863, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time", 
                  Style[
                  "Time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Time"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Time"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Delta", 
                  Style[
                  "Delta", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Delta"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Delta"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Gender", 
                  Style[
                  "Gender", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Gender"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Gender"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Race", 
                  Style[
                  "Race", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Race"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Race"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Age", 
                  Style[
                  "Age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Age"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1", "\"day\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"9", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"13", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"13", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"17", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"47", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"20", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"26", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"26", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"32", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"32", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"31", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"63", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"50", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"23", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Delta"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Gender"]}, "Item", False], "Mouse"], 
              ImageSize -> {{54., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Race"]}, "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 863, 1], {1, 863 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 863, 1], {1, 863 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 863, 1], {1, 863 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 863, 1], {1, 863 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{371., {265.5, 272.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{371., {265.5, 272.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839669880880434*^9, 3.83967994291963*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"8a60d899-1266-4c1c-996b-082092733b28"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analiza podatkov glede na spol, starost ter raso", "Section",
 CellChangeTimes->{{3.8260956872636647`*^9, 3.826095707746331*^9}, {
  3.8260964760199876`*^9, 3.826096496331321*^9}, {3.839679978893293*^9, 
  3.8396799805156956`*^9}},ExpressionUUID->"789dbfc5-6f20-4584-b957-\
255349c700f1"],

Cell[TextData[{
 "Analizirala ter narisala bom ",
 StyleBox["nekaj grafov",
  FontWeight->"Bold"],
 " \[SHacek]tevila presaditve ledvic  glede na ",
 StyleBox["spol,",
  FontWeight->"Bold"],
 " ",
 StyleBox["starost",
  FontWeight->"Bold"],
 " ter ",
 StyleBox["raso",
  FontWeight->"Bold"],
 ". Podatki so obdelani ter predstavljeni tudi z nekaj grafi."
}], "Text",
 CellChangeTimes->{{3.8260957330707426`*^9, 3.826095739804298*^9}, {
  3.826096500707717*^9, 3.826096554300204*^9}, {3.82609689234167*^9, 
  3.8260968943718157`*^9}, {3.826793024367444*^9, 3.8267930258229165`*^9}, {
  3.8273059282971597`*^9, 3.827305929058155*^9}, {3.827306078161237*^9, 
  3.827306078721638*^9}, {3.8396800042901373`*^9, 
  3.839680016036958*^9}},ExpressionUUID->"a9a28ba2-f75b-429c-85f2-\
ffdfb768adae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spolM", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Gender\>\"", "]"}], "\[Equal]", 
       "\"\<male\>\""}], " ", "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8267015036585484`*^9, 3.8267015627604003`*^9}, {
  3.826701602697527*^9, 3.826701611344936*^9}, {3.8267019390252686`*^9, 
  3.8267020234562044`*^9}, {3.826702082281486*^9, 3.826702092065048*^9}, {
  3.826702196233656*^9, 3.826702228968771*^9}, {3.826702317689595*^9, 
  3.826702331704957*^9}, {3.839669981730575*^9, 3.8396699954855947`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8dc2d149-5b81-41a8-8eb7-a19404426233"],

Cell[BoxData["524"], "Output",
 CellChangeTimes->{3.8396699981855984`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c1790ae5-a7f7-4d26-9340-95da633eeb3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spolZ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Gender\>\"", "]"}], "\[Equal]", 
       "\"\<female\>\""}], " ", "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8267023549382887`*^9, 3.826702360297661*^9}, {
  3.8267873942918797`*^9, 3.826787419914464*^9}, {3.8396700204306297`*^9, 
  3.8396700323206463`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e405838c-f056-4bf0-bf2d-d522d7a85a4d"],

Cell[BoxData["339"], "Output",
 CellChangeTimes->{3.839670034030648*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b5c4d0a7-587b-4f87-9608-48f271f70010"]
}, Open  ]],

Cell[CellGroupData[{

Cell["OBA SPOLA :", "Subsection",
 CellChangeTimes->{{3.8291212057791867`*^9, 3.8291212109850683`*^9}, {
   3.829121514585981*^9, 3.8291215145919905`*^9}, 
   3.829121559348299*^9},ExpressionUUID->"112e0d62-a4ca-4676-beeb-\
3910d12b0fbf"],

Cell["\<\
V seznamu z imenom seznamStarosti so zbrani podatki o starosti ljudi, ki so \
presadili ledvice. Podatki so prikazani tudi z histogramom.\
\>", "Text",
 CellChangeTimes->{{3.8267926845299945`*^9, 3.826792726207403*^9}, 
   3.827306002921709*^9, {3.8396801066969175`*^9, 
   3.8396801271485534`*^9}},ExpressionUUID->"5dd196db-b208-4689-9081-\
1b0db1ccd758"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznamStarosti", "=", " ", 
  RowBox[{"podatki", "[", 
   RowBox[{"All", ",", "\"\<Age\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.826787866788659*^9, 3.826787900154709*^9}, {
   3.826787958961908*^9, 3.8267879764263105`*^9}, 3.8273061157389364`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"eaa52ee9-89b3-4c67-b67d-027bc0e2d00f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Quantity[46, "Years"], 
       Quantity[51, "Years"], 
       Quantity[55, "Years"], 
       Quantity[57, "Years"], 
       Quantity[45, "Years"], 
       Quantity[43, "Years"], 
       Quantity[47, "Years"], 
       Quantity[65, "Years"], 
       Quantity[55, "Years"], 
       Quantity[44, "Years"], 
       Quantity[49, "Years"], 
       Quantity[52, "Years"], 
       Quantity[31, "Years"], 
       Quantity[63, "Years"], 
       Quantity[55, "Years"], 
       Quantity[50, "Years"], 
       Quantity[49, "Years"], 
       Quantity[35, "Years"], 
       Quantity[23, "Years"], 
       Quantity[57, "Years"], 
       Quantity[45, "Years"], 
       Quantity[41, "Years"], 
       Quantity[38, "Years"], 
       Quantity[55, "Years"], 
       Quantity[45, "Years"], 
       Quantity[44, "Years"], 
       Quantity[45, "Years"], 
       Quantity[65, "Years"], 
       Quantity[66, "Years"], 
       Quantity[57, "Years"], 
       Quantity[52, "Years"], 
       Quantity[38, "Years"], 
       Quantity[49, "Years"], 
       Quantity[44, "Years"], 
       Quantity[28, "Years"], 
       Quantity[64, "Years"], 
       Quantity[43, "Years"], 
       Quantity[11, "Years"], 
       Quantity[45, "Years"], 
       Quantity[59, "Years"], 
       Quantity[40, "Years"], 
       Quantity[65, "Years"], 
       Quantity[33, "Years"], 
       Quantity[53, "Years"], 
       Quantity[42, "Years"], 
       Quantity[51, "Years"], 
       Quantity[25, "Years"], 
       Quantity[33, "Years"], 
       Quantity[65, "Years"], 
       Quantity[42, "Years"], 
       Quantity[41, "Years"], 
       Quantity[68, "Years"], 
       Quantity[61, "Years"], 
       Quantity[19, "Years"], 
       Quantity[61, "Years"], 
       Quantity[42, "Years"], 
       Quantity[54, "Years"], 
       Quantity[43, "Years"], 
       Quantity[42, "Years"], 
       Quantity[37, "Years"], 
       Quantity[46, "Years"], 
       Quantity[42, "Years"], 
       Quantity[45, "Years"], 
       Quantity[28, "Years"], 
       Quantity[52, "Years"], 
       Quantity[32, "Years"], 
       Quantity[38, "Years"], 
       Quantity[35, "Years"], 
       Quantity[24, "Years"], 
       Quantity[46, "Years"], 
       Quantity[49, "Years"], 
       Quantity[49, "Years"], 
       Quantity[48, "Years"], 
       Quantity[62, "Years"], 
       Quantity[65, "Years"], 
       Quantity[38, "Years"], 
       Quantity[75, "Years"], 
       Quantity[48, "Years"], 
       Quantity[68, "Years"], 
       Quantity[39, "Years"], 
       Quantity[42, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[33, "Years"], 
       Quantity[66, "Years"], 
       Quantity[66, "Years"], 
       Quantity[53, "Years"], 
       Quantity[52, "Years"], 
       Quantity[51, "Years"], 
       Quantity[58, "Years"], 
       Quantity[63, "Years"], 
       Quantity[27, "Years"], 
       Quantity[48, "Years"], 
       Quantity[41, "Years"], 
       Quantity[28, "Years"], 
       Quantity[49, "Years"], 
       Quantity[42, "Years"], 
       Quantity[45, "Years"], 
       Quantity[44, "Years"], 
       Quantity[37, "Years"], 
       Quantity[56, "Years"], 
       Quantity[55, "Years"], 
       Quantity[42, "Years"], 
       Quantity[60, "Years"], 
       Quantity[66, "Years"], 
       Quantity[61, "Years"], 
       Quantity[57, "Years"], 
       Quantity[44, "Years"], 
       Quantity[67, "Years"], 
       Quantity[62, "Years"], 
       Quantity[54, "Years"], 
       Quantity[26, "Years"], 
       Quantity[57, "Years"], 
       Quantity[55, "Years"], 
       Quantity[54, "Years"], 
       Quantity[58, "Years"], 
       Quantity[56, "Years"], 
       Quantity[23, "Years"], 
       Quantity[21, "Years"], 
       Quantity[58, "Years"], 
       Quantity[47, "Years"], 
       Quantity[60, "Years"], 
       Quantity[55, "Years"], 
       Quantity[44, "Years"], 
       Quantity[50, "Years"], 
       Quantity[58, "Years"], 
       Quantity[53, "Years"], 
       Quantity[43, "Years"], 
       Quantity[40, "Years"], 
       Quantity[65, "Years"], 
       Quantity[34, "Years"], 
       Quantity[52, "Years"], 
       Quantity[62, "Years"], 
       Quantity[11, "Years"], 
       Quantity[70, "Years"], 
       Quantity[59, "Years"], 
       Quantity[53, "Years"], 
       Quantity[48, "Years"], 
       Quantity[25, "Years"], 
       Quantity[62, "Years"], 
       Quantity[17, "Years"], 
       Quantity[53, "Years"], 
       Quantity[57, "Years"], 
       Quantity[43, "Years"], 
       Quantity[45, "Years"], 
       Quantity[49, "Years"], 
       Quantity[24, "Years"], 
       Quantity[62, "Years"], 
       Quantity[48, "Years"], 
       Quantity[41, "Years"], 
       Quantity[42, "Years"], 
       Quantity[35, "Years"], 
       Quantity[46, "Years"], 
       Quantity[23, "Years"], 
       Quantity[56, "Years"], 
       Quantity[51, "Years"], 
       Quantity[45, "Years"], 
       Quantity[20, "Years"], 
       Quantity[34, "Years"], 
       Quantity[43, "Years"], 
       Quantity[62, "Years"], 
       Quantity[64, "Years"], 
       Quantity[18, "Years"], 
       Quantity[63, "Years"], 
       Quantity[54, "Years"], 
       Quantity[40, "Years"], 
       Quantity[51, "Years"], 
       Quantity[67, "Years"], 
       Quantity[40, "Years"], 
       Quantity[59, "Years"], 
       Quantity[46, "Years"], 
       Quantity[46, "Years"], 
       Quantity[36, "Years"], 
       Quantity[54, "Years"], 
       Quantity[42, "Years"], 
       Quantity[41, "Years"], 
       Quantity[67, "Years"], 
       Quantity[61, "Years"], 
       Quantity[38, "Years"], 
       Quantity[19, "Years"], 
       Quantity[27, "Years"], 
       Quantity[54, "Years"], 
       Quantity[26, "Years"], 
       Quantity[42, "Years"], 
       Quantity[58, "Years"], 
       Quantity[54, "Years"], 
       Quantity[45, "Years"], 
       Quantity[40, "Years"], 
       Quantity[57, "Years"], 
       Quantity[46, "Years"], 
       Quantity[37, "Years"], 
       Quantity[41, "Years"], 
       Quantity[51, "Years"], 
       Quantity[34, "Years"], 
       Quantity[53, "Years"], 
       Quantity[40, "Years"], 
       Quantity[38, "Years"], 
       Quantity[23, "Years"], 
       Quantity[21, "Years"], 
       Quantity[43, "Years"], 
       Quantity[40, "Years"], 
       Quantity[67, "Years"], 
       Quantity[36, "Years"], 
       Quantity[52, "Years"], 
       Quantity[37, "Years"], 
       Quantity[44, "Years"], 
       Quantity[33, "Years"], 
       Quantity[38, "Years"], 
       Quantity[25, "Years"], 
       Quantity[66, "Years"], 
       Quantity[49, "Years"], 
       Quantity[39, "Years"], 
       Quantity[45, "Years"], 
       Quantity[48, "Years"], 
       Quantity[58, "Years"], 
       Quantity[40, "Years"], 
       Quantity[48, "Years"], 
       Quantity[31, "Years"], 
       Quantity[45, "Years"], 
       Quantity[44, "Years"], 
       Quantity[33, "Years"], 
       Quantity[63, "Years"], 
       Quantity[33, "Years"], 
       Quantity[46, "Years"], 
       Quantity[64, "Years"], 
       Quantity[56, "Years"], 
       Quantity[56, "Years"], 
       Quantity[53, "Years"], 
       Quantity[30, "Years"], 
       Quantity[68, "Years"], 
       Quantity[48, "Years"], 
       Quantity[3, "Years"], 
       Quantity[67, "Years"], 
       Quantity[27, "Years"], 
       Quantity[33, "Years"], 
       Quantity[58, "Years"], 
       Quantity[61, "Years"], 
       Quantity[42, "Years"], 
       Quantity[41, "Years"], 
       Quantity[37, "Years"], 
       Quantity[38, "Years"], 
       Quantity[63, "Years"], 
       Quantity[46, "Years"], 
       Quantity[35, "Years"], 
       Quantity[22, "Years"], 
       Quantity[57, "Years"], 
       Quantity[49, "Years"], 
       Quantity[54, "Years"], 
       Quantity[30, "Years"], 
       Quantity[39, "Years"], 
       Quantity[28, "Years"], 
       Quantity[38, "Years"], 
       Quantity[46, "Years"], 
       Quantity[43, "Years"], 
       Quantity[35, "Years"], 
       Quantity[67, "Years"], 
       Quantity[60, "Years"], 
       Quantity[62, "Years"], 
       Quantity[53, "Years"], 
       Quantity[24, "Years"], 
       Quantity[34, "Years"], 
       Quantity[38, "Years"], 
       Quantity[31, "Years"], 
       Quantity[31, "Years"], 
       Quantity[34, "Years"], 
       Quantity[38, "Years"], 
       Quantity[49, "Years"], 
       Quantity[34, "Years"], 
       Quantity[41, "Years"], 
       Quantity[31, "Years"], 
       Quantity[31, "Years"], 
       Quantity[54, "Years"], 
       Quantity[40, "Years"], 
       Quantity[55, "Years"], 
       Quantity[42, "Years"], 
       Quantity[42, "Years"], 
       Quantity[34, "Years"], 
       Quantity[27, "Years"], 
       Quantity[25, "Years"], 
       Quantity[64, "Years"], 
       Quantity[52, "Years"], 
       Quantity[53, "Years"], 
       Quantity[55, "Years"], 
       Quantity[45, "Years"], 
       Quantity[32, "Years"], 
       Quantity[30, "Years"], 
       Quantity[56, "Years"], 
       Quantity[31, "Years"], 
       Quantity[38, "Years"], 
       Quantity[43, "Years"], 
       Quantity[41, "Years"], 
       Quantity[57, "Years"], 
       Quantity[44, "Years"], 
       Quantity[31, "Years"], 
       Quantity[38, "Years"], 
       Quantity[20, "Years"], 
       Quantity[20, "Years"], 
       Quantity[48, "Years"], 
       Quantity[40, "Years"], 
       Quantity[31, "Years"], 
       Quantity[61, "Years"], 
       Quantity[37, "Years"], 
       Quantity[41, "Years"], 
       Quantity[30, "Years"], 
       Quantity[31, "Years"], 
       Quantity[55, "Years"], 
       Quantity[32, "Years"], 
       Quantity[59, "Years"], 
       Quantity[57, "Years"], 
       Quantity[55, "Years"], 
       Quantity[52, "Years"], 
       Quantity[23, "Years"], 
       Quantity[59, "Years"], 
       Quantity[30, "Years"], 
       Quantity[25, "Years"], 
       Quantity[29, "Years"], 
       Quantity[30, "Years"], 
       Quantity[44, "Years"], 
       Quantity[40, "Years"], 
       Quantity[62, "Years"], 
       Quantity[32, "Years"], 
       Quantity[41, "Years"], 
       Quantity[38, "Years"], 
       Quantity[44, "Years"], 
       Quantity[47, "Years"], 
       Quantity[41, "Years"], 
       Quantity[38, "Years"], 
       Quantity[44, "Years"], 
       Quantity[11, "Years"], 
       Quantity[42, "Years"], 
       Quantity[31, "Years"], 
       Quantity[18, "Years"], 
       Quantity[38, "Years"], 
       Quantity[36, "Years"], 
       Quantity[47, "Years"], 
       Quantity[24, "Years"], 
       Quantity[45, "Years"], 
       Quantity[18, "Years"], 
       Quantity[28, "Years"], 
       Quantity[36, "Years"], 
       Quantity[55, "Years"], 
       Quantity[56, "Years"], 
       Quantity[20, "Years"], 
       Quantity[55, "Years"], 
       Quantity[47, "Years"], 
       Quantity[30, "Years"], 
       Quantity[37, "Years"], 
       Quantity[26, "Years"], 
       Quantity[61, "Years"], 
       Quantity[33, "Years"], 
       Quantity[38, "Years"], 
       Quantity[31, "Years"], 
       Quantity[34, "Years"], 
       Quantity[55, "Years"], 
       Quantity[40, "Years"], 
       Quantity[35, "Years"], 
       Quantity[36, "Years"], 
       Quantity[59, "Years"], 
       Quantity[40, "Years"], 
       Quantity[35, "Years"], 
       Quantity[12, "Years"], 
       Quantity[61, "Years"], 
       Quantity[44, "Years"], 
       Quantity[32, "Years"], 
       Quantity[12, "Years"], 
       Quantity[63, "Years"], 
       Quantity[32, "Years"], 
       Quantity[61, "Years"], 
       Quantity[35, "Years"], 
       Quantity[38, "Years"], 
       Quantity[55, "Years"], 
       Quantity[56, "Years"], 
       Quantity[38, "Years"], 
       Quantity[50, "Years"], 
       Quantity[2, "Years"], 
       Quantity[23, "Years"], 
       Quantity[51, "Years"], 
       Quantity[35, "Years"], 
       Quantity[38, "Years"], 
       Quantity[36, "Years"], 
       Quantity[25, "Years"], 
       Quantity[20, "Years"], 
       Quantity[36, "Years"], 
       Quantity[51, "Years"], 
       Quantity[51, "Years"], 
       Quantity[42, "Years"], 
       Quantity[39, "Years"], 
       Quantity[35, "Years"], 
       Quantity[24, "Years"], 
       Quantity[34, "Years"], 
       Quantity[37, "Years"], 
       Quantity[56, "Years"], 
       Quantity[25, "Years"], 
       Quantity[38, "Years"], 
       Quantity[41, "Years"], 
       Quantity[48, "Years"], 
       Quantity[25, "Years"], 
       Quantity[28, "Years"], 
       Quantity[56, "Years"], 
       Quantity[58, "Years"], 
       Quantity[45, "Years"], 
       Quantity[41, "Years"], 
       Quantity[47, "Years"], 
       Quantity[26, "Years"], 
       Quantity[65, "Years"], 
       Quantity[54, "Years"], 
       Quantity[51, "Years"], 
       Quantity[33, "Years"], 
       Quantity[53, "Years"], 
       Quantity[44, "Years"], 
       Quantity[55, "Years"], 
       Quantity[35, "Years"], 
       Quantity[59, "Years"], 
       Quantity[23, "Years"], 
       Quantity[39, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[61, "Years"], 
       Quantity[44, "Years"], 
       Quantity[36, "Years"], 
       Quantity[26, "Years"], 
       Quantity[46, "Years"], 
       Quantity[30, "Years"], 
       Quantity[42, "Years"], 
       Quantity[22, "Years"], 
       Quantity[41, "Years"], 
       Quantity[6, "Years"], 
       Quantity[29, "Years"], 
       Quantity[42, "Years"], 
       Quantity[40, "Years"], 
       Quantity[48, "Years"], 
       Quantity[31, "Years"], 
       Quantity[44, "Years"], 
       Quantity[58, "Years"], 
       Quantity[47, "Years"], 
       Quantity[55, "Years"], 
       Quantity[30, "Years"], 
       Quantity[47, "Years"], 
       Quantity[65, "Years"], 
       Quantity[45, "Years"], 
       Quantity[38, "Years"], 
       Quantity[27, "Years"], 
       Quantity[63, "Years"], 
       Quantity[55, "Years"], 
       Quantity[25, "Years"], 
       Quantity[36, "Years"], 
       Quantity[66, "Years"], 
       Quantity[57, "Years"], 
       Quantity[52, "Years"], 
       Quantity[60, "Years"], 
       Quantity[39, "Years"], 
       Quantity[51, "Years"], 
       Quantity[64, "Years"], 
       Quantity[46, "Years"], 
       Quantity[59, "Years"], 
       Quantity[23, "Years"], 
       Quantity[55, "Years"], 
       Quantity[43, "Years"], 
       Quantity[37, "Years"], 
       Quantity[22, "Years"], 
       Quantity[64, "Years"], 
       Quantity[59, "Years"], 
       Quantity[62, "Years"], 
       Quantity[48, "Years"], 
       Quantity[28, "Years"], 
       Quantity[59, "Years"], 
       Quantity[55, "Years"], 
       Quantity[66, "Years"], 
       Quantity[55, "Years"], 
       Quantity[52, "Years"], 
       Quantity[54, "Years"], 
       Quantity[38, "Years"], 
       Quantity[21, "Years"], 
       Quantity[48, "Years"], 
       Quantity[53, "Years"], 
       Quantity[30, "Years"], 
       Quantity[31, "Years"], 
       Quantity[54, "Years"], 
       Quantity[47, "Years"], 
       Quantity[32, "Years"], 
       Quantity[36, "Years"], 
       Quantity[57, "Years"], 
       Quantity[56, "Years"], 
       Quantity[45, "Years"], 
       Quantity[38, "Years"], 
       Quantity[47, "Years"], 
       Quantity[60, "Years"], 
       Quantity[65, "Years"], 
       Quantity[27, "Years"], 
       Quantity[55, "Years"], 
       Quantity[33, "Years"], 
       Quantity[46, "Years"], 
       Quantity[28, "Years"], 
       Quantity[56, "Years"], 
       Quantity[51, "Years"], 
       Quantity[22, "Years"], 
       Quantity[58, "Years"], 
       Quantity[28, "Years"], 
       Quantity[42, "Years"], 
       Quantity[28, "Years"], 
       Quantity[26, "Years"], 
       Quantity[32, "Years"], 
       Quantity[45, "Years"], 
       Quantity[53, "Years"], 
       Quantity[40, "Years"], 
       Quantity[45, "Years"], 
       Quantity[24, "Years"], 
       Quantity[51, "Years"], 
       Quantity[45, "Years"], 
       Quantity[52, "Years"], 
       Quantity[33, "Years"], 
       Quantity[47, "Years"], 
       Quantity[45, "Years"], 
       Quantity[41, "Years"], 
       Quantity[49, "Years"], 
       Quantity[54, "Years"], 
       Quantity[22, "Years"], 
       Quantity[39, "Years"], 
       Quantity[7, "Years"], 
       Quantity[50, "Years"], 
       Quantity[56, "Years"], 
       Quantity[49, "Years"], 
       Quantity[47, "Years"], 
       Quantity[28, "Years"], 
       Quantity[41, "Years"], 
       Quantity[60, "Years"], 
       Quantity[18, "Years"], 
       Quantity[41, "Years"], 
       Quantity[37, "Years"], 
       Quantity[71, "Years"], 
       Quantity[60, "Years"], 
       Quantity[42, "Years"], 
       Quantity[24, "Years"], 
       Quantity[56, "Years"], 
       Quantity[65, "Years"], 
       Quantity[31, "Years"], 
       Quantity[53, "Years"], 
       Quantity[56, "Years"], 
       Quantity[24, "Years"], 
       Quantity[30, "Years"], 
       Quantity[55, "Years"], 
       Quantity[55, "Years"], 
       Quantity[61, "Years"], 
       Quantity[60, "Years"], 
       Quantity[42, "Years"], 
       Quantity[52, "Years"], 
       Quantity[60, "Years"], 
       Quantity[55, "Years"], 
       Quantity[21, "Years"], 
       Quantity[62, "Years"], 
       Quantity[52, "Years"], 
       Quantity[40, "Years"], 
       Quantity[42, "Years"], 
       Quantity[35, "Years"], 
       Quantity[40, "Years"], 
       Quantity[62, "Years"], 
       Quantity[59, "Years"], 
       Quantity[31, "Years"], 
       Quantity[35, "Years"], 
       Quantity[51, "Years"], 
       Quantity[51, "Years"], 
       Quantity[14, "Years"], 
       Quantity[60, "Years"], 
       Quantity[68, "Years"], 
       Quantity[65, "Years"], 
       Quantity[31, "Years"], 
       Quantity[24, "Years"], 
       Quantity[48, "Years"], 
       Quantity[50, "Years"], 
       Quantity[42, "Years"], 
       Quantity[45, "Years"], 
       Quantity[37, "Years"], 
       Quantity[33, "Years"], 
       Quantity[54, "Years"], 
       Quantity[58, "Years"], 
       Quantity[64, "Years"], 
       Quantity[51, "Years"], 
       Quantity[41, "Years"], 
       Quantity[48, "Years"], 
       Quantity[51, "Years"], 
       Quantity[53, "Years"], 
       Quantity[23, "Years"], 
       Quantity[36, "Years"], 
       Quantity[41, "Years"], 
       Quantity[41, "Years"], 
       Quantity[42, "Years"], 
       Quantity[27, "Years"], 
       Quantity[59, "Years"], 
       Quantity[71, "Years"], 
       Quantity[60, "Years"], 
       Quantity[45, "Years"], 
       Quantity[22, "Years"], 
       Quantity[45, "Years"], 
       Quantity[53, "Years"], 
       Quantity[56, "Years"], 
       Quantity[52, "Years"], 
       Quantity[51, "Years"], 
       Quantity[31, "Years"], 
       Quantity[43, "Years"], 
       Quantity[56, "Years"], 
       Quantity[42, "Years"], 
       Quantity[55, "Years"], 
       Quantity[22, "Years"], 
       Quantity[65, "Years"], 
       Quantity[47, "Years"], 
       Quantity[49, "Years"], 
       Quantity[61, "Years"], 
       Quantity[51, "Years"], 
       Quantity[58, "Years"], 
       Quantity[44, "Years"], 
       Quantity[66, "Years"], 
       Quantity[48, "Years"], 
       Quantity[31, "Years"], 
       Quantity[44, "Years"], 
       Quantity[60, "Years"], 
       Quantity[28, "Years"], 
       Quantity[62, "Years"], 
       Quantity[40, "Years"], 
       Quantity[32, "Years"], 
       Quantity[62, "Years"], 
       Quantity[54, "Years"], 
       Quantity[53, "Years"], 
       Quantity[42, "Years"], 
       Quantity[51, "Years"], 
       Quantity[27, "Years"], 
       Quantity[36, "Years"], 
       Quantity[41, "Years"], 
       Quantity[24, "Years"], 
       Quantity[17, "Years"], 
       Quantity[59, "Years"], 
       Quantity[28, "Years"], 
       Quantity[30, "Years"], 
       Quantity[33, "Years"], 
       Quantity[23, "Years"], 
       Quantity[42, "Years"], 
       Quantity[26, "Years"], 
       Quantity[37, "Years"], 
       Quantity[68, "Years"], 
       Quantity[58, "Years"], 
       Quantity[24, "Years"], 
       Quantity[61, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[48, "Years"], 
       Quantity[46, "Years"], 
       Quantity[36, "Years"], 
       Quantity[43, "Years"], 
       Quantity[29, "Years"], 
       Quantity[63, "Years"], 
       Quantity[48, "Years"], 
       Quantity[64, "Years"], 
       Quantity[32, "Years"], 
       Quantity[30, "Years"], 
       Quantity[39, "Years"], 
       Quantity[17, "Years"], 
       Quantity[31, "Years"], 
       Quantity[23, "Years"], 
       Quantity[48, "Years"], 
       Quantity[40, "Years"], 
       Quantity[43, "Years"], 
       Quantity[25, "Years"], 
       Quantity[48, "Years"], 
       Quantity[35, "Years"], 
       Quantity[32, "Years"], 
       Quantity[60, "Years"], 
       Quantity[21, "Years"], 
       Quantity[41, "Years"], 
       Quantity[39, "Years"], 
       Quantity[28, "Years"], 
       Quantity[55, "Years"], 
       Quantity[22, "Years"], 
       Quantity[61, "Years"], 
       Quantity[38, "Years"], 
       Quantity[32, "Years"], 
       Quantity[46, "Years"], 
       Quantity[33, "Years"], 
       Quantity[37, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[27, "Years"], 
       Quantity[54, "Years"], 
       Quantity[33, "Years"], 
       Quantity[27, "Years"], 
       Quantity[67, "Years"], 
       Quantity[46, "Years"], 
       Quantity[40, "Years"], 
       Quantity[48, "Years"], 
       Quantity[57, "Years"], 
       Quantity[45, "Years"], 
       Quantity[45, "Years"], 
       Quantity[38, "Years"], 
       Quantity[32, "Years"], 
       Quantity[47, "Years"], 
       Quantity[49, "Years"], 
       Quantity[37, "Years"], 
       Quantity[39, "Years"], 
       Quantity[41, "Years"], 
       Quantity[24, "Years"], 
       Quantity[40, "Years"], 
       Quantity[67, "Years"], 
       Quantity[5, "Years"], 
       Quantity[35, "Years"], 
       Quantity[23, "Years"], 
       Quantity[52, "Years"], 
       Quantity[25, "Years"], 
       Quantity[51, "Years"], 
       Quantity[47, "Years"], 
       Quantity[34, "Years"], 
       Quantity[59, "Years"], 
       Quantity[50, "Years"], 
       Quantity[35, "Years"], 
       Quantity[47, "Years"], 
       Quantity[13, "Years"], 
       Quantity[27, "Years"], 
       Quantity[51, "Years"], 
       Quantity[57, "Years"], 
       Quantity[28, "Years"], 
       Quantity[27, "Years"], 
       Quantity[50, "Years"], 
       Quantity[17, "Years"], 
       Quantity[41, "Years"], 
       Quantity[45, "Years"], 
       Quantity[55, "Years"], 
       Quantity[41, "Years"], 
       Quantity[49, "Years"], 
       Quantity[44, "Years"], 
       Quantity[21, "Years"], 
       Quantity[21, "Years"], 
       Quantity[42, "Years"], 
       Quantity[58, "Years"], 
       Quantity[47, "Years"], 
       Quantity[25, "Years"], 
       Quantity[28, "Years"], 
       Quantity[28, "Years"], 
       Quantity[17, "Years"], 
       Quantity[1, "Years"], 
       Quantity[61, "Years"], 
       Quantity[23, "Years"], 
       Quantity[32, "Years"], 
       Quantity[64, "Years"], 
       Quantity[8, "Years"], 
       Quantity[31, "Years"], 
       Quantity[41, "Years"], 
       Quantity[26, "Years"], 
       Quantity[30, "Years"], 
       Quantity[47, "Years"], 
       Quantity[48, "Years"], 
       Quantity[43, "Years"], 
       Quantity[39, "Years"], 
       Quantity[31, "Years"], 
       Quantity[22, "Years"], 
       Quantity[24, "Years"], 
       Quantity[51, "Years"], 
       Quantity[53, "Years"], 
       Quantity[59, "Years"], 
       Quantity[52, "Years"], 
       Quantity[33, "Years"], 
       Quantity[46, "Years"], 
       Quantity[29, "Years"], 
       Quantity[23, "Years"], 
       Quantity[51, "Years"], 
       Quantity[21, "Years"], 
       Quantity[24, "Years"], 
       Quantity[52, "Years"], 
       Quantity[12, "Years"], 
       Quantity[49, "Years"], 
       Quantity[24, "Years"], 
       Quantity[23, "Years"], 
       Quantity[44, "Years"], 
       Quantity[27, "Years"], 
       Quantity[33, "Years"], 
       Quantity[61, "Years"], 
       Quantity[40, "Years"], 
       Quantity[42, "Years"], 
       Quantity[53, "Years"], 
       Quantity[14, "Years"], 
       Quantity[23, "Years"], 
       Quantity[22, "Years"], 
       Quantity[36, "Years"], 
       Quantity[39, "Years"], 
       Quantity[26, "Years"], 
       Quantity[32, "Years"], 
       Quantity[48, "Years"], 
       Quantity[63, "Years"], 
       Quantity[38, "Years"], 
       Quantity[27, "Years"], 
       Quantity[32, "Years"], 
       Quantity[25, "Years"], 
       Quantity[47, "Years"], 
       Quantity[28, "Years"], 
       Quantity[20, "Years"], 
       Quantity[38, "Years"], 
       Quantity[23, "Years"], 
       Quantity[41, "Years"], 
       Quantity[33, "Years"], 
       Quantity[34, "Years"], 
       Quantity[20, "Years"], 
       Quantity[16, "Years"], 
       Quantity[40, "Years"], 
       Quantity[23, "Years"], 
       Quantity[30, "Years"], 
       Quantity[22, "Years"], 
       Quantity[43, "Years"], 
       Quantity[29, "Years"], 
       Quantity[39, "Years"], 
       Quantity[48, "Years"], 
       Quantity[66, "Years"], 
       Quantity[56, "Years"], 
       Quantity[40, "Years"], 
       Quantity[57, "Years"], 
       Quantity[39, "Years"], 
       Quantity[54, "Years"], 
       Quantity[25, "Years"], 
       Quantity[64, "Years"], 
       Quantity[57, "Years"], 
       Quantity[27, "Years"], 
       Quantity[59, "Years"], 
       Quantity[44, "Years"], 
       Quantity[54, "Years"], 
       Quantity[36, "Years"], 
       Quantity[55, "Years"], 
       Quantity[43, "Years"], 
       Quantity[35, "Years"], 
       Quantity[33, "Years"], 
       Quantity[38, "Years"], 
       Quantity[31, "Years"], 
       Quantity[59, "Years"], 
       Quantity[46, "Years"], 
       Quantity[41, "Years"], 
       Quantity[64, "Years"], 
       Quantity[41, "Years"], 
       Quantity[55, "Years"], 
       Quantity[37, "Years"], 
       Quantity[50, "Years"], 
       Quantity[44, "Years"], 
       Quantity[42, "Years"], 
       Quantity[42, "Years"], 
       Quantity[48, "Years"], 
       Quantity[13, "Years"], 
       Quantity[23, "Years"], 
       Quantity[55, "Years"], 
       Quantity[41, "Years"], 
       Quantity[43, "Years"], 
       Quantity[25, "Years"], 
       Quantity[41, "Years"], 
       Quantity[44, "Years"], 
       Quantity[39, "Years"], 
       Quantity[52, "Years"], 
       Quantity[48, "Years"], 
       Quantity[52, "Years"], 
       Quantity[61, "Years"], 
       Quantity[49, "Years"], 
       Quantity[54, "Years"], 
       Quantity[45, "Years"], 
       Quantity[21, "Years"], 
       Quantity[20, "Years"], 
       Quantity[48, "Years"], 
       Quantity[54, "Years"], 
       Quantity[20, "Years"], 
       Quantity[55, "Years"], 
       Quantity[56, "Years"], 
       Quantity[43, "Years"], 
       Quantity[52, "Years"]}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 75], 120, 6, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Years"]], 863], "Meta" -> 
     Association["ID" -> 177524125399744], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 75], 120, 6, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Years"]], 863], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     144, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"47", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"31", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"63", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"50", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"23", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"64", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"59", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"40", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"53", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"25", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"68", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"61", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"19", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"61", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"54", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"37", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{61}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{62}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{63}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{64}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{65}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"32", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{66}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{67}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{68}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{69}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{70}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{71}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{72}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"48", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{73}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{74}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{75}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{76}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"75", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{77}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"48", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{78}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"68", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{79}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"39", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{80}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{81}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"37", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{82}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{83}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{84}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{85}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{86}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"53", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{87}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{88}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{89}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"58", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{90}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"63", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{91}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"27", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{92}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"48", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{93}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{94}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{95}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{96}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{97}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{98}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{99}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"37", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{100}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{101}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{102}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{103}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"60", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{104}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{105}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"61", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{106}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{107}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{108}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"67", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{109}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{110}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"54", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{111}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"26", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{112}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{113}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{114}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"54", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{115}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"58", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{116}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{117}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"23", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{118}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"21", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{119}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"58", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{120}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{535., {254.5, 261.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{535., {254.5, 261.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8396701769358487`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"17e08edd-0c91-474d-ae5b-2e477ece971e"]
}, Open  ]],

Cell[TextData[{
 "Histrogram predstavlja podatke  glede na starost za ",
 StyleBox["oba spola",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.828600321273281*^9, 3.828600339133752*^9}, {
  3.8286003891421547`*^9, 3.8286004198221726`*^9}, {3.839680168613426*^9, 
  3.83968017073503*^9}},ExpressionUUID->"966188f1-e6de-4cad-ad46-\
c9ae7e4fd7c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"seznamStarosti", ",", 
   RowBox[{"ChartStyle", "\[Rule]", "Brown"}], ",", " ", 
   RowBox[{"BarOrigin", "\[Rule]", "Left"}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "After"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"800", ",", "550"}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Mo\[SHacek]ki in \[ZHacek]enske\>\"", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Prikaz vseh oseb,ki so do\[ZHacek]ivele presaditev ledvic po letih\>\
\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[CapitalSHacek]tevilo oseb\>\"", ",", "\"\<Starost\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.826787987364297*^9, 3.8267879966124763`*^9}, {
   3.827305021883134*^9, 3.8273050279301777`*^9}, {3.8286004014311104`*^9, 
   3.8286004559349985`*^9}, {3.828600547215251*^9, 3.8286005927182584`*^9}, {
   3.8286010188227997`*^9, 3.828601045077853*^9}, {3.828601093302494*^9, 
   3.828601101526495*^9}, {3.8286012988697557`*^9, 3.828601322358695*^9}, 
   3.828601357142784*^9, {3.8286019878144073`*^9, 3.828601995949397*^9}, {
   3.828602635911004*^9, 3.828602702406877*^9}, {3.828603188510414*^9, 
   3.82860319247005*^9}, {3.828603391246321*^9, 3.828603405010129*^9}, {
   3.8286037446142435`*^9, 3.82860375918113*^9}, {3.8286039733970613`*^9, 
   3.8286040332768164`*^9}, {3.8286043179105086`*^9, 3.828604318325345*^9}, {
   3.828604370614911*^9, 3.828604371333647*^9}, {3.8286044303099623`*^9, 
   3.8286044330299463`*^9}, {3.839670229880923*^9, 3.8396702469709463`*^9}, {
   3.8396702845559993`*^9, 3.839670290251007*^9}, {3.839670331736065*^9, 
   3.839670346036085*^9}, {3.8396705782414103`*^9, 3.839670584281419*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f830bc83-a3f7-4825-b358-0d2d29c9b96e"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.6789999999999999]]], 
       RGBColor[0.6, 0.4, 0.2]], {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.6789999999999999]]], 
         RGBColor[0.6, 0.4, 0.2]], {{{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 0.}, {3., 5.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 5.}, {4., 10.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 10.}, {10., 15.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 15.}, {12., 20.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 20.}, {63., 25.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 25.}, {62., 30.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 30.}, {84., 35.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 35.}, {95., 40.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 40.}, {128., 45.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 45.}, {113., 50.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 50.}, {90., 55.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 55.}, {98., 60.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 60.}, {63., 65.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 65.}, {34., 70.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 70.}, {3., 75.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0, 75.}, {1., 80.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}}}, {}, {}}}, {{{}, 
       InsetBox[
        FormBox[
         StyleBox["3", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {3., 2.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["4", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {4., 7.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["10", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {10., 12.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["12", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {12., 17.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["63", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {63., 22.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["62", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {62., 27.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["84", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {84., 32.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["95", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {95., 37.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["128", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {128., 42.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["113", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {113., 47.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["90", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {90., 52.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["98", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {98., 57.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["63", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {63., 62.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["34", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {34., 67.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["3", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {3., 72.5}], 
        ImageScaled[{0, 0.5}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["1", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{6, 0}, {1., 77.5}], 
        ImageScaled[{0, 0.5}]]}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"\[CapitalSHacek]tevilo oseb\"", TraditionalForm], 
       FormBox["\"Starost\"", TraditionalForm]}, AxesOrigin -> {0, -1.6}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {800, 550}, PlotLabel -> 
     FormBox["\"Prikaz vseh oseb,ki so do\[ZHacek]ivele presaditev ledvic po \
letih\"", TraditionalForm], PlotRange -> {{All, All}, {0., 80.}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.05]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Mo\[SHacek]ki in \[ZHacek]enske\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6789999999999999]]], 
                    RGBColor[0.6, 0.4, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6789999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.6`", ",", "0.4`", ",", "0.2`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.83967030620103*^9, 3.839670350871092*^9, 
  3.839670587551423*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"d6c54124-3182-401b-84bf-19a2937814ab"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalZHacek]ENSKE :", "Subsection",
 CellChangeTimes->{{3.8291212266238403`*^9, 
  3.8291212346979713`*^9}},ExpressionUUID->"8649a981-22e8-4bde-8eb7-\
fb240cfd03ef"],

Cell[TextData[{
 "V seznamu z imenom seznamZenske so zbrani podatki o starosti ",
 StyleBox["\[ZHacek]ensk",
  FontWeight->"Bold"],
 " in spodaj prikazani z histogramom."
}], "Text",
 CellChangeTimes->{{3.826792731154395*^9, 3.826792747271515*^9}, {
  3.826792799751442*^9, 
  3.82679281019198*^9}},ExpressionUUID->"5885bc31-25cd-4477-af59-\
f8c8b37e745e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznamZenske", " ", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Gender\>\"", "]"}], "\[Equal]", 
       "\"\<female\>\""}], " ", "&"}]}], "]"}], "[", 
   RowBox[{"All", ",", "\"\<Age\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.82678804255795*^9, 3.826788057952603*^9}, {
   3.8267880899775944`*^9, 3.826788156474512*^9}, 3.828602018070644*^9, {
   3.8396704269561987`*^9, 3.839670443146221*^9}, {3.839670483926278*^9, 
   3.8396704844112787`*^9}, {3.8396808704016585`*^9, 3.8396808709320593`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"f97ace9c-aad9-4f5e-a85d-ec9985e1589a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Quantity[41, "Years"], 
       Quantity[60, "Years"], 
       Quantity[18, "Years"], 
       Quantity[41, "Years"], 
       Quantity[37, "Years"], 
       Quantity[71, "Years"], 
       Quantity[60, "Years"], 
       Quantity[42, "Years"], 
       Quantity[24, "Years"], 
       Quantity[56, "Years"], 
       Quantity[65, "Years"], 
       Quantity[31, "Years"], 
       Quantity[53, "Years"], 
       Quantity[56, "Years"], 
       Quantity[24, "Years"], 
       Quantity[30, "Years"], 
       Quantity[55, "Years"], 
       Quantity[55, "Years"], 
       Quantity[61, "Years"], 
       Quantity[60, "Years"], 
       Quantity[42, "Years"], 
       Quantity[52, "Years"], 
       Quantity[60, "Years"], 
       Quantity[55, "Years"], 
       Quantity[21, "Years"], 
       Quantity[62, "Years"], 
       Quantity[52, "Years"], 
       Quantity[40, "Years"], 
       Quantity[42, "Years"], 
       Quantity[35, "Years"], 
       Quantity[40, "Years"], 
       Quantity[62, "Years"], 
       Quantity[59, "Years"], 
       Quantity[31, "Years"], 
       Quantity[35, "Years"], 
       Quantity[51, "Years"], 
       Quantity[51, "Years"], 
       Quantity[14, "Years"], 
       Quantity[60, "Years"], 
       Quantity[68, "Years"], 
       Quantity[65, "Years"], 
       Quantity[31, "Years"], 
       Quantity[24, "Years"], 
       Quantity[48, "Years"], 
       Quantity[50, "Years"], 
       Quantity[42, "Years"], 
       Quantity[45, "Years"], 
       Quantity[37, "Years"], 
       Quantity[33, "Years"], 
       Quantity[54, "Years"], 
       Quantity[58, "Years"], 
       Quantity[64, "Years"], 
       Quantity[51, "Years"], 
       Quantity[41, "Years"], 
       Quantity[48, "Years"], 
       Quantity[51, "Years"], 
       Quantity[53, "Years"], 
       Quantity[23, "Years"], 
       Quantity[36, "Years"], 
       Quantity[41, "Years"], 
       Quantity[41, "Years"], 
       Quantity[42, "Years"], 
       Quantity[27, "Years"], 
       Quantity[59, "Years"], 
       Quantity[71, "Years"], 
       Quantity[60, "Years"], 
       Quantity[45, "Years"], 
       Quantity[22, "Years"], 
       Quantity[45, "Years"], 
       Quantity[53, "Years"], 
       Quantity[56, "Years"], 
       Quantity[52, "Years"], 
       Quantity[51, "Years"], 
       Quantity[31, "Years"], 
       Quantity[43, "Years"], 
       Quantity[56, "Years"], 
       Quantity[42, "Years"], 
       Quantity[55, "Years"], 
       Quantity[22, "Years"], 
       Quantity[65, "Years"], 
       Quantity[47, "Years"], 
       Quantity[49, "Years"], 
       Quantity[61, "Years"], 
       Quantity[51, "Years"], 
       Quantity[58, "Years"], 
       Quantity[44, "Years"], 
       Quantity[66, "Years"], 
       Quantity[48, "Years"], 
       Quantity[31, "Years"], 
       Quantity[44, "Years"], 
       Quantity[60, "Years"], 
       Quantity[28, "Years"], 
       Quantity[62, "Years"], 
       Quantity[40, "Years"], 
       Quantity[32, "Years"], 
       Quantity[62, "Years"], 
       Quantity[54, "Years"], 
       Quantity[53, "Years"], 
       Quantity[42, "Years"], 
       Quantity[51, "Years"], 
       Quantity[27, "Years"], 
       Quantity[36, "Years"], 
       Quantity[41, "Years"], 
       Quantity[24, "Years"], 
       Quantity[17, "Years"], 
       Quantity[59, "Years"], 
       Quantity[28, "Years"], 
       Quantity[30, "Years"], 
       Quantity[33, "Years"], 
       Quantity[23, "Years"], 
       Quantity[42, "Years"], 
       Quantity[26, "Years"], 
       Quantity[37, "Years"], 
       Quantity[68, "Years"], 
       Quantity[58, "Years"], 
       Quantity[24, "Years"], 
       Quantity[61, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[48, "Years"], 
       Quantity[46, "Years"], 
       Quantity[36, "Years"], 
       Quantity[43, "Years"], 
       Quantity[29, "Years"], 
       Quantity[63, "Years"], 
       Quantity[48, "Years"], 
       Quantity[64, "Years"], 
       Quantity[32, "Years"], 
       Quantity[30, "Years"], 
       Quantity[39, "Years"], 
       Quantity[17, "Years"], 
       Quantity[31, "Years"], 
       Quantity[23, "Years"], 
       Quantity[48, "Years"], 
       Quantity[40, "Years"], 
       Quantity[43, "Years"], 
       Quantity[25, "Years"], 
       Quantity[48, "Years"], 
       Quantity[35, "Years"], 
       Quantity[32, "Years"], 
       Quantity[60, "Years"], 
       Quantity[21, "Years"], 
       Quantity[41, "Years"], 
       Quantity[39, "Years"], 
       Quantity[28, "Years"], 
       Quantity[55, "Years"], 
       Quantity[22, "Years"], 
       Quantity[61, "Years"], 
       Quantity[38, "Years"], 
       Quantity[32, "Years"], 
       Quantity[46, "Years"], 
       Quantity[33, "Years"], 
       Quantity[37, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[27, "Years"], 
       Quantity[54, "Years"], 
       Quantity[33, "Years"], 
       Quantity[27, "Years"], 
       Quantity[67, "Years"], 
       Quantity[46, "Years"], 
       Quantity[40, "Years"], 
       Quantity[48, "Years"], 
       Quantity[57, "Years"], 
       Quantity[45, "Years"], 
       Quantity[45, "Years"], 
       Quantity[38, "Years"], 
       Quantity[32, "Years"], 
       Quantity[47, "Years"], 
       Quantity[49, "Years"], 
       Quantity[37, "Years"], 
       Quantity[39, "Years"], 
       Quantity[41, "Years"], 
       Quantity[24, "Years"], 
       Quantity[40, "Years"], 
       Quantity[67, "Years"], 
       Quantity[5, "Years"], 
       Quantity[35, "Years"], 
       Quantity[23, "Years"], 
       Quantity[52, "Years"], 
       Quantity[25, "Years"], 
       Quantity[51, "Years"], 
       Quantity[47, "Years"], 
       Quantity[34, "Years"], 
       Quantity[59, "Years"], 
       Quantity[50, "Years"], 
       Quantity[35, "Years"], 
       Quantity[47, "Years"], 
       Quantity[13, "Years"], 
       Quantity[27, "Years"], 
       Quantity[51, "Years"], 
       Quantity[57, "Years"], 
       Quantity[28, "Years"], 
       Quantity[27, "Years"], 
       Quantity[50, "Years"], 
       Quantity[17, "Years"], 
       Quantity[41, "Years"], 
       Quantity[45, "Years"], 
       Quantity[55, "Years"], 
       Quantity[41, "Years"], 
       Quantity[49, "Years"], 
       Quantity[44, "Years"], 
       Quantity[21, "Years"], 
       Quantity[21, "Years"], 
       Quantity[42, "Years"], 
       Quantity[58, "Years"], 
       Quantity[47, "Years"], 
       Quantity[25, "Years"], 
       Quantity[28, "Years"], 
       Quantity[28, "Years"], 
       Quantity[17, "Years"], 
       Quantity[1, "Years"], 
       Quantity[61, "Years"], 
       Quantity[23, "Years"], 
       Quantity[32, "Years"], 
       Quantity[64, "Years"], 
       Quantity[8, "Years"], 
       Quantity[31, "Years"], 
       Quantity[41, "Years"], 
       Quantity[26, "Years"], 
       Quantity[30, "Years"], 
       Quantity[47, "Years"], 
       Quantity[48, "Years"], 
       Quantity[43, "Years"], 
       Quantity[39, "Years"], 
       Quantity[31, "Years"], 
       Quantity[22, "Years"], 
       Quantity[24, "Years"], 
       Quantity[51, "Years"], 
       Quantity[53, "Years"], 
       Quantity[59, "Years"], 
       Quantity[52, "Years"], 
       Quantity[33, "Years"], 
       Quantity[46, "Years"], 
       Quantity[29, "Years"], 
       Quantity[23, "Years"], 
       Quantity[51, "Years"], 
       Quantity[21, "Years"], 
       Quantity[24, "Years"], 
       Quantity[52, "Years"], 
       Quantity[12, "Years"], 
       Quantity[49, "Years"], 
       Quantity[24, "Years"], 
       Quantity[23, "Years"], 
       Quantity[44, "Years"], 
       Quantity[27, "Years"], 
       Quantity[33, "Years"], 
       Quantity[61, "Years"], 
       Quantity[40, "Years"], 
       Quantity[42, "Years"], 
       Quantity[53, "Years"], 
       Quantity[14, "Years"], 
       Quantity[23, "Years"], 
       Quantity[22, "Years"], 
       Quantity[36, "Years"], 
       Quantity[39, "Years"], 
       Quantity[26, "Years"], 
       Quantity[32, "Years"], 
       Quantity[48, "Years"], 
       Quantity[63, "Years"], 
       Quantity[38, "Years"], 
       Quantity[27, "Years"], 
       Quantity[32, "Years"], 
       Quantity[25, "Years"], 
       Quantity[47, "Years"], 
       Quantity[28, "Years"], 
       Quantity[20, "Years"], 
       Quantity[38, "Years"], 
       Quantity[23, "Years"], 
       Quantity[41, "Years"], 
       Quantity[33, "Years"], 
       Quantity[34, "Years"], 
       Quantity[20, "Years"], 
       Quantity[16, "Years"], 
       Quantity[40, "Years"], 
       Quantity[23, "Years"], 
       Quantity[30, "Years"], 
       Quantity[22, "Years"], 
       Quantity[43, "Years"], 
       Quantity[29, "Years"], 
       Quantity[39, "Years"], 
       Quantity[48, "Years"], 
       Quantity[66, "Years"], 
       Quantity[56, "Years"], 
       Quantity[40, "Years"], 
       Quantity[57, "Years"], 
       Quantity[39, "Years"], 
       Quantity[54, "Years"], 
       Quantity[25, "Years"], 
       Quantity[64, "Years"], 
       Quantity[57, "Years"], 
       Quantity[27, "Years"], 
       Quantity[59, "Years"], 
       Quantity[44, "Years"], 
       Quantity[54, "Years"], 
       Quantity[36, "Years"], 
       Quantity[55, "Years"], 
       Quantity[43, "Years"], 
       Quantity[35, "Years"], 
       Quantity[33, "Years"], 
       Quantity[38, "Years"], 
       Quantity[31, "Years"], 
       Quantity[59, "Years"], 
       Quantity[46, "Years"], 
       Quantity[41, "Years"], 
       Quantity[64, "Years"], 
       Quantity[41, "Years"], 
       Quantity[55, "Years"], 
       Quantity[37, "Years"], 
       Quantity[50, "Years"], 
       Quantity[44, "Years"], 
       Quantity[42, "Years"], 
       Quantity[42, "Years"], 
       Quantity[48, "Years"], 
       Quantity[13, "Years"], 
       Quantity[23, "Years"], 
       Quantity[55, "Years"], 
       Quantity[41, "Years"], 
       Quantity[43, "Years"], 
       Quantity[25, "Years"], 
       Quantity[41, "Years"], 
       Quantity[44, "Years"], 
       Quantity[39, "Years"], 
       Quantity[52, "Years"], 
       Quantity[48, "Years"], 
       Quantity[52, "Years"], 
       Quantity[61, "Years"], 
       Quantity[49, "Years"], 
       Quantity[54, "Years"], 
       Quantity[45, "Years"], 
       Quantity[21, "Years"], 
       Quantity[20, "Years"], 
       Quantity[48, "Years"], 
       Quantity[54, "Years"], 
       Quantity[20, "Years"], 
       Quantity[55, "Years"], 
       Quantity[56, "Years"], 
       Quantity[43, "Years"], 
       Quantity[52, "Years"]}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[113, 3, 339, 75], 60, 3, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Years"]], 339], "Meta" -> 
     Association["ID" -> 182905719432331], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[113, 3, 339, 75], 60, 3, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Years"]], 339], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     113, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"60", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"18", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"37", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"71", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"60", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"31", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"53", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"30", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"61", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"60", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"60", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"21", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"40", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"40", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"59", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"31", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"14", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"60", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"68", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"31", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"48", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"50", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"37", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"54", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"58", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"64", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"48", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"53", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"23", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"36", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 113, 1], {1, 113 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 113, 1], {1, 113 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    339, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    339, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 113, 1], {1, 113 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 113, 1], {1, 113 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{286., {254.5, 261.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{286., {254.5, 261.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839670445256224*^9, 3.839670487016283*^9, 
  3.839680875034867*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"3f22757f-051a-49df-8a46-b0e7cd0e881f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"seznamZenske", ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<\[CapitalZHacek]enske\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "Red"}], ",", " ", 
   RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"500", ",", "300"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Prikaz \[ZHacek]ensk, ki so do\[ZHacek]ivele presaditev ledvic, po \
starosti\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Starost\>\"", ",", "\"\<\[CapitalSHacek]tevilo oseb\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8267881393550453`*^9, 3.8267881465009117`*^9}, {
  3.828600597726639*^9, 3.8286006272216387`*^9}, {3.8286010794706635`*^9, 
  3.828601083270318*^9}, {3.828601326871359*^9, 3.828601350286023*^9}, {
  3.8286019761189413`*^9, 3.82860197727099*^9}, {3.828602661885765*^9, 
  3.8286026721341553`*^9}, {3.8286036207182026`*^9, 3.8286036317895155`*^9}, {
  3.828603684758792*^9, 3.828603702645318*^9}, {3.828604082062947*^9, 
  3.8286041015986023`*^9}, {3.828604358669783*^9, 3.8286043657503233`*^9}, {
  3.8286044884775915`*^9, 3.8286044908856373`*^9}, {3.828604556749733*^9, 
  3.828604558014016*^9}, {3.83967052088133*^9, 3.8396705668013945`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b0f0971a-d9df-4553-a430-f45998aa79d3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.581]]], 
       RGBColor[1, 0, 0]], {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.581]]], 
         RGBColor[1, 0, 0]], {{{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {5., 1.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0}, {10., 2.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {15., 5.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{15., 0}, {20., 6.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{20., 0}, {25., 36.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{25., 0}, {30., 28.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{30., 0}, {35., 32.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{35., 0}, {40., 32.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{40., 0}, {45., 52.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{45., 0}, {50., 40.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50., 0}, {55., 37.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{55., 0}, {60., 31.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{60., 0}, {65., 26.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{65., 0}, {70., 9.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{70., 0}, {75., 2.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}}}, {}, {}}}, {{{}, 
       InsetBox[
        FormBox[
         StyleBox["1", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2.5, 1.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["2", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {7.5, 2.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["5", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {12.5, 5.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["6", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {17.5, 6.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["36", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {22.5, 36.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["28", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {27.5, 28.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["32", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {32.5, 32.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["32", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {37.5, 32.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["52", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {42.5, 52.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["40", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {47.5, 40.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["37", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {52.5, 37.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["31", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {57.5, 31.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["26", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {62.5, 26.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["9", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {67.5, 9.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["2", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {72.5, 2.}], 
        ImageScaled[{0.5, 0}]]}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Starost\"", TraditionalForm], 
       FormBox["\"\[CapitalSHacek]tevilo oseb\"", TraditionalForm]}, 
     AxesOrigin -> {-1.5, 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {500, 300}, PlotLabel -> 
     FormBox["\"Prikaz \[ZHacek]ensk, ki so do\[ZHacek]ivele presaditev \
ledvic, po starosti\"", TraditionalForm], 
     PlotRange -> {{0., 75.}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"\[CapitalZHacek]enske\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.581]]], 
                    RGBColor[1, 0, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.581`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8396705696213984`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e059fc90-22ea-4401-a097-cf9a25dc2816"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MO\[CapitalSHacek]KI :", "Subsection",
 CellChangeTimes->{{3.8291212467098413`*^9, 
  3.829121251964017*^9}},ExpressionUUID->"09562cd7-0553-4534-9d05-\
a36ec96dea1c"],

Cell[TextData[{
 "V seznamu z imenom seznamMoski so zbrani podatki o starosti ",
 StyleBox["mo\[SHacek]kih",
  FontWeight->"Bold"],
 " in spodaj prikazani z histogramom."
}], "Text",
 CellChangeTimes->{{3.8267928144014573`*^9, 
  3.82679283584696*^9}},ExpressionUUID->"04d42265-7347-4f5c-a8de-\
f9dfce80796e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznamMoski", "=", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Gender\>\"", "]"}], "\[Equal]", 
       "\"\<male\>\""}], " ", "&"}]}], "]"}], "[", 
   RowBox[{"All", ",", "\"\<Age\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.826788059731736*^9, 3.8267880626010213`*^9}, {
   3.8267880945853863`*^9, 3.826788096177809*^9}, {3.8267881353557825`*^9, 
   3.8267881541220727`*^9}, 3.8286020252380314`*^9, {3.8396706246414757`*^9, 
   3.839670637251493*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"e75e67af-9fcf-4383-b7b7-569dc60bb0d3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Quantity[46, "Years"], 
       Quantity[51, "Years"], 
       Quantity[55, "Years"], 
       Quantity[57, "Years"], 
       Quantity[45, "Years"], 
       Quantity[43, "Years"], 
       Quantity[47, "Years"], 
       Quantity[65, "Years"], 
       Quantity[55, "Years"], 
       Quantity[44, "Years"], 
       Quantity[49, "Years"], 
       Quantity[52, "Years"], 
       Quantity[31, "Years"], 
       Quantity[63, "Years"], 
       Quantity[55, "Years"], 
       Quantity[50, "Years"], 
       Quantity[49, "Years"], 
       Quantity[35, "Years"], 
       Quantity[23, "Years"], 
       Quantity[57, "Years"], 
       Quantity[45, "Years"], 
       Quantity[41, "Years"], 
       Quantity[38, "Years"], 
       Quantity[55, "Years"], 
       Quantity[45, "Years"], 
       Quantity[44, "Years"], 
       Quantity[45, "Years"], 
       Quantity[65, "Years"], 
       Quantity[66, "Years"], 
       Quantity[57, "Years"], 
       Quantity[52, "Years"], 
       Quantity[38, "Years"], 
       Quantity[49, "Years"], 
       Quantity[44, "Years"], 
       Quantity[28, "Years"], 
       Quantity[64, "Years"], 
       Quantity[43, "Years"], 
       Quantity[11, "Years"], 
       Quantity[45, "Years"], 
       Quantity[59, "Years"], 
       Quantity[40, "Years"], 
       Quantity[65, "Years"], 
       Quantity[33, "Years"], 
       Quantity[53, "Years"], 
       Quantity[42, "Years"], 
       Quantity[51, "Years"], 
       Quantity[25, "Years"], 
       Quantity[33, "Years"], 
       Quantity[65, "Years"], 
       Quantity[42, "Years"], 
       Quantity[41, "Years"], 
       Quantity[68, "Years"], 
       Quantity[61, "Years"], 
       Quantity[19, "Years"], 
       Quantity[61, "Years"], 
       Quantity[42, "Years"], 
       Quantity[54, "Years"], 
       Quantity[43, "Years"], 
       Quantity[42, "Years"], 
       Quantity[37, "Years"], 
       Quantity[46, "Years"], 
       Quantity[42, "Years"], 
       Quantity[45, "Years"], 
       Quantity[28, "Years"], 
       Quantity[52, "Years"], 
       Quantity[32, "Years"], 
       Quantity[38, "Years"], 
       Quantity[35, "Years"], 
       Quantity[24, "Years"], 
       Quantity[46, "Years"], 
       Quantity[49, "Years"], 
       Quantity[49, "Years"], 
       Quantity[48, "Years"], 
       Quantity[62, "Years"], 
       Quantity[65, "Years"], 
       Quantity[38, "Years"], 
       Quantity[75, "Years"], 
       Quantity[48, "Years"], 
       Quantity[68, "Years"], 
       Quantity[39, "Years"], 
       Quantity[42, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[33, "Years"], 
       Quantity[66, "Years"], 
       Quantity[66, "Years"], 
       Quantity[53, "Years"], 
       Quantity[52, "Years"], 
       Quantity[51, "Years"], 
       Quantity[58, "Years"], 
       Quantity[63, "Years"], 
       Quantity[27, "Years"], 
       Quantity[48, "Years"], 
       Quantity[41, "Years"], 
       Quantity[28, "Years"], 
       Quantity[49, "Years"], 
       Quantity[42, "Years"], 
       Quantity[45, "Years"], 
       Quantity[44, "Years"], 
       Quantity[37, "Years"], 
       Quantity[56, "Years"], 
       Quantity[55, "Years"], 
       Quantity[42, "Years"], 
       Quantity[60, "Years"], 
       Quantity[66, "Years"], 
       Quantity[61, "Years"], 
       Quantity[57, "Years"], 
       Quantity[44, "Years"], 
       Quantity[67, "Years"], 
       Quantity[62, "Years"], 
       Quantity[54, "Years"], 
       Quantity[26, "Years"], 
       Quantity[57, "Years"], 
       Quantity[55, "Years"], 
       Quantity[54, "Years"], 
       Quantity[58, "Years"], 
       Quantity[56, "Years"], 
       Quantity[23, "Years"], 
       Quantity[21, "Years"], 
       Quantity[58, "Years"], 
       Quantity[47, "Years"], 
       Quantity[60, "Years"], 
       Quantity[55, "Years"], 
       Quantity[44, "Years"], 
       Quantity[50, "Years"], 
       Quantity[58, "Years"], 
       Quantity[53, "Years"], 
       Quantity[43, "Years"], 
       Quantity[40, "Years"], 
       Quantity[65, "Years"], 
       Quantity[34, "Years"], 
       Quantity[52, "Years"], 
       Quantity[62, "Years"], 
       Quantity[11, "Years"], 
       Quantity[70, "Years"], 
       Quantity[59, "Years"], 
       Quantity[53, "Years"], 
       Quantity[48, "Years"], 
       Quantity[25, "Years"], 
       Quantity[62, "Years"], 
       Quantity[17, "Years"], 
       Quantity[53, "Years"], 
       Quantity[57, "Years"], 
       Quantity[43, "Years"], 
       Quantity[45, "Years"], 
       Quantity[49, "Years"], 
       Quantity[24, "Years"], 
       Quantity[62, "Years"], 
       Quantity[48, "Years"], 
       Quantity[41, "Years"], 
       Quantity[42, "Years"], 
       Quantity[35, "Years"], 
       Quantity[46, "Years"], 
       Quantity[23, "Years"], 
       Quantity[56, "Years"], 
       Quantity[51, "Years"], 
       Quantity[45, "Years"], 
       Quantity[20, "Years"], 
       Quantity[34, "Years"], 
       Quantity[43, "Years"], 
       Quantity[62, "Years"], 
       Quantity[64, "Years"], 
       Quantity[18, "Years"], 
       Quantity[63, "Years"], 
       Quantity[54, "Years"], 
       Quantity[40, "Years"], 
       Quantity[51, "Years"], 
       Quantity[67, "Years"], 
       Quantity[40, "Years"], 
       Quantity[59, "Years"], 
       Quantity[46, "Years"], 
       Quantity[46, "Years"], 
       Quantity[36, "Years"], 
       Quantity[54, "Years"], 
       Quantity[42, "Years"], 
       Quantity[41, "Years"], 
       Quantity[67, "Years"], 
       Quantity[61, "Years"], 
       Quantity[38, "Years"], 
       Quantity[19, "Years"], 
       Quantity[27, "Years"], 
       Quantity[54, "Years"], 
       Quantity[26, "Years"], 
       Quantity[42, "Years"], 
       Quantity[58, "Years"], 
       Quantity[54, "Years"], 
       Quantity[45, "Years"], 
       Quantity[40, "Years"], 
       Quantity[57, "Years"], 
       Quantity[46, "Years"], 
       Quantity[37, "Years"], 
       Quantity[41, "Years"], 
       Quantity[51, "Years"], 
       Quantity[34, "Years"], 
       Quantity[53, "Years"], 
       Quantity[40, "Years"], 
       Quantity[38, "Years"], 
       Quantity[23, "Years"], 
       Quantity[21, "Years"], 
       Quantity[43, "Years"], 
       Quantity[40, "Years"], 
       Quantity[67, "Years"], 
       Quantity[36, "Years"], 
       Quantity[52, "Years"], 
       Quantity[37, "Years"], 
       Quantity[44, "Years"], 
       Quantity[33, "Years"], 
       Quantity[38, "Years"], 
       Quantity[25, "Years"], 
       Quantity[66, "Years"], 
       Quantity[49, "Years"], 
       Quantity[39, "Years"], 
       Quantity[45, "Years"], 
       Quantity[48, "Years"], 
       Quantity[58, "Years"], 
       Quantity[40, "Years"], 
       Quantity[48, "Years"], 
       Quantity[31, "Years"], 
       Quantity[45, "Years"], 
       Quantity[44, "Years"], 
       Quantity[33, "Years"], 
       Quantity[63, "Years"], 
       Quantity[33, "Years"], 
       Quantity[46, "Years"], 
       Quantity[64, "Years"], 
       Quantity[56, "Years"], 
       Quantity[56, "Years"], 
       Quantity[53, "Years"], 
       Quantity[30, "Years"], 
       Quantity[68, "Years"], 
       Quantity[48, "Years"], 
       Quantity[3, "Years"], 
       Quantity[67, "Years"], 
       Quantity[27, "Years"], 
       Quantity[33, "Years"], 
       Quantity[58, "Years"], 
       Quantity[61, "Years"], 
       Quantity[42, "Years"], 
       Quantity[41, "Years"], 
       Quantity[37, "Years"], 
       Quantity[38, "Years"], 
       Quantity[63, "Years"], 
       Quantity[46, "Years"], 
       Quantity[35, "Years"], 
       Quantity[22, "Years"], 
       Quantity[57, "Years"], 
       Quantity[49, "Years"], 
       Quantity[54, "Years"], 
       Quantity[30, "Years"], 
       Quantity[39, "Years"], 
       Quantity[28, "Years"], 
       Quantity[38, "Years"], 
       Quantity[46, "Years"], 
       Quantity[43, "Years"], 
       Quantity[35, "Years"], 
       Quantity[67, "Years"], 
       Quantity[60, "Years"], 
       Quantity[62, "Years"], 
       Quantity[53, "Years"], 
       Quantity[24, "Years"], 
       Quantity[34, "Years"], 
       Quantity[38, "Years"], 
       Quantity[31, "Years"], 
       Quantity[31, "Years"], 
       Quantity[34, "Years"], 
       Quantity[38, "Years"], 
       Quantity[49, "Years"], 
       Quantity[34, "Years"], 
       Quantity[41, "Years"], 
       Quantity[31, "Years"], 
       Quantity[31, "Years"], 
       Quantity[54, "Years"], 
       Quantity[40, "Years"], 
       Quantity[55, "Years"], 
       Quantity[42, "Years"], 
       Quantity[42, "Years"], 
       Quantity[34, "Years"], 
       Quantity[27, "Years"], 
       Quantity[25, "Years"], 
       Quantity[64, "Years"], 
       Quantity[52, "Years"], 
       Quantity[53, "Years"], 
       Quantity[55, "Years"], 
       Quantity[45, "Years"], 
       Quantity[32, "Years"], 
       Quantity[30, "Years"], 
       Quantity[56, "Years"], 
       Quantity[31, "Years"], 
       Quantity[38, "Years"], 
       Quantity[43, "Years"], 
       Quantity[41, "Years"], 
       Quantity[57, "Years"], 
       Quantity[44, "Years"], 
       Quantity[31, "Years"], 
       Quantity[38, "Years"], 
       Quantity[20, "Years"], 
       Quantity[20, "Years"], 
       Quantity[48, "Years"], 
       Quantity[40, "Years"], 
       Quantity[31, "Years"], 
       Quantity[61, "Years"], 
       Quantity[37, "Years"], 
       Quantity[41, "Years"], 
       Quantity[30, "Years"], 
       Quantity[31, "Years"], 
       Quantity[55, "Years"], 
       Quantity[32, "Years"], 
       Quantity[59, "Years"], 
       Quantity[57, "Years"], 
       Quantity[55, "Years"], 
       Quantity[52, "Years"], 
       Quantity[23, "Years"], 
       Quantity[59, "Years"], 
       Quantity[30, "Years"], 
       Quantity[25, "Years"], 
       Quantity[29, "Years"], 
       Quantity[30, "Years"], 
       Quantity[44, "Years"], 
       Quantity[40, "Years"], 
       Quantity[62, "Years"], 
       Quantity[32, "Years"], 
       Quantity[41, "Years"], 
       Quantity[38, "Years"], 
       Quantity[44, "Years"], 
       Quantity[47, "Years"], 
       Quantity[41, "Years"], 
       Quantity[38, "Years"], 
       Quantity[44, "Years"], 
       Quantity[11, "Years"], 
       Quantity[42, "Years"], 
       Quantity[31, "Years"], 
       Quantity[18, "Years"], 
       Quantity[38, "Years"], 
       Quantity[36, "Years"], 
       Quantity[47, "Years"], 
       Quantity[24, "Years"], 
       Quantity[45, "Years"], 
       Quantity[18, "Years"], 
       Quantity[28, "Years"], 
       Quantity[36, "Years"], 
       Quantity[55, "Years"], 
       Quantity[56, "Years"], 
       Quantity[20, "Years"], 
       Quantity[55, "Years"], 
       Quantity[47, "Years"], 
       Quantity[30, "Years"], 
       Quantity[37, "Years"], 
       Quantity[26, "Years"], 
       Quantity[61, "Years"], 
       Quantity[33, "Years"], 
       Quantity[38, "Years"], 
       Quantity[31, "Years"], 
       Quantity[34, "Years"], 
       Quantity[55, "Years"], 
       Quantity[40, "Years"], 
       Quantity[35, "Years"], 
       Quantity[36, "Years"], 
       Quantity[59, "Years"], 
       Quantity[40, "Years"], 
       Quantity[35, "Years"], 
       Quantity[12, "Years"], 
       Quantity[61, "Years"], 
       Quantity[44, "Years"], 
       Quantity[32, "Years"], 
       Quantity[12, "Years"], 
       Quantity[63, "Years"], 
       Quantity[32, "Years"], 
       Quantity[61, "Years"], 
       Quantity[35, "Years"], 
       Quantity[38, "Years"], 
       Quantity[55, "Years"], 
       Quantity[56, "Years"], 
       Quantity[38, "Years"], 
       Quantity[50, "Years"], 
       Quantity[2, "Years"], 
       Quantity[23, "Years"], 
       Quantity[51, "Years"], 
       Quantity[35, "Years"], 
       Quantity[38, "Years"], 
       Quantity[36, "Years"], 
       Quantity[25, "Years"], 
       Quantity[20, "Years"], 
       Quantity[36, "Years"], 
       Quantity[51, "Years"], 
       Quantity[51, "Years"], 
       Quantity[42, "Years"], 
       Quantity[39, "Years"], 
       Quantity[35, "Years"], 
       Quantity[24, "Years"], 
       Quantity[34, "Years"], 
       Quantity[37, "Years"], 
       Quantity[56, "Years"], 
       Quantity[25, "Years"], 
       Quantity[38, "Years"], 
       Quantity[41, "Years"], 
       Quantity[48, "Years"], 
       Quantity[25, "Years"], 
       Quantity[28, "Years"], 
       Quantity[56, "Years"], 
       Quantity[58, "Years"], 
       Quantity[45, "Years"], 
       Quantity[41, "Years"], 
       Quantity[47, "Years"], 
       Quantity[26, "Years"], 
       Quantity[65, "Years"], 
       Quantity[54, "Years"], 
       Quantity[51, "Years"], 
       Quantity[33, "Years"], 
       Quantity[53, "Years"], 
       Quantity[44, "Years"], 
       Quantity[55, "Years"], 
       Quantity[35, "Years"], 
       Quantity[59, "Years"], 
       Quantity[23, "Years"], 
       Quantity[39, "Years"], 
       Quantity[37, "Years"], 
       Quantity[45, "Years"], 
       Quantity[61, "Years"], 
       Quantity[44, "Years"], 
       Quantity[36, "Years"], 
       Quantity[26, "Years"], 
       Quantity[46, "Years"], 
       Quantity[30, "Years"], 
       Quantity[42, "Years"], 
       Quantity[22, "Years"], 
       Quantity[41, "Years"], 
       Quantity[6, "Years"], 
       Quantity[29, "Years"], 
       Quantity[42, "Years"], 
       Quantity[40, "Years"], 
       Quantity[48, "Years"], 
       Quantity[31, "Years"], 
       Quantity[44, "Years"], 
       Quantity[58, "Years"], 
       Quantity[47, "Years"], 
       Quantity[55, "Years"], 
       Quantity[30, "Years"], 
       Quantity[47, "Years"], 
       Quantity[65, "Years"], 
       Quantity[45, "Years"], 
       Quantity[38, "Years"], 
       Quantity[27, "Years"], 
       Quantity[63, "Years"], 
       Quantity[55, "Years"], 
       Quantity[25, "Years"], 
       Quantity[36, "Years"], 
       Quantity[66, "Years"], 
       Quantity[57, "Years"], 
       Quantity[52, "Years"], 
       Quantity[60, "Years"], 
       Quantity[39, "Years"], 
       Quantity[51, "Years"], 
       Quantity[64, "Years"], 
       Quantity[46, "Years"], 
       Quantity[59, "Years"], 
       Quantity[23, "Years"], 
       Quantity[55, "Years"], 
       Quantity[43, "Years"], 
       Quantity[37, "Years"], 
       Quantity[22, "Years"], 
       Quantity[64, "Years"], 
       Quantity[59, "Years"], 
       Quantity[62, "Years"], 
       Quantity[48, "Years"], 
       Quantity[28, "Years"], 
       Quantity[59, "Years"], 
       Quantity[55, "Years"], 
       Quantity[66, "Years"], 
       Quantity[55, "Years"], 
       Quantity[52, "Years"], 
       Quantity[54, "Years"], 
       Quantity[38, "Years"], 
       Quantity[21, "Years"], 
       Quantity[48, "Years"], 
       Quantity[53, "Years"], 
       Quantity[30, "Years"], 
       Quantity[31, "Years"], 
       Quantity[54, "Years"], 
       Quantity[47, "Years"], 
       Quantity[32, "Years"], 
       Quantity[36, "Years"], 
       Quantity[57, "Years"], 
       Quantity[56, "Years"], 
       Quantity[45, "Years"], 
       Quantity[38, "Years"], 
       Quantity[47, "Years"], 
       Quantity[60, "Years"], 
       Quantity[65, "Years"], 
       Quantity[27, "Years"], 
       Quantity[55, "Years"], 
       Quantity[33, "Years"], 
       Quantity[46, "Years"], 
       Quantity[28, "Years"], 
       Quantity[56, "Years"], 
       Quantity[51, "Years"], 
       Quantity[22, "Years"], 
       Quantity[58, "Years"], 
       Quantity[28, "Years"], 
       Quantity[42, "Years"], 
       Quantity[28, "Years"], 
       Quantity[26, "Years"], 
       Quantity[32, "Years"], 
       Quantity[45, "Years"], 
       Quantity[53, "Years"], 
       Quantity[40, "Years"], 
       Quantity[45, "Years"], 
       Quantity[24, "Years"], 
       Quantity[51, "Years"], 
       Quantity[45, "Years"], 
       Quantity[52, "Years"], 
       Quantity[33, "Years"], 
       Quantity[47, "Years"], 
       Quantity[45, "Years"], 
       Quantity[41, "Years"], 
       Quantity[49, "Years"], 
       Quantity[54, "Years"], 
       Quantity[22, "Years"], 
       Quantity[39, "Years"], 
       Quantity[7, "Years"], 
       Quantity[50, "Years"], 
       Quantity[56, "Years"], 
       Quantity[49, "Years"], 
       Quantity[47, "Years"], 
       Quantity[28, "Years"]}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[131, 4, 524, 75], 80, 4, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Years"]], 524], "Meta" -> 
     Association["ID" -> 177558485138574], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[131, 4, 524, 75], 80, 4, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Years"]], 524], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     131, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"47", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"31", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"63", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"50", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"23", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"55", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"64", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"11", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"59", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"40", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"53", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"25", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"33", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"41", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"68", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"61", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"19", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"61", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"54", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"37", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{61}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"42", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{62}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"45", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{63}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{64}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"52", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{65}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"32", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{66}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{67}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"35", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{68}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"24", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{69}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"46", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{70}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{71}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"49", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{72}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"48", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{73}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{74}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"65", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{75}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"38", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{76}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"75", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{77}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"48", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{78}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"68", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{79}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"39", "\"yr\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{80}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 131, 1], {1, 131 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 131, 1], {1, 131 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    524, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    524, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 131, 1], {1, 131 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 131, 1], {1, 131 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{369., {254.5, 261.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{369., {254.5, 261.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.839670632386486*^9, 3.8396706386314945`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"b0d7c59e-799c-438b-9895-cd58f545fcc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"seznamMoski", ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Mo\[SHacek]ki\>\"", "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", "Blue"}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"700", ",", "500"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Prikaz mo\[SHacek]kih, ki so do\[ZHacek]iveli presaditve ledvic, po \
starosti\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Starost\>\"", ",", "\"\<\[CapitalSHacek]tevilo oseb\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.826788167877056*^9, 3.826788174106575*^9}, {
  3.8286006096144238`*^9, 3.8286006805335693`*^9}, {3.8286009941744876`*^9, 
  3.828601004078067*^9}, {3.828601377150956*^9, 3.8286013970226555`*^9}, {
  3.8286019421345673`*^9, 3.8286019437115498`*^9}, {3.8286027151676607`*^9, 
  3.828602722509937*^9}, {3.8286041102224092`*^9, 3.8286041103976383`*^9}, {
  3.8286043531505795`*^9, 3.8286043535175076`*^9}, {3.828604497566083*^9, 
  3.828604500085475*^9}, {3.8286045717511168`*^9, 3.828604574484998*^9}, {
  3.839670678796551*^9, 3.8396707324566264`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"c9a6a104-188f-4325-9330-b6df07f0ef25"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.574]]], 
       RGBColor[0, 0, 1]], {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.574]]], 
         RGBColor[0, 0, 1]], {{{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {5., 2.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0}, {10., 2.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {15., 5.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{15., 0}, {20., 6.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{20., 0}, {25., 27.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{25., 0}, {30., 34.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{30., 0}, {35., 52.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{35., 0}, {40., 63.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{40., 0}, {45., 76.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{45., 0}, {50., 73.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{50., 0}, {55., 53.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{55., 0}, {60., 67.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{60., 0}, {65., 37.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{65., 0}, {70., 25.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{70., 0}, {75., 1.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}, {{
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{75., 0}, {80., 1.}, "RoundingRadius" -> 0]}], 
            "DelayedMouseEffectStyle"]}}}}, {}, {}}}, {{{}, 
       InsetBox[
        FormBox[
         StyleBox["2", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2.5, 2.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["2", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {7.5, 2.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["5", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {12.5, 5.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["6", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {17.5, 6.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["27", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {22.5, 27.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["34", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {27.5, 34.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["52", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {32.5, 52.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["63", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {37.5, 63.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["76", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {42.5, 76.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["73", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {47.5, 73.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["53", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {52.5, 53.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["67", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {57.5, 67.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["37", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {62.5, 37.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["25", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {67.5, 25.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["1", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {72.5, 1.}], 
        ImageScaled[{0.5, 0}]]}, {{}, 
       InsetBox[
        FormBox[
         StyleBox["1", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {77.5, 1.}], 
        ImageScaled[{0.5, 0}]]}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"Starost\"", TraditionalForm], 
       FormBox["\"\[CapitalSHacek]tevilo oseb\"", TraditionalForm]}, 
     AxesOrigin -> {-1.6, 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {700, 500}, PlotLabel -> 
     FormBox["\"Prikaz mo\[SHacek]kih, ki so do\[ZHacek]iveli presaditve \
ledvic, po starosti\"", TraditionalForm], 
     PlotRange -> {{0., 80.}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Mo\[SHacek]ki\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.574]]], 
                    RGBColor[0, 0, 1]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.574`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8396707676516757`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"6ea60663-cd4c-43ac-a8cc-424e37e07a90"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RASA :", "Subsection",
 CellChangeTimes->{{3.8291213030483503`*^9, 
  3.829121312826338*^9}},ExpressionUUID->"c1d8d97d-da7f-4e87-861f-\
c34f4a6aefff"],

Cell[TextData[{
 "V funkciji SteviloRasa kot argument podamo raso in izpi\[SHacek]emo ",
 StyleBox["\[SHacek]tevilo ljudi glede na raso",
  FontWeight->"Bold"],
 ". To funkcijo spodaj nato pokli\[CHacek]em in ji kot argument podam vse \
rase.\nPodatke o vseh  rasah shranim v seznam z imenom seznamPoRasah."
}], "Text",
 CellChangeTimes->{{3.826792843513936*^9, 3.8267929672392735`*^9}, {
  3.828601968229488*^9, 3.8286019688295755`*^9}, {3.8291223619687476`*^9, 
  3.8291223813521743`*^9}},ExpressionUUID->"8398793e-ff2f-45ff-9c1d-\
bdf80b0bd4c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rase", "=", 
  RowBox[{"podatki", "[", 
   RowBox[{"All", ",", "\"\<Race\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.829049521183605*^9, 3.8290495358874187`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"bb9cfb05-51a4-4348-b06d-6ada51fba123"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {
      "white", "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "white", "white", "white", "white", "white", "white", "white",
        "white", "white", "white", "white", "white", "white", "white", 
       "white", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black", 
       "black", "black", "black", "black", "black", "black", "black", "black",
        "black", "black", "black", "black", "black", "black", "black"}, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 45.], 120, 6, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        TypeSystem`Enumeration["black", "white"]], 863], "Meta" -> 
     Association["ID" -> 177562780106052], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 45.], 120, 6, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        TypeSystem`Enumeration["black", "white"]], 863], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     6, "DataRowCount" -> 144, "DataColumnCount" -> 6, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{61}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{62}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{63}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{64}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{65}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{66}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{67}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{68}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{69}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{70}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{71}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{72}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{73}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{74}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{75}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{76}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{77}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{78}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{79}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{80}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{81}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{82}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{83}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{84}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{85}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{86}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{87}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{88}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{89}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{90}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{91}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{92}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{93}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{94}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{95}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{96}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{97}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{98}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{99}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{100}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{101}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{102}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{103}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{104}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{105}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{106}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{107}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{108}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{109}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{110}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{111}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{112}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{113}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{114}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{115}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{116}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{117}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{118}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{119}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{120}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{45., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{355., {254.5, 261.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{355., {254.5, 261.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.83967082094675*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d0b977a5-99e0-443d-b131-5f58e09eaf94"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SteviloRasa", "[", "rasa_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"rasa", ",", 
    RowBox[{"Count", "[", 
     RowBox[{"rase", ",", "rasa"}], "]"}]}], "}"}]}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"3c3fefc7-a1ac-4a35-a749-9ccd1d464f98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznamPoRasah", "=", 
  RowBox[{"SteviloRasa", "/@", 
   RowBox[{"(", 
    RowBox[{"rase", " ", "//", "DeleteDuplicates"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8267882015640717`*^9, 3.8267882140174575`*^9}, {
  3.826788546112914*^9, 3.8267885927293386`*^9}, {3.826788630050377*^9, 
  3.826788677121352*^9}, {3.826788772129866*^9, 3.826788913577262*^9}, {
  3.8267890775444217`*^9, 3.8267890814322863`*^9}, {3.8290495310498314`*^9, 
  3.829049551987364*^9}, {3.829049590120702*^9, 3.8290495906644893`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"1a101cdd-cd6d-4e08-a55d-53965b39d0e1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"white", 712}, {"black", 151}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 2], 2], "Meta" -> 
     Association["ID" -> 177571370040707], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 2], 2], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 
     2, "DataRowCount" -> 2, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["white", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["712"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["black", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["151"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{120., {37.5, 44.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{120., {37.5, 44.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8396708828978386`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"43a5ee90-6d05-4da6-8c37-814b1f13fd66"]
}, Open  ]],

Cell[TextData[{
 "Zgoraj zbrane podatke o rasah predstavim v obliki ",
 StyleBox["tortnega diagrama",
  FontWeight->"Bold"],
 ", ki ima tudi legendo, ki prikazuje katero barvo predstavlja katera rasa."
}], "Text",
 CellChangeTimes->{{3.826792974928958*^9, 
  3.826793006455479*^9}},ExpressionUUID->"9438b850-dba3-45f9-b32a-\
287df856a9b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"seznamPoRasah", "[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"Normal", "[", 
     RowBox[{"seznamPoRasah", "[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"400", ",", "400"}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "Green", ",", "Purple", ",", "Yellow", ",", "Blue", ",", "Orange", ",", 
      "Pink"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Prikaz ljudi\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8267885133765087`*^9, 3.8267885201604986`*^9}, {
  3.826788690066348*^9, 3.826788691659772*^9}, {3.826789214169815*^9, 
  3.8267892194893904`*^9}, {3.8286012293108397`*^9, 3.828601290215101*^9}, {
  3.8286027607262144`*^9, 3.828602769102454*^9}, {3.8286041196222563`*^9, 
  3.828604127300662*^9}, {3.828604235198329*^9, 3.828604310838103*^9}, {
  3.828604388654233*^9, 3.8286044233008575`*^9}, {3.8286045807743173`*^9, 
  3.828604583637287*^9}, {3.829049687346178*^9, 3.829049788456682*^9}, {
  3.839670904212868*^9, 3.8396709059978704`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"5d5558a5-0baf-431a-87c0-8540348f8418"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[
    DynamicModuleBox[{
     DynamicChart`click$49246$49357 = True, DynamicChart`click$49286$49357 = 
      False}, {
      RGBColor[0.5, 0.5, 1.], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.1]}], {{{}, {{
          RGBColor[0, 1, 0], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          TagBox[
           GeometricTransformation3DBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], {
                    Polygon3DBox[CompressedData["
1:eJztmPtTlGUUx8kbkoaLGIkTLHgJKAQMHZTb0YQEElC8VsCqXZYSLxmhAmFK
2qikqYgjoAYIidaIYKKEPgpscpdLy01X7hcXdveEQSCIbT/4vE1z/oCa2TOz
MzufH3be9+yz736/H8tN2wI+GqunpzdG+0rXvv5+rxvd6EY3utGNbv7vg0w/
cJrja+nJrs/Jos3mjSkaDfM3GHByt82E5/zu9bbZSbc0LNTIYvzQrNucRzhu
H2e+RcP2V/7+dIVlEecmgQFVkcNqVlwWffLpmErOb830LrD5VM0Wxs3e2dde
w7niO2lE3g0VW96/M+5IVh3nhZ8bS7uVvSx0BsxVS+9zLomOMNo72sP8Hip8
3n6hiXPrc85LdvUr2bwjmSvC3Fo431U+Y4Ki8hFb4JyUkdrdyvmCBVUpjce6
2aqtrd5RX7Vz7uLV917Ooi7205x9U4PGdgrXn7dkTk1xB3vZ9cO1udu6OFff
zF2avrSdmU6euE1c2M15eDjLZxdaGfskdZHDs0ecn9g/1FzwpJmZ2ztEXhT3
cL4/1rTgt/CH7MD8YRvp7F7OR/78IW6ovpEdTv8g8f3JKs5DZJ3iDHEdGzGL
j0uoFbiPFD7I8qthDw/Zuq3Zp+Z8deisGUM1FWxCRW7ffUMN51ZvnB4e3/Mr
s0zbNnI2UuD5DyLlHvKbLOrNqeb2RQKXjw/c27/5EltWKjNw/0Pg55zvTMzI
jQGXLHHm2Wf/+PzLywLEKVmQVOu61VMp8NvJ9WGqwDuQ+sUFU6+rAi+4WO9m
sK4YAnboKxVBAl/ve9/lTGIlbHY+t1jSJdxXfmTu4RsRv4Hkye++nisFbqt0
7m7zqIclx8tO2iQJ+wlUo4nrwH1YNcUzQFYk7DnVRLx4+FATNLj5XMM64Xtx
8Jd1/LKnBYKmHhCllCg5vz45++g06zZYO+WLe73Jwvd7vuLWWXleOwT7XJXq
SYTzcGv6brONrp1Q9Xq6mdVY4fyM9Yu6a5fWBU/fuZRdeLSD89jCpITy/m4I
HfQaXT1BOJ87nfxXdNgqwTj4iuTTEOE8r08suOnk3QNpRc62P+Y0cx68cLlp
incvXPtW3pfRo+Bc5lo4y3yuCh5M+T5ro3cj5/FnZPML+lQQInus7xRby7n/
QKL13dNq8Pha0TKSU8359kkv2O+x1ICl5/JDLsnlnP+0597uDQc1YHFwTLz9
VZmwT9FQiV6VBh4Y1Nm1bvyFcyMr+xaTQQ0YWnxcejc6XTj/KRX5EaMaMM67
YrAl9wR7zh875nfOadeAO/t5+tFXfua8K2qei2OGBlokMT67TuZzLpo9YNDk
q4HSffESq9gSzt962pd7oFoNEmlHU51jFeeWwbFhF5zUsCbccOo4kZzzIf/U
hNYvtfu5Z5+cVlvPuc2JU7aP03rB77I7NsU84NzBcmBMTmYP+K67aDdo0My5
hTJBZX1OCa+qZ7x0+k4L59kVttkbdjwC/8LXH4ukbZyvdnjSd+yNbggc71mT
OdjOeUzee8oXyzph8faNPYqwTs7nL6o3d1zTAWZXzT4xbuzi/LImUn2wqA3U
n0n/bHvtEeeTZNf106xawd/OYv7wu0rOy/ViSuzCmsFF5DZZvKOH8+Y3o6yL
JQoQbxodcdjay/ka/S/R5kYDtPsPLLT3VXGuyNtU7jIoB4d52ZcXGKo53/tj
4jdyi2o4de3ZQHSmwNdmimTFW8rgh80l0z5y1HB+KeKKvTyqEOoMO603xQs8
v8J4tF51HQpn9veLGgQemvKNh9GxZDDO/MNr7rDA6wpWHH/p1BkWFDDiHjci
8PS3x52Kjs1h0517QzwUAg9f6W56vLyAXUprLws6I/Cs3WaTzt8uZfdW7pdZ
ugk85/s7bRmlVcxvgwnryxPu69eQWdEV5+Vst1FT9SozgSsO13tVShtYwlKj
Jd3Bwt6cVdnv14oU7LOG6uId+4Q904Og4zqu4zqu4zqu4/99Tv+/I9B5AIHO
Dwh03kCg8wkCnWcQ6PyDQOclBDpfIdB5DIHObwh03kOg86F2P2SeRKDzJwKd
VxHofItA52EEOj8j0Hkbgc7nCHSeR6DzPwLdFxDofoFA9xEEur8g0H0Hge5H
CHSfQqD7FwLd1xDofodA90Ht/ZL9EYHumwh0P0Wg+ywC3X8R6L6MQPdrBLqP
I9D9HYHu+wi0H0CgfQIC7R8QaF+h3SfpNxBoH4JA+xME2rdonwOkn9Huh/Q5
CLT/QaB9EQLtlxBoH4VA+yvtdZK+S/v5pB/T/n5Jn4ZA+zcE2tdpzz/p9xBo
H4hA+0Pt85z0jQi0n9SeH9JnItD+E4H2pQi0X0WgfSwC7W8RaN+rfc6Tflh7
/aRPRqD9MwLtqxFov41A+/Dn/+P/9ucIfwFE2FeY
                    "]], 
                    
                    BSplineSurface3DBox[{{{-0.4541526694808514, \
-0.8909238759868413, 0.}, {0.4367712065059899, -1.3450765454676927`, 0.}, {
                    0.8909238759868413, -0.4541526694808514, 0.}, {
                    1.3450765454676927`, 0.4367712065059899, 0.}, {
                    0.4541526694808514, 0.8909238759868413, 
                    0.}, {-0.4367712065059899, 1.3450765454676927`, 
                    0.}, {-0.8909238759868413, 0.4541526694808514, 0.}, {-1., 
                    0.2401750145779066, 0.}, {-1., 0., 
                    0.}}, {{-0.4541526694808514, -0.8909238759868413, 1}, {
                    0.4367712065059899, -1.3450765454676927`, 1}, {
                    0.8909238759868413, -0.4541526694808514, 1}, {
                    1.3450765454676927`, 0.4367712065059899, 1}, {
                    0.4541526694808514, 0.8909238759868413, 
                    1}, {-0.4367712065059899, 1.3450765454676927`, 
                    1}, {-0.8909238759868413, 0.4541526694808514, 1}, {-1., 
                    0.2401750145779066, 1}, {-1., 0., 1}}}, 
                    SplineDegree -> {1, 2}, 
                    SplineWeights -> {{1., 0.7071067811865475, 1., 
                    0.7071067811865475, 1., 0.7071067811865475, 1., 
                    0.9723486709989481, 1.}, {1., 0.7071067811865475, 1., 
                    0.7071067811865475, 1., 0.7071067811865475, 1., 
                    0.9723486709989481, 1.}}, 
                    SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 
                    4, 4, 4}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                    1.}, {-0.4541526694808514, -0.8909238759868413, 
                    1.}, {-0.4541526694808514, -0.8909238759868413, 0.}}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {-1., 
                    1.2246467991473532`*^-16, 1.}, {-1., 
                    1.2246467991473532`*^-16, 0.}}}]}}, 
                  ImageSizeCache -> {{-50.7956894527043, 
                   586.4769751121819}, {-242.52164956742604`, 
                   242.4184676837741}}], "DelayedMouseEffectStyle"], 
                StatusArea[#, 712]& , TagBoxNote -> "712"], 
               StyleBox["712", {
                 GrayLevel[0], "Graphics3DLabel"}, StripOnInput -> False]], 
              Annotation[#, 
               Style[712, {
                 GrayLevel[0], "Graphics3DLabel"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49246$49357, 
                 FEPrivate`Not[DynamicChart`click$49246$49357]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$49246$49357, {{{1., 0., 0.}, {0., 1., 0.}, {
               0., 0., 1.}}, {0.17053754246387226`, 0.10448419311256114`, 
               0.}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$49246$49357}]], 
           "DelayedClickEffect3D"]}, {
          RGBColor[0.5, 0, 0.5], 
          EdgeForm[{
            GrayLevel[0], 
            Opacity[0.1]}], 
          TagBox[
           GeometricTransformation3DBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[
                TagBox[
                 DynamicBox[{
                   FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], {
                    Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIVIAaxR8HQAlZvN0dfE7i7v/DmpZNFTW/2w8Qf5N+Q
8ol4sJ/Vt6jhcNNruLiKw6Hz68Qe7ZdoC9q7KPUVXFx17dG+rQcf778f17LC
UeclXPy3i3rQ9PCn+/95FS57f/05XFzyb+LWhdee7fc78PyDRNYzuPh8Lf5j
VrYv9v/Y5S3o+uQJXPzl4SW7HnW+3C/d12Mr6vEYLp4cbdJruvvV/gVVC2Y6
TX8IF2+1Kq54c/71/me3j++zWH4fLn7tQnHo/WNv9numr77L/e82XHyLzqwb
rPPf7ndPbJ340uwGXPyIa8WaivB3+yctE31zJ/QKXNwuLjmz6P27/W99q3fz
xF+Aixc27swISHu/3yam1jBv7Qm4+C+mr0WTd7/fL2V7e1dk0wG4+PYNl90f
vHu/f/nX6SIm3Rvg4hDwYT97jIix2rKFe7DHHlyd/aj4YBZHj8cP9tjj/YM9
9nTywR57uvpgjz0dfrDHnm4/2GNP5x/sseeLD/bY89EHe+z57oM99nz6wR57
vv5gj70c+GCPvdz4YI+9nPlgj71c+mCPvRz7YI+93PtgDwDqYHop
                    "]], 
                    
                    BSplineSurface3DBox[{{{-1., -1.2246467991473532`*^-16, 
                    0.}, {-0.9999999999999999, -0.6126756114988331, 
                    0.}, {-0.45415266948085137`, -0.8909238759868413, 
                    0.}}, {{-1., -1.2246467991473532`*^-16, 
                    1}, {-0.9999999999999999, -0.6126756114988331, 
                    1}, {-0.45415266948085137`, -0.8909238759868413, 1}}}, 
                    SplineDegree -> {1, 2}, 
                    SplineWeights -> {{1., 0.8526877123193612, 1.}, {1., 
                    0.8526877123193612, 1.}}, 
                    SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                    1.}, {-1., -1.2246467991473532`*^-16, 
                    1.}, {-1., -1.2246467991473532`*^-16, 0.}}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                    1.}, {-0.4541526694808514, -0.8909238759868413, 
                    1.}, {-0.4541526694808514, -0.8909238759868413, 0.}}}]}}, 
                  ImageSizeCache -> {{-13.667923878473069`, 
                   278.90452046672164`}, {-32.38310514200819, 
                   175.02071932607933`}}], "DelayedMouseEffectStyle"], 
                StatusArea[#, 151]& , TagBoxNote -> "151"], 
               StyleBox["151", {
                 GrayLevel[0], "Graphics3DLabel"}, StripOnInput -> False]], 
              Annotation[#, 
               Style[151, {
                 GrayLevel[0], "Graphics3DLabel"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$49286$49357, 
                 FEPrivate`Not[DynamicChart`click$49286$49357]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             FEPrivate`If[
             DynamicChart`click$49286$49357, {{{1., 0., 0.}, {0., 1., 0.}, {
               0., 0., 1.}}, {-0.17053754246387223`, -0.10448419311256117`, 
               0.}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 
              0}, {0, 0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$49286$49357}]], 
           "DelayedClickEffect3D"]}}}, {}}, {}}, DynamicModuleValues :> {}], 
    BoxRatios -> {1, 1, 0.1}, Boxed -> False, FaceGridsStyle -> Automatic, 
    ImageMargins -> 0., ImageSize -> {400., 400.}, Lighting -> "Neutral", 
    PlotLabel -> FormBox["\"Prikaz ljudi\"", TraditionalForm], 
    PlotRange -> {{1.2, -1.2}, {1.2, -1.2}, {0., 1.02}}, SphericalRegion -> 
    Automatic, ViewAngle -> 0.23138377189916143`, 
    ViewPoint -> {-1.5926424918717297`, -1.9464102176037545`, 
     1.8533691369752319`}, 
    ViewVertical -> {-0.041441195426298094`, 0.016600132918700085`, 
     0.9990030344842407}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"white\"", "\"black\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         "Graphics3DLabel", FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "\"Graphics3DLabel\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.839670914967883*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"bbeaf20b-e03b-4e12-b4f5-bd04496fe631"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analiza glede na stanje po presaditvi:", "Section",
 CellChangeTimes->{{3.8396805715515337`*^9, 
  3.839680617706415*^9}},ExpressionUUID->"9c2486a3-fa77-4153-b9ee-\
eb2499eb43d2"],

Cell[BoxData[
 RowBox[{"seznamstanja", "=", 
  RowBox[{"podatki", "[", 
   RowBox[{"All", ",", "\"\<Delta\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8267892783490953`*^9, 3.8267892845291367`*^9}, {
   3.8267893238572655`*^9, 3.8267893307220716`*^9}, {3.8267895380985813`*^9, 
   3.8267895463376336`*^9}, {3.826789717017218*^9, 3.8267897241282873`*^9}, 
   3.8286897217353067`*^9, {3.839671064972711*^9, 3.839671072429524*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"eb4b3946-7d67-4605-a09b-043ac539e8ed"],

Cell[BoxData[
 RowBox[{
  TagBox[
   TagBox[
    DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
     Association[
     "InitialData" -> {
       "alive", "alive", "dead", "alive", "alive", "alive", "dead", "alive", 
        "dead", "dead", "dead", "alive", "alive", "alive", "dead", "dead", 
        "alive", "alive", "alive", "dead", "dead", "dead", "dead", "alive", 
        "alive", "alive", "dead", "dead", "alive", "dead", "alive", "alive", 
        "dead", "dead", "alive", "dead", "dead", "alive", "alive", "dead", 
        "alive", "alive", "alive", "alive", "dead", "alive", "alive", "dead", 
        "alive", "dead", "alive", "dead", "alive", "alive", "alive", "alive", 
        "dead", "alive", "alive", "alive", "alive", "alive", "alive", "alive",
         "dead", "alive", "alive", "dead", "alive", "dead", "dead", "alive", 
        "dead", "alive", "alive", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "dead", "dead", "alive", "alive",
         "alive", "alive", "dead", "alive", "alive", "dead", "alive", "dead", 
        "alive", "dead", "alive", "alive", "alive", "alive", "alive", "dead", 
        "alive", "alive", "alive", "alive", "dead", "alive", "alive", "alive",
         "dead", "alive", "dead", "dead", "alive", "alive", "alive", "alive", 
        "dead", "alive", "alive", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "dead", "alive", "alive", "alive", "dead", "alive",
         "alive", "dead", "dead", "alive", "alive", "alive", "dead", "alive", 
        "alive", "alive", "alive", "alive", "alive", "dead", "alive", "alive",
         "alive", "alive", "dead", "alive", "alive", "alive", "dead", "dead", 
        "dead", "dead", "alive", "alive", "alive", "alive", "dead", "alive", 
        "alive", "alive", "alive", "alive", "alive", "dead", "dead", "dead", 
        "dead", "alive", "alive", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "dead", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "dead", "dead", 
        "alive", "alive", "alive", "dead", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "dead", "alive", "alive", "alive", "alive",
         "alive", "dead", "alive", "dead", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "dead", "alive", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", "dead",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "dead", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "dead", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "dead", "alive", "dead", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", "dead",
         "alive", "alive", "alive", "alive", "alive", "alive", "dead", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "dead", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "dead", "dead", 
        "dead", "alive", "alive", "alive", "alive", "alive", "alive", "alive",
         "alive", "dead", "alive", "alive", "dead", "alive", "alive", "alive",
         "dead", "alive", "dead", "alive", "alive", "dead", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "dead", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "dead", "alive", "dead",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "dead", "dead", "alive", "alive", "alive", "dead", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "dead", "dead", "alive", "dead", "alive", "dead", "dead", 
        "alive", "alive", "dead", "alive", "alive", "alive", "alive", "alive",
         "dead", "alive", "dead", "dead", "alive", "dead", "dead", "alive", 
        "alive", "dead", "dead", "alive", "alive", "alive", "alive", "alive", 
        "alive", "dead", "alive", "dead", "alive", "alive", "alive", "alive", 
        "alive", "alive", "dead", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "dead", "alive", "dead",
         "alive", "alive", "alive", "alive", "alive", "alive", "dead", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "dead", "dead", "alive", "alive", 
        "alive", "alive", "alive", "dead", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "dead", "dead", "dead", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "dead", "alive", "alive",
         "alive", "alive", "alive", "dead", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "dead", "dead", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "dead", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", "dead",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "dead", "alive", "dead", "alive", "alive", "alive", "dead", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "dead", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "dead", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "dead", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "dead", "alive", "alive", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "dead", "alive", "alive", "alive",
         "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "alive", "alive", "dead", "dead", "alive", "dead", "alive", 
        "alive", "dead", "dead", "alive", "alive", "alive", "alive", "alive", 
        "dead", "alive", "alive", "alive", "alive", "alive", "alive", "alive",
         "dead", "alive", "alive", "alive", "alive", "alive", "alive", "dead",
         "dead", "alive", "alive", "dead", "alive", "dead", "alive", "alive", 
        "alive", "alive", "alive", "alive", "alive", "alive", "alive", 
        "alive", "dead", "alive", "dead", "alive", "alive", "alive", "dead", 
        "alive", "alive", "alive", "alive", "alive", "alive"}, "InitialShape" -> 
      TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 45.], 120, 6, {
        All}], "InitialType" -> TypeSystem`Vector[
        TypeSystem`Atom[
         TypeSystem`Enumeration["alive", "dead"]], 863], "Meta" -> 
      Association["ID" -> 177584254942785], "RowTarget" -> 20, "ColumnTarget" -> 
      10, "Shape" -> TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 45.], 120, 6, {
        All}], "Type" -> TypeSystem`Vector[
        TypeSystem`Atom[
         TypeSystem`Enumeration["alive", "dead"]], 863], "Path" -> {}, 
      "BaseIndices" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
      6, "DataRowCount" -> 144, "DataColumnCount" -> 6, "SortPaths" -> {}, 
      "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
     TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
     TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
     DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
         Style[
          Grid[{{
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{61}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{62}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{63}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{64}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{65}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{66}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{67}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{68}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{69}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{70}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{71}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{72}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{73}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{74}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{75}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{76}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{77}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{78}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{79}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{80}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{81}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{82}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{83}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{84}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{85}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{86}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{87}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{88}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{89}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{90}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{91}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{92}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{93}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{94}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{95}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{96}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{97}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{98}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{99}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{100}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{101}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{102}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{103}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{104}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{105}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{106}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{107}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{108}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{109}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{110}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{111}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{112}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{113}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{114}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{115}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["dead", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{116}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{117}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{118}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{119}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}], 
             Item[
              Pane[
               Annotation["alive", 
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{120}, 
                 "Item", False], "Mouse"], 
               ImageSize -> {{45., Full}, Automatic}, 
               ImageMargins -> {{5, 3}, {4, 5}}], 
              ItemSize -> {Full, Automatic}, Frame -> {{
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]], 
                 Directive[
                  Dashing[{0, Small}], 
                  RGBColor[
                  0.5098039215686274, 0.5098039215686274, 
                   0.5098039215686274]]}, Inherited}]}, {
             Item[
              Deploy[
               Pane[
                Row[{
                  Spacer[2], 
                  Style[
                   Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                  Graphics[{
                    RGBColor[
                    0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                    Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                   ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                   Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
              Background -> 
              RGBColor[
               0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
              Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
             SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
           BaseStyle -> {
            ContextMenu -> 
             Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
               Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger,
                  TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True,
                  TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                  TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                  Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
             "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> 
           Left, Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373],
            BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
          LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
          ShowAutoStyles -> False]], 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
      Dynamic[
       TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
          Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
          
          Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
            TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
            TypeSystem`NestedGrid`PackagePrivate`datasetData[
             TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
           TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
              TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
              TypeSystem`NestedGrid`PackagePrivate`renderGrid[
              TypeSystem`NestedGrid`PackagePrivate`$state$$, 
               TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
               TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
             Not[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
        TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
          FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
          TypeSystem`SparseGrid[
           TypeSystem`H["(data no longer present)"]], 
          If[GeneralUtilities`$DebugMode, 
           Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
             TypeSystem`NestedGrid`PackagePrivate`formatState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
           TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
      DynamicModuleValues :> {}], 
     TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
       TypeSystem`PackageScope`SubViewPathbar[
       TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`updateState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
         TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
         TypeSystem`NestedGrid`PackagePrivate`localHold[
         TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
      TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
     TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
      Framed[
       Dynamic[
        Replace[
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
            Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
            Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
             Blank[]], 
            Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
             Blank[]]] :> (
           Increment[
            TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
            TypeSystem`NestedGrid`PackagePrivate`path$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
            TypeSystem`NestedGrid`PackagePrivate`pathType$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
            TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
           TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
           TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
            TypeSystem`NestedGrid`PackagePrivate`path$, 
             TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
          Spacer[10], Blank[] :> Spacer[10]}], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
       None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
       ImageSize -> {Automatic, 15}], FontSize -> 1], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
     DynamicWrapperBox[
      DynamicBox[ToBoxes[
        Dataset`DatasetContent[
        2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
         "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
         "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
         "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
         Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
         Hold[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
       ImageSizeCache->{355., {255.5, 260.5}},
       TrackedSymbols:>{
        TypeSystem`NestedGrid`PackagePrivate`$state$$, 
         TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
      MouseAnnotation[],
      ImageSizeCache->{355., {255.5, 260.5}}],
     BaseStyle->{LineBreakWithin -> False},
     DynamicModuleValues:>{},
     Initialization:>
      Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
       Needs["Dataset`"]; 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
     UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
    Deploy,
    DefaultBaseStyle->"Deploy"],
   Dataset`InterpretDataset[1],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8396713460720053`*^9, 3.839671450829389*^9}, {
   3.8396714932926636`*^9, 3.839671510031493*^9}, 
   3.83967158264402*^9},ExpressionUUID->"c5bc66ab-4602-4a8a-92af-\
5a4fea855858"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8396715319651318`*^9, 
  3.8396715324643326`*^9}},ExpressionUUID->"dc15a22c-db33-4ffd-958a-\
d75252edf475"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"umrli", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Delta\>\"", "]"}], "\[Equal]", "\"\<dead\>\""}],
       " ", "&"}]}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"74c737c3-3a4b-4442-b520-768e0dc286ef"],

Cell[BoxData["140"], "Output",
 CellChangeTimes->{3.8396715134946995`*^9, 3.839671589305232*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"8cdba892-0347-4588-b6be-827c4d21d9f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pre\[ZHacek]iveli", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"Select", "[", 
    RowBox[{"podatki", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Delta\>\"", "]"}], "\[Equal]", 
       "\"\<alive\>\""}], " ", "&"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.839671549415962*^9, 3.839671565998791*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"e67ddf91-158c-4228-9962-1df4ad4f031f"],

Cell[BoxData["723"], "Output",
 CellChangeTimes->{3.8396715688535967`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"3bbd3aa5-b97a-4478-a421-e7d5ede0374a"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
  "Podatke", " ", "o", " ", "stanju", " ", "sem", " ", "pre\[SHacek]tela", 
   " ", "in", " ", "predstavila", " ", "v", " ", "obliki", " ", "tortnega", 
   " ", 
   RowBox[{"diagrama", "."}]}], "Text"]], "Input",
 CellChangeTimes->{{3.8396806472886667`*^9, 
  3.8396806683791037`*^9}},ExpressionUUID->"3161a181-ef23-4274-a57b-\
970d561717cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Stevilo", "[", "Delta_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"Delta", ",", 
    RowBox[{"Count", " ", "[", 
     RowBox[{"seznamstanja", ",", "Delta"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.839672842683033*^9, 3.8396728646684723`*^9}, {
  3.8396729433376102`*^9, 3.839672945552814*^9}, {3.8396729920920954`*^9, 
  3.839672993152898*^9}, {3.8396730972882805`*^9, 3.8396731204981213`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"8a5700d1-dc7a-4daa-90ab-112f150d0e84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznampostanju", "=", 
  RowBox[{"Stevilo", "/@", 
   RowBox[{"(", 
    RowBox[{"seznamstanja", " ", "//", "DeleteDuplicates"}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8267882015640717`*^9, 3.8267882140174575`*^9}, {
  3.826788546112914*^9, 3.8267885927293386`*^9}, {3.826788630050377*^9, 
  3.826788677121352*^9}, {3.826788772129866*^9, 3.826788913577262*^9}, {
  3.8267890775444217`*^9, 3.8267890814322863`*^9}, {3.8290495310498314`*^9, 
  3.829049551987364*^9}, {3.829049590120702*^9, 3.8290495906644893`*^9}, {
  3.8396728912291183`*^9, 3.839672897344329*^9}, {3.8396729492032204`*^9, 
  3.839672952760027*^9}, {3.8396730264427557`*^9, 3.8396730327139673`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"f29c636e-ebbb-4784-8645-b8459d9140bb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> {{"alive", 723}, {"dead", 140}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 2], 2], "Meta" -> 
     Association["ID" -> 182888539555626], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 2], 2], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 
     2, "DataRowCount" -> 2, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["alive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{48.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["723"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["dead", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["140"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{120., {37.5, 44.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{120., {37.5, 44.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.83967290320994*^9, 3.839672955100031*^9, 
  3.8396730338995695`*^9, 3.8396731241017275`*^9, 3.8396733544735317`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"600ebcbb-1bd3-47ce-bd8b-5e8a51c9deec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart3D", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{"seznampostanju", "[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"Normal", "[", 
     RowBox[{"seznampostanju", "[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"400", ",", "400"}], "}"}]}], ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Green", ",", "Purple"}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Prikaz ljudi, ki so umrli ali pa pre\[ZHacek]iveli\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8267885133765087`*^9, 3.8267885201604986`*^9}, {
  3.826788690066348*^9, 3.826788691659772*^9}, {3.826789214169815*^9, 
  3.8267892194893904`*^9}, {3.8286012293108397`*^9, 3.828601290215101*^9}, {
  3.8286027607262144`*^9, 3.828602769102454*^9}, {3.8286041196222563`*^9, 
  3.828604127300662*^9}, {3.828604235198329*^9, 3.828604310838103*^9}, {
  3.828604388654233*^9, 3.8286044233008575`*^9}, {3.8286045807743173`*^9, 
  3.828604583637287*^9}, {3.829049687346178*^9, 3.829049788456682*^9}, {
  3.839672480404397*^9, 3.8396725300436845`*^9}, {3.839672649410894*^9, 
  3.8396726940737724`*^9}, {3.8396730501859975`*^9, 3.8396730724940367`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"3101196d-41cd-4317-8ca1-759347c9c823"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[
    DynamicModuleBox[{
     DynamicChart`click$69907$70002 = False, DynamicChart`click$69941$70002 = 
      False}, {{
       Directive[
        RGBColor[0.5, 0.5, 1.], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.1]]]], {{{{{}, {{
             Directive[
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.1]]], 
              RGBColor[0, 1, 0]], 
             TagBox[
              GeometricTransformation3DBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], {
                    Polygon3DBox[CompressedData["
1:eJztmPtTVOcZxxUVRYUVYikIiiYmIvHCRYIW0weBhmKpQURqQFFUwIBEsRBL
UEjwhlRRVNC0VgEZS7AFLS5CWXkNSFAggIAoN10uy+4Cu+eJItECku0PvqfT
ef6BdvadOTM7nzmzs+c5757z/X4WbN/jFzppwoQJBrojV3f8+7N+6Zd+6Zd+
6Zd+/b8uZFM3z3Z672rW6jdEMhDddUwQ2LrCGUHHV12HN/zFmZQ4+zKBLZ87
t2C5wx3Og3JszizZLbD5l51+EFbc4zw6ujGj4ZWWpZ+Zcbdb0sD5kmS7X54J
17I981XmlUNNnGv2Rs6aVqRhUftqGq0rH3Ge9tvsWpVikO1eYPN69EA751tb
Uv42/eUAa645UZdm8ZRzH3/j5O2afiaZXe5jtraL86K0la0GVWq2MGBHk2S4
m3PrJaVZc46qmF3lYUxO7eX8bfNxx6H3laynZa99q2kf5xv8bduelyiYxtJO
GZ2g5HyC1j86w6GXZX9wr7q9UcX5snPnH+0518281lXEFhv3cx6R5LZ+ca+c
5Vtm1lcsHeA8ZfKanHHPJ0xx9HjgQ4dBzn/0Mg0/nN3GNsd8ubPLQsO51EVW
cKm3hZmHKef8q0vk130/ibeVNLHp6esSfU9oOS85VTPL1qeO7Qo+vNr55wLn
3VtqTtYHfsdmVJgEWSaJ/B9dQp0qR8bSHf2bU2tFvnZQZRWlyWXpth2TvIf/
43xpW2fi26nwYprTsPW4yM3GFZrYkUJImDo/faJS5FZ/N3CaIimHvAvj1yX5
Ir/WWNpSbFwNb9WsVH7lL/LyqLhz379sgKEmZejNNvG6QsPTjnzU2gxvqUdO
LFwjcqPg8jzvnMeQY2YXtTdZnM8yZ9NjwsYOMK5Z9W7ADXHOH1a6lET0P4Xj
Cr95hTLxvkx7eu/ZlIIueGRnbnvomngfJe5pd7IDemCje2Ts0wQ15y6efbLf
9ffC2UKT+DEXcT/ku4wEHdnVBz6C0Y2lj8V9ZTZ1omt2vRIWwpaVbdsUnNdv
MpOunqcGnzluYUeaesS5/bFg66hfPyw6uf+Dew7ifjbrdY+6snsANIabr/oe
lHPuONNtSBIxCJPvJA6xPZ2cj1mlWn64VgOJgaOdad+1cu5mZjTXc6YWbMut
CtsNWjivWm/otaVAC9kHJFEHbRvF/ZOnlModBajM+EN+x+e1nG8MUE/3yhBg
5ZjvUHTiXc4DDeJeLG4VIK5zX3W7opjzrMNHL3qOCGCf/up+aFgW58/uhyh+
PyrAbW2vJG/BJfaGR5p2ni/qEOCbMvXQR7JbnL9Yk7p16UUBxgrKPm8bqODc
WLIsb46rAPHvZRrNUtRwvj7FZUd3iRZOu/3ldJX8AedfHTI5aWSphaPtHdaZ
soecs3Pmxc6faOAzk9rHFkmtnMurvDYtiR8EWW70yMdLOzk/DvjqQeIAZD77
VQhskXP+sUVMwOJd/XDKuyXvtVk35+a5Y95+zmpwuPat5ztFPZzf/YX9tWSV
EsxdS9mYp4LzyWtNDN851AetUmXq89t9nF9oDHFNM1RA+4GY/C9tVJw/kZoa
BsX0wLGIUcdVu9Sc22jU4fPqukC9weZOdUY/5/Ffx46f/Jkc6q9U9459M8B5
+PseaU8udIDT6dqgW5mD4nxmqM46qB+DWghf/ipOI/6e0n3b5DYPofmUrKxn
hVa83mpHaYPbA5AODV8pahD5BqegnWOXq+H+14FfPPAROL99cVHCD9nlYN0U
eOhmrsgd/M7HRb0rhd/ssLCb2CvywVWuC+plZ0EdKdv5xWuRZ30a6rviwlV2
O8nn+eSXIi9oXrGsKr6UTXG7Ff/XBpH/eZvVzPSqSnYzbDQpJVnkYd/+6dP2
f37PGm7s93hpI/Lt3mUdFVWNzMM5btvm8+J1xS0qdq+81MJCfozb7yGI84n5
daxpQnAb860LPhVoK3Kp1exIs0lPmOnB4LDPPMQ5byoZtg+5K2c2O9wvR6wR
7wu9EPRcz/Vcz/Vcz/X8f5fT730EOicg0LkCgc4hCHRuQaBzDgKdixDoHIVA
5y4EOqch0LkOgc6BCHRuRKBzJgKdSxHoHItA514EOicj0Lkagc7hut9D5nYE
Oucj0L1Ad71kj0CgewcC3VMQ6F6jmw/ZgxDo3oRA9ywEupch0D0Oge59CHRP
1O03slci0D0Uge6tCHTPRaB7MQLdoxHo3o1A93QEutcj0B4AgfYGuu8hPQMC
7SUQaI+BQHsPBNqTINBeBYH2MAi0t0GgPQ8C7YUQaI+kmxvpnXTzIT0VAu21
EGgPpjuf9Ga6/UN6NgTayyHQHk/3nCe9HwLtCRFor4hAe0jdfSG9pe59RHpO
3fOW9KIItEdFoL0rAu1pEWivi0B7YATaGyPQnhmB9tIItMdGoL237nlFenLd
/4X06m/e7//t4RF+AjGIaZI=
                    "]], 
                    
                    BSplineSurface3DBox[{{{-0.5239721256564662, \
-0.8517354116948787, 0.}, {0.3277632860384124, -1.375707537351345, 0.}, {
                    0.8517354116948787, -0.5239721256564662, 0.}, {
                    1.375707537351345, 0.3277632860384124, 0.}, {
                    0.5239721256564662, 0.8517354116948787, 
                    0.}, {-0.3277632860384124, 1.375707537351345, 
                    0.}, {-0.8517354116948787, 0.5239721256564662, 0.}, {-1., 
                    0.28296273989645127`, 0.}, {-1., 0., 
                    0.}}, {{-0.5239721256564662, -0.8517354116948787, 1}, {
                    0.3277632860384124, -1.375707537351345, 1}, {
                    0.8517354116948787, -0.5239721256564662, 1}, {
                    1.375707537351345, 0.3277632860384124, 1}, {
                    0.5239721256564662, 0.8517354116948787, 
                    1}, {-0.3277632860384124, 1.375707537351345, 
                    1}, {-0.8517354116948787, 0.5239721256564662, 1}, {-1., 
                    0.28296273989645127`, 1}, {-1., 0., 1}}}, 
                    SplineDegree -> {1, 2}, 
                    SplineWeights -> {{1., 0.7071067811865475, 1., 
                    0.7071067811865475, 1., 0.7071067811865475, 1., 
                    0.9622201961336289, 1.}, {1., 0.7071067811865475, 1., 
                    0.7071067811865475, 1., 0.7071067811865475, 1., 
                    0.9622201961336289, 1.}}, 
                    SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 2, 2, 3, 3, 
                    4, 4, 4}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                    1.}, {-0.5239721256564662, -0.8517354116948787, 
                    1.}, {-0.5239721256564662, -0.8517354116948787, 0.}}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 1.}, {-1., 
                    1.2246467991473532`*^-16, 1.}, {-1., 
                    1.2246467991473532`*^-16, 0.}}}]}}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 723]& , 
                   TagBoxNote -> "723"], 
                  StyleBox["723", {
                    GrayLevel[0], "Graphics3DLabel"}, StripOnInput -> False]],
                  Annotation[#, 
                  Style[723, {
                    GrayLevel[0], "Graphics3DLabel"}], "Tooltip"]& ], 
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$69907$70002, 
                    FEPrivate`Not[DynamicChart`click$69907$70002]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], 
               Dynamic[
                FEPrivate`If[
                DynamicChart`click$69907$70002, {{{1., 0., 0.}, {0., 1., 
                  0.}, {0., 0., 1.}}, {0.17458362613123068`, 
                  0.09757334414106485, 0.}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 
                 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$69907$70002}]], 
              "DelayedClickEffect3D"]}, {
             Directive[
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.1]]], 
              RGBColor[0.5, 0, 0.5]], 
             TagBox[
              GeometricTransformation3DBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[
                   TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    RGBColor[
                    0.6666666666666666, 0.6666666666666666, 
                    0.6666666666666666], 
                    AbsoluteThickness[1.5]}], {}, {}], {
                    Polygon3DBox[CompressedData["
1:eJxTTMoPSmVmYGBgAmIlIAaxR8HgBBE7vxkkHnmwXz7ZaX6W4+v9MPHV+Ylm
98sf7Vdo9rjyX/EVXDyKs/6BnsST/XEacy8WPH8BF182Wfjc/MVP9yeqZXmx
TH4OF5cyve41XeL5/ntcH89Jqz2DiwctYPk1sfTF/i0+obFGi57AxT/Hr8xQ
3flyv1Lo3+u3OB7DxU+qiLUxPnq1n81YOXlf9EO4+BHZFwyf3r3ef0mmP8zU
8j5c/Ox1h/b7997s93yxSKdh1m24eLfggxcXNrzdr5lffkj+/nW4+EqzT5Jv
kt/tb93aGfGF6wpc/Me2NtHy7+/2T9QPfP9d8QJcPI718LwbWe/3z7r6wrsk
4ARcfPI0zgcz9r7fr3JeiHWH8wG4uMyU/OeJ79/vN3bkWajnswEuDgEf9rPH
iBirLVu4B19cAdXZj4oPBnH0+Ppgjz1+P9hjTw8f7LGnnw/22NPbB3vs6fOD
Pfb0/MEee/r/YI89v3ywx56/Pthjz48f7LHn3w/22PP7B3vs5cMHe+zlyQd7
7OXPB3vs5dUHewDFdVTz
                    "]], 
                    
                    BSplineSurface3DBox[{{{-1., -1.2246467991473532`*^-16, 
                    0.}, {-0.9999999999999999, -0.5588917260071179, 
                    0.}, {-0.5239721256564662, -0.8517354116948787, 
                    0.}}, {{-1., -1.2246467991473532`*^-16, 
                    1}, {-0.9999999999999999, -0.5588917260071179, 
                    1}, {-0.5239721256564662, -0.8517354116948787, 1}}}, 
                    SplineDegree -> {1, 2}, 
                    SplineWeights -> {{1., 0.8729181306561532, 1.}, {1., 
                    0.8729181306561532, 1.}}, 
                    SplineKnots -> {{0, 0, 1, 1}, {0, 0, 0, 1, 1, 1}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                    1.}, {-1., -1.2246467991473532`*^-16, 
                    1.}, {-1., -1.2246467991473532`*^-16, 0.}}}], 
                    
                    Polygon3DBox[{{{0., 0., 0.}, {0., 0., 
                    1.}, {-0.5239721256564662, -0.8517354116948787, 
                    1.}, {-0.5239721256564662, -0.8517354116948787, 0.}}}]}}],
                     "DelayedMouseEffectStyle"], StatusArea[#, 140]& , 
                   TagBoxNote -> "140"], 
                  StyleBox["140", {
                    GrayLevel[0], "Graphics3DLabel"}, StripOnInput -> False]],
                  Annotation[#, 
                  Style[140, {
                    GrayLevel[0], "Graphics3DLabel"}], "Tooltip"]& ], 
                
                EventHandlerTag[{
                 "MouseClicked" :> 
                  FEPrivate`Set[DynamicChart`click$69941$70002, 
                    FEPrivate`Not[DynamicChart`click$69941$70002]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], 
               Dynamic[
                FEPrivate`If[
                DynamicChart`click$69941$70002, {{{1., 0., 0.}, {0., 1., 
                  0.}, {0., 0., 
                  1.}}, {-0.17458362613123068`, -0.09757334414106487, 0.}}, {{
                 1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {{1, 0, 0}, {0, 1, 0}, {0, 
                 0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$69941$70002}]], 
              "DelayedClickEffect3D"]}}}}, {}}, {{}}}}}, 
     DynamicModuleValues :> {}], {
    PlotRange -> {{1.2, -1.2}, {1.2, -1.2}, {0., 1.02}}, Boxed -> False, 
     BoxRatios -> {1, 1, 0.1}, FaceGridsStyle -> Automatic, 
     ImageSize -> {400, 400}, Lighting -> "Neutral", PlotLabel -> 
     FormBox["\"Prikaz ljudi, ki so umrli ali pa pre\[ZHacek]iveli\"", 
       TraditionalForm], PlotRange -> Automatic, ViewPoint -> {0, -2.4, 2}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"alive\"", "\"dead\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0, 1, 0]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.1]]], 
                    RGBColor[0.5, 0, 0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         "Graphics3DLabel", FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]
                    ], BaseStyle -> Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "\"Graphics3DLabel\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.839672505941642*^9, 3.8396725205432673`*^9}, 
   3.839673073742039*^9, 3.839673367531555*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"02d67bd6-f12d-4002-9332-a1e41251f945"]
}, Open  ]],

Cell["Analiza podatkov glede na \[CHacek]as.", "Text",
 CellChangeTimes->{{3.8396807077663727`*^9, 
  3.839680733771619*^9}},ExpressionUUID->"9d3f8708-baf1-41d1-8683-\
49577b50a17a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seznamcas", "=", 
  RowBox[{"podatki", "[", 
   RowBox[{"All", ",", "\"\<Time\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8267892783490953`*^9, 3.8267892845291367`*^9}, {
   3.8267893238572655`*^9, 3.8267893307220716`*^9}, {3.8267895380985813`*^9, 
   3.8267895463376336`*^9}, {3.826789717017218*^9, 3.8267897241282873`*^9}, 
   3.8286897217353067`*^9, {3.8396718831501484`*^9, 3.8396718913245625`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"3b8c5d9d-1b83-474a-aa4c-fdefcdf06efc"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Quantity[1, "Days"], 
       Quantity[5, "Days"], 
       Quantity[7, "Days"], 
       Quantity[9, "Days"], 
       Quantity[13, "Days"], 
       Quantity[13, "Days"], 
       Quantity[17, "Days"], 
       Quantity[20, "Days"], 
       Quantity[26, "Days"], 
       Quantity[26, "Days"], 
       Quantity[28, "Days"], 
       Quantity[32, "Days"], 
       Quantity[32, "Days"], 
       Quantity[43, "Days"], 
       Quantity[43, "Days"], 
       Quantity[44, "Days"], 
       Quantity[51, "Days"], 
       Quantity[51, "Days"], 
       Quantity[51, "Days"], 
       Quantity[56, "Days"], 
       Quantity[57, "Days"], 
       Quantity[59, "Days"], 
       Quantity[62, "Days"], 
       Quantity[66, "Days"], 
       Quantity[66, "Days"], 
       Quantity[67, "Days"], 
       Quantity[68, "Days"], 
       Quantity[69, "Days"], 
       Quantity[79, "Days"], 
       Quantity[79, "Days"], 
       Quantity[79, "Days"], 
       Quantity[87, "Days"], 
       Quantity[88, "Days"], 
       Quantity[91, "Days"], 
       Quantity[93, "Days"], 
       Quantity[98, "Days"], 
       Quantity[98, "Days"], 
       Quantity[104, "Days"], 
       Quantity[105, "Days"], 
       Quantity[106, "Days"], 
       Quantity[112, "Days"], 
       Quantity[116, "Days"], 
       Quantity[116, "Days"], 
       Quantity[118, "Days"], 
       Quantity[119, "Days"], 
       Quantity[121, "Days"], 
       Quantity[121, "Days"], 
       Quantity[135, "Days"], 
       Quantity[144, "Days"], 
       Quantity[150, "Days"], 
       Quantity[150, "Days"], 
       Quantity[162, "Days"], 
       Quantity[162, "Days"], 
       Quantity[167, "Days"], 
       Quantity[183, "Days"], 
       Quantity[186, "Days"], 
       Quantity[190, "Days"], 
       Quantity[198, "Days"], 
       Quantity[198, "Days"], 
       Quantity[200, "Days"], 
       Quantity[211, "Days"], 
       Quantity[215, "Days"], 
       Quantity[223, "Days"], 
       Quantity[224, "Days"], 
       Quantity[228, "Days"], 
       Quantity[236, "Days"], 
       Quantity[238, "Days"], 
       Quantity[242, "Days"], 
       Quantity[243, "Days"], 
       Quantity[248, "Days"], 
       Quantity[249, "Days"], 
       Quantity[251, "Days"], 
       Quantity[252, "Days"], 
       Quantity[253, "Days"], 
       Quantity[256, "Days"], 
       Quantity[257, "Days"], 
       Quantity[259, "Days"], 
       Quantity[261, "Days"], 
       Quantity[271, "Days"], 
       Quantity[271, "Days"], 
       Quantity[277, "Days"], 
       Quantity[283, "Days"], 
       Quantity[284, "Days"], 
       Quantity[289, "Days"], 
       Quantity[291, "Days"], 
       Quantity[311, "Days"], 
       Quantity[312, "Days"], 
       Quantity[316, "Days"], 
       Quantity[316, "Days"], 
       Quantity[331, "Days"], 
       Quantity[334, "Days"], 
       Quantity[338, "Days"], 
       Quantity[340, "Days"], 
       Quantity[340, "Days"], 
       Quantity[341, "Days"], 
       Quantity[346, "Days"], 
       Quantity[347, "Days"], 
       Quantity[354, "Days"], 
       Quantity[361, "Days"], 
       Quantity[367, "Days"], 
       Quantity[370, "Days"], 
       Quantity[370, "Days"], 
       Quantity[386, "Days"], 
       Quantity[391, "Days"], 
       Quantity[392, "Days"], 
       Quantity[403, "Days"], 
       Quantity[406, "Days"], 
       Quantity[410, "Days"], 
       Quantity[421, "Days"], 
       Quantity[428, "Days"], 
       Quantity[432, "Days"], 
       Quantity[432, "Days"], 
       Quantity[439, "Days"], 
       Quantity[452, "Days"], 
       Quantity[478, "Days"], 
       Quantity[481, "Days"], 
       Quantity[485, "Days"], 
       Quantity[486, "Days"], 
       Quantity[490, "Days"], 
       Quantity[494, "Days"], 
       Quantity[495, "Days"], 
       Quantity[512, "Days"], 
       Quantity[512, "Days"], 
       Quantity[535, "Days"], 
       Quantity[543, "Days"], 
       Quantity[545, "Days"], 
       Quantity[545, "Days"], 
       Quantity[545, "Days"], 
       Quantity[563, "Days"], 
       Quantity[570, "Days"], 
       Quantity[570, "Days"], 
       Quantity[572, "Days"], 
       Quantity[579, "Days"], 
       Quantity[582, "Days"], 
       Quantity[583, "Days"], 
       Quantity[590, "Days"], 
       Quantity[596, "Days"], 
       Quantity[615, "Days"], 
       Quantity[621, "Days"], 
       Quantity[630, "Days"], 
       Quantity[631, "Days"], 
       Quantity[633, "Days"], 
       Quantity[652, "Days"], 
       Quantity[654, "Days"], 
       Quantity[655, "Days"], 
       Quantity[659, "Days"], 
       Quantity[670, "Days"], 
       Quantity[670, "Days"], 
       Quantity[692, "Days"], 
       Quantity[697, "Days"], 
       Quantity[701, "Days"], 
       Quantity[719, "Days"], 
       Quantity[723, "Days"], 
       Quantity[725, "Days"], 
       Quantity[730, "Days"], 
       Quantity[734, "Days"], 
       Quantity[753, "Days"], 
       Quantity[757, "Days"], 
       Quantity[773, "Days"], 
       Quantity[776, "Days"], 
       Quantity[790, "Days"], 
       Quantity[806, "Days"], 
       Quantity[834, "Days"], 
       Quantity[835, "Days"], 
       Quantity[864, "Days"], 
       Quantity[864, "Days"], 
       Quantity[875, "Days"], 
       Quantity[888, "Days"], 
       Quantity[890, "Days"], 
       Quantity[903, "Days"], 
       Quantity[909, "Days"], 
       Quantity[915, "Days"], 
       Quantity[932, "Days"], 
       Quantity[939, "Days"], 
       Quantity[945, "Days"], 
       Quantity[945, "Days"], 
       Quantity[946, "Days"], 
       Quantity[951, "Days"], 
       Quantity[961, "Days"], 
       Quantity[965, "Days"], 
       Quantity[968, "Days"], 
       Quantity[1016, "Days"], 
       Quantity[1028, "Days"], 
       Quantity[1050, "Days"], 
       Quantity[1058, "Days"], 
       Quantity[1058, "Days"], 
       Quantity[1092, "Days"], 
       Quantity[1092, "Days"], 
       Quantity[1105, "Days"], 
       Quantity[1110, "Days"], 
       Quantity[1110, "Days"], 
       Quantity[1114, "Days"], 
       Quantity[1115, "Days"], 
       Quantity[1118, "Days"], 
       Quantity[1124, "Days"], 
       Quantity[1124, "Days"], 
       Quantity[1125, "Days"], 
       Quantity[1128, "Days"], 
       Quantity[1128, "Days"], 
       Quantity[1145, "Days"], 
       Quantity[1149, "Days"], 
       Quantity[1154, "Days"], 
       Quantity[1154, "Days"], 
       Quantity[1165, "Days"], 
       Quantity[1186, "Days"], 
       Quantity[1191, "Days"], 
       Quantity[1196, "Days"], 
       Quantity[1208, "Days"], 
       Quantity[1208, "Days"], 
       Quantity[1210, "Days"], 
       Quantity[1224, "Days"], 
       Quantity[1224, "Days"], 
       Quantity[1229, "Days"], 
       Quantity[1230, "Days"], 
       Quantity[1252, "Days"], 
       Quantity[1256, "Days"], 
       Quantity[1274, "Days"], 
       Quantity[1291, "Days"], 
       Quantity[1297, "Days"], 
       Quantity[1297, "Days"], 
       Quantity[1302, "Days"], 
       Quantity[1313, "Days"], 
       Quantity[1316, "Days"], 
       Quantity[1350, "Days"], 
       Quantity[1357, "Days"], 
       Quantity[1383, "Days"], 
       Quantity[1383, "Days"], 
       Quantity[1383, "Days"], 
       Quantity[1383, "Days"], 
       Quantity[1386, "Days"], 
       Quantity[1388, "Days"], 
       Quantity[1395, "Days"], 
       Quantity[1418, "Days"], 
       Quantity[1428, "Days"], 
       Quantity[1429, "Days"], 
       Quantity[1435, "Days"], 
       Quantity[1449, "Days"], 
       Quantity[1449, "Days"], 
       Quantity[1450, "Days"], 
       Quantity[1457, "Days"], 
       Quantity[1463, "Days"], 
       Quantity[1470, "Days"], 
       Quantity[1497, "Days"], 
       Quantity[1497, "Days"], 
       Quantity[1500, "Days"], 
       Quantity[1509, "Days"], 
       Quantity[1522, "Days"], 
       Quantity[1527, "Days"], 
       Quantity[1527, "Days"], 
       Quantity[1541, "Days"], 
       Quantity[1567, "Days"], 
       Quantity[1571, "Days"], 
       Quantity[1578, "Days"], 
       Quantity[1586, "Days"], 
       Quantity[1594, "Days"], 
       Quantity[1610, "Days"], 
       Quantity[1610, "Days"], 
       Quantity[1611, "Days"], 
       Quantity[1617, "Days"], 
       Quantity[1624, "Days"], 
       Quantity[1638, "Days"], 
       Quantity[1641, "Days"], 
       Quantity[1655, "Days"], 
       Quantity[1668, "Days"], 
       Quantity[1674, "Days"], 
       Quantity[1699, "Days"], 
       Quantity[1700, "Days"], 
       Quantity[1700, "Days"], 
       Quantity[1707, "Days"], 
       Quantity[1717, "Days"], 
       Quantity[1717, "Days"], 
       Quantity[1718, "Days"], 
       Quantity[1718, "Days"], 
       Quantity[1734, "Days"], 
       Quantity[1736, "Days"], 
       Quantity[1736, "Days"], 
       Quantity[1739, "Days"], 
       Quantity[1739, "Days"], 
       Quantity[1739, "Days"], 
       Quantity[1745, "Days"], 
       Quantity[1745, "Days"], 
       Quantity[1746, "Days"], 
       Quantity[1749, "Days"], 
       Quantity[1770, "Days"], 
       Quantity[1770, "Days"], 
       Quantity[1795, "Days"], 
       Quantity[1802, "Days"], 
       Quantity[1802, "Days"], 
       Quantity[1803, "Days"], 
       Quantity[1808, "Days"], 
       Quantity[1808, "Days"], 
       Quantity[1815, "Days"], 
       Quantity[1820, "Days"], 
       Quantity[1839, "Days"], 
       Quantity[1861, "Days"], 
       Quantity[1861, "Days"], 
       Quantity[1893, "Days"], 
       Quantity[1900, "Days"], 
       Quantity[1920, "Days"], 
       Quantity[1937, "Days"], 
       Quantity[1947, "Days"], 
       Quantity[1947, "Days"], 
       Quantity[1959, "Days"], 
       Quantity[1959, "Days"], 
       Quantity[1975, "Days"], 
       Quantity[1988, "Days"], 
       Quantity[1988, "Days"], 
       Quantity[1995, "Days"], 
       Quantity[1995, "Days"], 
       Quantity[2001, "Days"], 
       Quantity[2016, "Days"], 
       Quantity[2025, "Days"], 
       Quantity[2032, "Days"], 
       Quantity[2035, "Days"], 
       Quantity[2038, "Days"], 
       Quantity[2041, "Days"], 
       Quantity[2043, "Days"], 
       Quantity[2048, "Days"], 
       Quantity[2049, "Days"], 
       Quantity[2056, "Days"], 
       Quantity[2060, "Days"], 
       Quantity[2090, "Days"], 
       Quantity[2090, "Days"], 
       Quantity[2095, "Days"], 
       Quantity[2096, "Days"], 
       Quantity[2096, "Days"], 
       Quantity[2098, "Days"], 
       Quantity[2102, "Days"], 
       Quantity[2109, "Days"], 
       Quantity[2135, "Days"], 
       Quantity[2135, "Days"], 
       Quantity[2147, "Days"], 
       Quantity[2190, "Days"], 
       Quantity[2211, "Days"], 
       Quantity[2221, "Days"], 
       Quantity[2223, "Days"], 
       Quantity[2253, "Days"], 
       Quantity[2253, "Days"], 
       Quantity[2264, "Days"], 
       Quantity[2267, "Days"], 
       Quantity[2270, "Days"], 
       Quantity[2291, "Days"], 
       Quantity[2291, "Days"], 
       Quantity[2313, "Days"], 
       Quantity[2313, "Days"], 
       Quantity[2313, "Days"], 
       Quantity[2330, "Days"], 
       Quantity[2332, "Days"], 
       Quantity[2335, "Days"], 
       Quantity[2356, "Days"], 
       Quantity[2367, "Days"], 
       Quantity[2384, "Days"], 
       Quantity[2418, "Days"], 
       Quantity[2421, "Days"], 
       Quantity[2421, "Days"], 
       Quantity[2430, "Days"], 
       Quantity[2433, "Days"], 
       Quantity[2434, "Days"], 
       Quantity[2462, "Days"], 
       Quantity[2462, "Days"], 
       Quantity[2488, "Days"], 
       Quantity[2489, "Days"], 
       Quantity[2497, "Days"], 
       Quantity[2516, "Days"], 
       Quantity[2531, "Days"], 
       Quantity[2533, "Days"], 
       Quantity[2575, "Days"], 
       Quantity[2585, "Days"], 
       Quantity[2589, "Days"], 
       Quantity[2601, "Days"], 
       Quantity[2607, "Days"], 
       Quantity[2625, "Days"], 
       Quantity[2630, "Days"], 
       Quantity[2646, "Days"], 
       Quantity[2654, "Days"], 
       Quantity[2690, "Days"], 
       Quantity[2696, "Days"], 
       Quantity[2700, "Days"], 
       Quantity[2712, "Days"], 
       Quantity[2714, "Days"], 
       Quantity[2716, "Days"], 
       Quantity[2716, "Days"], 
       Quantity[2740, "Days"], 
       Quantity[2761, "Days"], 
       Quantity[2762, "Days"], 
       Quantity[2765, "Days"], 
       Quantity[2789, "Days"], 
       Quantity[2789, "Days"], 
       Quantity[2812, "Days"], 
       Quantity[2815, "Days"], 
       Quantity[2827, "Days"], 
       Quantity[2831, "Days"], 
       Quantity[2846, "Days"], 
       Quantity[2867, "Days"], 
       Quantity[2871, "Days"], 
       Quantity[2889, "Days"], 
       Quantity[2909, "Days"], 
       Quantity[2922, "Days"], 
       Quantity[2936, "Days"], 
       Quantity[2948, "Days"], 
       Quantity[2955, "Days"], 
       Quantity[2957, "Days"], 
       Quantity[2994, "Days"], 
       Quantity[2994, "Days"], 
       Quantity[2999, "Days"], 
       Quantity[3007, "Days"], 
       Quantity[3045, "Days"], 
       Quantity[3060, "Days"], 
       Quantity[3078, "Days"], 
       Quantity[3078, "Days"], 
       Quantity[3084, "Days"], 
       Quantity[3084, "Days"], 
       Quantity[3110, "Days"], 
       Quantity[3130, "Days"], 
       Quantity[3131, "Days"], 
       Quantity[3146, "Days"], 
       Quantity[3147, "Days"], 
       Quantity[3172, "Days"], 
       Quantity[3179, "Days"], 
       Quantity[3187, "Days"], 
       Quantity[3187, "Days"], 
       Quantity[3255, "Days"], 
       Quantity[3260, "Days"], 
       Quantity[3287, "Days"], 
       Quantity[3289, "Days"], 
       Quantity[3300, "Days"], 
       Quantity[3301, "Days"], 
       Quantity[3319, "Days"], 
       Quantity[3361, "Days"], 
       Quantity[3402, "Days"], 
       Quantity[3425, "Days"], 
       Quantity[3434, "Days"], 
       Quantity[37, "Days"], 
       Quantity[43, "Days"], 
       Quantity[57, "Days"], 
       Quantity[80, "Days"], 
       Quantity[82, "Days"], 
       Quantity[93, "Days"], 
       Quantity[114, "Days"], 
       Quantity[116, "Days"], 
       Quantity[116, "Days"], 
       Quantity[119, "Days"], 
       Quantity[152, "Days"], 
       Quantity[158, "Days"], 
       Quantity[172, "Days"], 
       Quantity[200, "Days"], 
       Quantity[206, "Days"], 
       Quantity[211, "Days"], 
       Quantity[231, "Days"], 
       Quantity[280, "Days"], 
       Quantity[311, "Days"], 
       Quantity[312, "Days"], 
       Quantity[402, "Days"], 
       Quantity[414, "Days"], 
       Quantity[443, "Days"], 
       Quantity[450, "Days"], 
       Quantity[452, "Days"], 
       Quantity[479, "Days"], 
       Quantity[499, "Days"], 
       Quantity[535, "Days"], 
       Quantity[642, "Days"], 
       Quantity[646, "Days"], 
       Quantity[661, "Days"], 
       Quantity[663, "Days"], 
       Quantity[663, "Days"], 
       Quantity[671, "Days"], 
       Quantity[750, "Days"], 
       Quantity[777, "Days"], 
       Quantity[863, "Days"], 
       Quantity[863, "Days"], 
       Quantity[864, "Days"], 
       Quantity[868, "Days"], 
       Quantity[934, "Days"], 
       Quantity[951, "Days"], 
       Quantity[992, "Days"], 
       Quantity[1001, "Days"], 
       Quantity[1002, "Days"], 
       Quantity[1109, "Days"], 
       Quantity[1122, "Days"], 
       Quantity[1124, "Days"], 
       Quantity[1149, "Days"], 
       Quantity[1178, "Days"], 
       Quantity[1230, "Days"], 
       Quantity[1232, "Days"], 
       Quantity[1242, "Days"], 
       Quantity[1275, "Days"], 
       Quantity[1352, "Days"], 
       Quantity[1384, "Days"], 
       Quantity[1450, "Days"], 
       Quantity[1586, "Days"], 
       Quantity[1624, "Days"], 
       Quantity[1668, "Days"], 
       Quantity[1681, "Days"], 
       Quantity[1778, "Days"], 
       Quantity[1795, "Days"], 
       Quantity[1795, "Days"], 
       Quantity[1877, "Days"], 
       Quantity[1989, "Days"], 
       Quantity[2049, "Days"], 
       Quantity[2094, "Days"], 
       Quantity[2095, "Days"], 
       Quantity[2264, "Days"], 
       Quantity[2291, "Days"], 
       Quantity[2369, "Days"], 
       Quantity[2369, "Days"], 
       Quantity[2414, "Days"], 
       Quantity[2425, "Days"], 
       Quantity[2451, "Days"], 
       Quantity[2455, "Days"], 
       Quantity[2557, "Days"], 
       Quantity[2598, "Days"], 
       Quantity[2625, "Days"], 
       Quantity[2659, "Days"], 
       Quantity[2688, "Days"], 
       Quantity[2726, "Days"], 
       Quantity[2741, "Days"], 
       Quantity[2750, "Days"], 
       Quantity[2909, "Days"], 
       Quantity[2961, "Days"], 
       Quantity[2994, "Days"], 
       Quantity[3019, "Days"], 
       Quantity[3255, "Days"], 
       Quantity[3281, "Days"], 
       Quantity[3430, "Days"], 
       Quantity[1, "Days"], 
       Quantity[2, "Days"], 
       Quantity[3, "Days"], 
       Quantity[5, "Days"], 
       Quantity[7, "Days"], 
       Quantity[9, "Days"], 
       Quantity[10, "Days"], 
       Quantity[10, "Days"], 
       Quantity[17, "Days"], 
       Quantity[20, "Days"], 
       Quantity[21, "Days"], 
       Quantity[26, "Days"], 
       Quantity[33, "Days"], 
       Quantity[43, "Days"], 
       Quantity[43, "Days"], 
       Quantity[48, "Days"], 
       Quantity[50, "Days"], 
       Quantity[51, "Days"], 
       Quantity[52, "Days"], 
       Quantity[62, "Days"], 
       Quantity[62, "Days"], 
       Quantity[68, "Days"], 
       Quantity[78, "Days"], 
       Quantity[79, "Days"], 
       Quantity[82, "Days"], 
       Quantity[97, "Days"], 
       Quantity[104, "Days"], 
       Quantity[105, "Days"], 
       Quantity[112, "Days"], 
       Quantity[115, "Days"], 
       Quantity[124, "Days"], 
       Quantity[141, "Days"], 
       Quantity[142, "Days"], 
       Quantity[143, "Days"], 
       Quantity[150, "Days"], 
       Quantity[154, "Days"], 
       Quantity[162, "Days"], 
       Quantity[162, "Days"], 
       Quantity[167, "Days"], 
       Quantity[173, "Days"], 
       Quantity[193, "Days"], 
       Quantity[205, "Days"], 
       Quantity[209, "Days"], 
       Quantity[231, "Days"], 
       Quantity[238, "Days"], 
       Quantity[239, "Days"], 
       Quantity[246, "Days"], 
       Quantity[246, "Days"], 
       Quantity[250, "Days"], 
       Quantity[253, "Days"], 
       Quantity[260, "Days"], 
       Quantity[269, "Days"], 
       Quantity[271, "Days"], 
       Quantity[273, "Days"], 
       Quantity[280, "Days"], 
       Quantity[297, "Days"], 
       Quantity[306, "Days"], 
       Quantity[331, "Days"], 
       Quantity[337, "Days"], 
       Quantity[341, "Days"], 
       Quantity[341, "Days"], 
       Quantity[347, "Days"], 
       Quantity[366, "Days"], 
       Quantity[377, "Days"], 
       Quantity[387, "Days"], 
       Quantity[388, "Days"], 
       Quantity[399, "Days"], 
       Quantity[417, "Days"], 
       Quantity[424, "Days"], 
       Quantity[428, "Days"], 
       Quantity[448, "Days"], 
       Quantity[448, "Days"], 
       Quantity[448, "Days"], 
       Quantity[459, "Days"], 
       Quantity[470, "Days"], 
       Quantity[490, "Days"], 
       Quantity[507, "Days"], 
       Quantity[512, "Days"], 
       Quantity[549, "Days"], 
       Quantity[593, "Days"], 
       Quantity[604, "Days"], 
       Quantity[614, "Days"], 
       Quantity[642, "Days"], 
       Quantity[652, "Days"], 
       Quantity[654, "Days"], 
       Quantity[660, "Days"], 
       Quantity[670, "Days"], 
       Quantity[675, "Days"], 
       Quantity[678, "Days"], 
       Quantity[693, "Days"], 
       Quantity[715, "Days"], 
       Quantity[731, "Days"], 
       Quantity[750, "Days"], 
       Quantity[753, "Days"], 
       Quantity[757, "Days"], 
       Quantity[759, "Days"], 
       Quantity[762, "Days"], 
       Quantity[772, "Days"], 
       Quantity[772, "Days"], 
       Quantity[777, "Days"], 
       Quantity[777, "Days"], 
       Quantity[793, "Days"], 
       Quantity[840, "Days"], 
       Quantity[852, "Days"], 
       Quantity[900, "Days"], 
       Quantity[907, "Days"], 
       Quantity[907, "Days"], 
       Quantity[909, "Days"], 
       Quantity[915, "Days"], 
       Quantity[963, "Days"], 
       Quantity[995, "Days"], 
       Quantity[995, "Days"], 
       Quantity[1012, "Days"], 
       Quantity[1013, "Days"], 
       Quantity[1051, "Days"], 
       Quantity[1072, "Days"], 
       Quantity[1086, "Days"], 
       Quantity[1114, "Days"], 
       Quantity[1125, "Days"], 
       Quantity[1164, "Days"], 
       Quantity[1196, "Days"], 
       Quantity[1229, "Days"], 
       Quantity[1242, "Days"], 
       Quantity[1252, "Days"], 
       Quantity[1254, "Days"], 
       Quantity[1254, "Days"], 
       Quantity[1269, "Days"], 
       Quantity[1291, "Days"], 
       Quantity[1291, "Days"], 
       Quantity[1299, "Days"], 
       Quantity[1304, "Days"], 
       Quantity[1309, "Days"], 
       Quantity[1315, "Days"], 
       Quantity[1326, "Days"], 
       Quantity[1331, "Days"], 
       Quantity[1350, "Days"], 
       Quantity[1365, "Days"], 
       Quantity[1368, "Days"], 
       Quantity[1368, "Days"], 
       Quantity[1427, "Days"], 
       Quantity[1435, "Days"], 
       Quantity[1449, "Days"], 
       Quantity[1473, "Days"], 
       Quantity[1497, "Days"], 
       Quantity[1594, "Days"], 
       Quantity[1605, "Days"], 
       Quantity[1606, "Days"], 
       Quantity[1611, "Days"], 
       Quantity[1623, "Days"], 
       Quantity[1638, "Days"], 
       Quantity[1673, "Days"], 
       Quantity[1681, "Days"], 
       Quantity[1698, "Days"], 
       Quantity[1699, "Days"], 
       Quantity[1702, "Days"], 
       Quantity[1702, "Days"], 
       Quantity[1707, "Days"], 
       Quantity[1732, "Days"], 
       Quantity[1736, "Days"], 
       Quantity[1746, "Days"], 
       Quantity[1777, "Days"], 
       Quantity[1778, "Days"], 
       Quantity[1785, "Days"], 
       Quantity[1786, "Days"], 
       Quantity[1786, "Days"], 
       Quantity[1791, "Days"], 
       Quantity[1795, "Days"], 
       Quantity[1815, "Days"], 
       Quantity[1835, "Days"], 
       Quantity[1875, "Days"], 
       Quantity[1877, "Days"], 
       Quantity[1893, "Days"], 
       Quantity[1914, "Days"], 
       Quantity[1939, "Days"], 
       Quantity[1940, "Days"], 
       Quantity[1942, "Days"], 
       Quantity[1962, "Days"], 
       Quantity[1966, "Days"], 
       Quantity[1973, "Days"], 
       Quantity[1980, "Days"], 
       Quantity[2001, "Days"], 
       Quantity[2014, "Days"], 
       Quantity[2014, "Days"], 
       Quantity[2025, "Days"], 
       Quantity[2034, "Days"], 
       Quantity[2034, "Days"], 
       Quantity[2034, "Days"], 
       Quantity[2038, "Days"], 
       Quantity[2048, "Days"], 
       Quantity[2060, "Days"], 
       Quantity[2083, "Days"], 
       Quantity[2094, "Days"], 
       Quantity[2102, "Days"], 
       Quantity[2108, "Days"], 
       Quantity[2129, "Days"], 
       Quantity[2193, "Days"], 
       Quantity[2211, "Days"], 
       Quantity[2221, "Days"], 
       Quantity[2223, "Days"], 
       Quantity[2233, "Days"], 
       Quantity[2236, "Days"], 
       Quantity[2252, "Days"], 
       Quantity[2252, "Days"], 
       Quantity[2271, "Days"], 
       Quantity[2301, "Days"], 
       Quantity[2312, "Days"], 
       Quantity[2332, "Days"], 
       Quantity[2335, "Days"], 
       Quantity[2356, "Days"], 
       Quantity[2392, "Days"], 
       Quantity[2405, "Days"], 
       Quantity[2405, "Days"], 
       Quantity[2421, "Days"], 
       Quantity[2433, "Days"], 
       Quantity[2462, "Days"], 
       Quantity[2486, "Days"], 
       Quantity[2488, "Days"], 
       Quantity[2504, "Days"], 
       Quantity[2529, "Days"], 
       Quantity[2529, "Days"], 
       Quantity[2531, "Days"], 
       Quantity[2556, "Days"], 
       Quantity[2567, "Days"], 
       Quantity[2632, "Days"], 
       Quantity[2638, "Days"], 
       Quantity[2638, "Days"], 
       Quantity[2654, "Days"], 
       Quantity[2659, "Days"], 
       Quantity[2663, "Days"], 
       Quantity[2670, "Days"], 
       Quantity[2680, "Days"], 
       Quantity[2700, "Days"], 
       Quantity[2701, "Days"], 
       Quantity[2705, "Days"], 
       Quantity[2726, "Days"], 
       Quantity[2750, "Days"], 
       Quantity[2759, "Days"], 
       Quantity[2768, "Days"], 
       Quantity[2783, "Days"], 
       Quantity[2795, "Days"], 
       Quantity[2870, "Days"], 
       Quantity[2871, "Days"], 
       Quantity[2876, "Days"], 
       Quantity[2900, "Days"], 
       Quantity[2906, "Days"], 
       Quantity[2918, "Days"], 
       Quantity[2948, "Days"], 
       Quantity[2993, "Days"], 
       Quantity[3028, "Days"], 
       Quantity[3042, "Days"], 
       Quantity[3063, "Days"], 
       Quantity[3063, "Days"], 
       Quantity[3072, "Days"], 
       Quantity[3077, "Days"], 
       Quantity[3084, "Days"], 
       Quantity[3086, "Days"], 
       Quantity[3096, "Days"], 
       Quantity[3102, "Days"], 
       Quantity[3106, "Days"], 
       Quantity[3116, "Days"], 
       Quantity[3124, "Days"], 
       Quantity[3142, "Days"], 
       Quantity[3145, "Days"], 
       Quantity[3145, "Days"], 
       Quantity[3172, "Days"], 
       Quantity[3173, "Days"], 
       Quantity[3175, "Days"], 
       Quantity[3186, "Days"], 
       Quantity[3202, "Days"], 
       Quantity[3215, "Days"], 
       Quantity[3224, "Days"], 
       Quantity[3229, "Days"], 
       Quantity[3265, "Days"], 
       Quantity[3300, "Days"], 
       Quantity[3325, "Days"], 
       Quantity[3360, "Days"], 
       Quantity[3372, "Days"], 
       Quantity[3379, "Days"], 
       Quantity[3412, "Days"], 
       Quantity[3420, "Days"], 
       Quantity[14, "Days"], 
       Quantity[40, "Days"], 
       Quantity[45, "Days"], 
       Quantity[93, "Days"], 
       Quantity[106, "Days"], 
       Quantity[116, "Days"], 
       Quantity[116, "Days"], 
       Quantity[121, "Days"], 
       Quantity[229, "Days"], 
       Quantity[250, "Days"], 
       Quantity[259, "Days"], 
       Quantity[261, "Days"], 
       Quantity[306, "Days"], 
       Quantity[312, "Days"], 
       Quantity[344, "Days"], 
       Quantity[392, "Days"], 
       Quantity[442, "Days"], 
       Quantity[512, "Days"], 
       Quantity[625, "Days"], 
       Quantity[673, "Days"], 
       Quantity[731, "Days"], 
       Quantity[777, "Days"], 
       Quantity[864, "Days"], 
       Quantity[879, "Days"], 
       Quantity[887, "Days"], 
       Quantity[899, "Days"], 
       Quantity[899, "Days"], 
       Quantity[903, "Days"], 
       Quantity[920, "Days"], 
       Quantity[929, "Days"], 
       Quantity[943, "Days"], 
       Quantity[953, "Days"], 
       Quantity[953, "Days"], 
       Quantity[1016, "Days"], 
       Quantity[1151, "Days"], 
       Quantity[1196, "Days"], 
       Quantity[1291, "Days"], 
       Quantity[1291, "Days"], 
       Quantity[1457, "Days"], 
       Quantity[1508, "Days"], 
       Quantity[1567, "Days"], 
       Quantity[1674, "Days"], 
       Quantity[1736, "Days"], 
       Quantity[1739, "Days"], 
       Quantity[1942, "Days"], 
       Quantity[2026, "Days"], 
       Quantity[2171, "Days"], 
       Quantity[2268, "Days"], 
       Quantity[2276, "Days"], 
       Quantity[2413, "Days"], 
       Quantity[2434, "Days"], 
       Quantity[2463, "Days"], 
       Quantity[2650, "Days"], 
       Quantity[2680, "Days"], 
       Quantity[2935, "Days"], 
       Quantity[3072, "Days"], 
       Quantity[3161, "Days"], 
       Quantity[3211, "Days"], 
       Quantity[3304, "Days"]}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 75], 120, 6, {
       All}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Days"]], 863], "Meta" -> 
     Association["ID" -> 177614319714677], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[144, 6, 863, 75], 120, 6, {
       All}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[
        Quantity[1, "Days"]], 863], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     144, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1", "\"day\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"9", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"13", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"13", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"17", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"20", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"26", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"26", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"32", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"32", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"59", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{22}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{23}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{24}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{25}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"67", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{26}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"68", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{27}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"69", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{28}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"79", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{29}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"79", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{30}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"79", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{31}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"87", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{32}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"88", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{33}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"91", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{34}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"93", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{35}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"98", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{36}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"98", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{37}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"104", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{38}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"105", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{39}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"106", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{40}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"112", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{41}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"116", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{42}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"116", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{43}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"118", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{44}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"119", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{45}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"121", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{46}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"121", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{47}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"135", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{48}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"144", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{49}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"150", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{50}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"150", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{51}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"162", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{52}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"162", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{53}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"167", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{54}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"183", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{55}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"186", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{56}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"190", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{57}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"198", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{58}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"198", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{59}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"200", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{60}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"211", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{61}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"215", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{62}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"223", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{63}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"224", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{64}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"228", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{65}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"236", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{66}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"238", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{67}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"242", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{68}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"243", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{69}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"248", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{70}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"249", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{71}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"251", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{72}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"252", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{73}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"253", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{74}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"256", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{75}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"257", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{76}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"259", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{77}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"261", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{78}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"271", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{79}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"271", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{80}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"277", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{81}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"283", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{82}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"284", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{83}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"289", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{84}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"291", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{85}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"311", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{86}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"312", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{87}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"316", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{88}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"316", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{89}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"331", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{90}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"334", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{91}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"338", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{92}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"340", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{93}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"340", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{94}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"341", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{95}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"346", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{96}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"347", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{97}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"354", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{98}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"361", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{99}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"367", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{100}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"370", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{101}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"370", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{102}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"386", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{103}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"391", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{104}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"392", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{105}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"403", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{106}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"406", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{107}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"410", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{108}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"421", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{109}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"428", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{110}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"432", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{111}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"432", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{112}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"439", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{113}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"452", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{114}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"478", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{115}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"481", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{116}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"485", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{117}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"486", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{118}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"490", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{119}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"494", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{120}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 
                  0.5098039215686274]]}, Inherited}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    863, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {All}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {All}]], MenuEvaluator -> Automatic]}],
                     " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 
                    Rational[863, 6], 1], {1, Rational[863, 6] - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{535., {254.5, 261.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{535., {254.5, 261.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839671893149766*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"4772a290-f68c-4084-b8fa-01b7df36a040"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  RowBox[{
  "Pre\[SHacek]teti", " ", "primeri", " ", "na", " ", "dolo\[CHacek]en", " ", 
   RowBox[{"dan", "."}]}], "Text"]], "Input",
 CellChangeTimes->{{3.839680742570034*^9, 
  3.839680772152686*^9}},ExpressionUUID->"f2864a5c-8b25-4b7c-aeb3-\
ebe970827e04"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Stevilo", "[", "dan_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"dan", ",", 
    RowBox[{"Count", "[", 
     RowBox[{"seznamcas", ",", "dan"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8267897955940275`*^9, 3.8267899097369223`*^9}, {
  3.8267899436345224`*^9, 3.826789971777951*^9}, {3.8267905809698954`*^9, 
  3.8267906072895174`*^9}, {3.826791047225624*^9, 3.8267910536012697`*^9}, {
  3.839671966347494*^9, 3.8396719909537373`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"09e7a180-ec4c-43ac-bb49-fc5d3c1e69a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SteviloPodneh", "=", 
  RowBox[{"Stevilo", "/@", 
   RowBox[{"(", 
    RowBox[{"seznamcas", "//", "DeleteDuplicates"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8267899113080053`*^9, 3.826789927635423*^9}, {
   3.826790366857735*^9, 3.82679038201*^9}, {3.826790476393671*^9, 
   3.8267905311378016`*^9}, {3.8267906207780457`*^9, 3.8267906280836334`*^9}, 
   3.8273050645855904`*^9, {3.827305416010392*^9, 3.8273054187623158`*^9}, 
   3.8273058695624595`*^9, {3.829049579137931*^9, 3.829049581576377*^9}, {
   3.8396720205407896`*^9, 3.839672029495205*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"e42e23ff-623d-49ef-8a56-14aa9bc36acf"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {{
        Quantity[1, "Days"], 2}, {
        Quantity[5, "Days"], 2}, {
        Quantity[7, "Days"], 2}, {
        Quantity[9, "Days"], 2}, {
        Quantity[13, "Days"], 2}, {
        Quantity[17, "Days"], 2}, {
        Quantity[20, "Days"], 2}, {
        Quantity[26, "Days"], 3}, {
        Quantity[28, "Days"], 1}, {
        Quantity[32, "Days"], 2}, {
        Quantity[43, "Days"], 5}, {
        Quantity[44, "Days"], 1}, {
        Quantity[51, "Days"], 4}, {
        Quantity[56, "Days"], 1}, {
        Quantity[57, "Days"], 2}, {
        Quantity[59, "Days"], 1}, {
        Quantity[62, "Days"], 3}, {
        Quantity[66, "Days"], 2}, {
        Quantity[67, "Days"], 1}, {
        Quantity[68, "Days"], 2}, {
        Quantity[69, "Days"], 1}, {
        Quantity[79, "Days"], 4}, {
        Quantity[87, "Days"], 1}, {
        Quantity[88, "Days"], 1}, {
        Quantity[91, "Days"], 1}, {
        Quantity[93, "Days"], 3}, {
        Quantity[98, "Days"], 2}, {
        Quantity[104, "Days"], 2}, {
        Quantity[105, "Days"], 2}, {
        Quantity[106, "Days"], 2}, {
        Quantity[112, "Days"], 2}, {
        Quantity[116, "Days"], 6}, {
        Quantity[118, "Days"], 1}, {
        Quantity[119, "Days"], 2}, {
        Quantity[121, "Days"], 3}, {
        Quantity[135, "Days"], 1}, {
        Quantity[144, "Days"], 1}, {
        Quantity[150, "Days"], 3}, {
        Quantity[162, "Days"], 4}, {
        Quantity[167, "Days"], 2}, {
        Quantity[183, "Days"], 1}, {
        Quantity[186, "Days"], 1}, {
        Quantity[190, "Days"], 1}, {
        Quantity[198, "Days"], 2}, {
        Quantity[200, "Days"], 2}, {
        Quantity[211, "Days"], 2}, {
        Quantity[215, "Days"], 1}, {
        Quantity[223, "Days"], 1}, {
        Quantity[224, "Days"], 1}, {
        Quantity[228, "Days"], 1}, {
        Quantity[236, "Days"], 1}, {
        Quantity[238, "Days"], 2}, {
        Quantity[242, "Days"], 1}, {
        Quantity[243, "Days"], 1}, {
        Quantity[248, "Days"], 1}, {
        Quantity[249, "Days"], 1}, {
        Quantity[251, "Days"], 1}, {
        Quantity[252, "Days"], 1}, {
        Quantity[253, "Days"], 2}, {
        Quantity[256, "Days"], 1}, {
        Quantity[257, "Days"], 1}, {
        Quantity[259, "Days"], 2}, {
        Quantity[261, "Days"], 2}, {
        Quantity[271, "Days"], 3}, {
        Quantity[277, "Days"], 1}, {
        Quantity[283, "Days"], 1}, {
        Quantity[284, "Days"], 1}, {
        Quantity[289, "Days"], 1}, {
        Quantity[291, "Days"], 1}, {
        Quantity[311, "Days"], 2}, {
        Quantity[312, "Days"], 3}, {
        Quantity[316, "Days"], 2}, {
        Quantity[331, "Days"], 2}, {
        Quantity[334, "Days"], 1}, {
        Quantity[338, "Days"], 1}, {
        Quantity[340, "Days"], 2}, {
        Quantity[341, "Days"], 3}, {
        Quantity[346, "Days"], 1}, {
        Quantity[347, "Days"], 2}, {
        Quantity[354, "Days"], 1}, {
        Quantity[361, "Days"], 1}, {
        Quantity[367, "Days"], 1}, {
        Quantity[370, "Days"], 2}, {
        Quantity[386, "Days"], 1}, {
        Quantity[391, "Days"], 1}, {
        Quantity[392, "Days"], 2}, {
        Quantity[403, "Days"], 1}, {
        Quantity[406, "Days"], 1}, {
        Quantity[410, "Days"], 1}, {
        Quantity[421, "Days"], 1}, {
        Quantity[428, "Days"], 2}, {
        Quantity[432, "Days"], 2}, {
        Quantity[439, "Days"], 1}, {
        Quantity[452, "Days"], 2}, {
        Quantity[478, "Days"], 1}, {
        Quantity[481, "Days"], 1}, {
        Quantity[485, "Days"], 1}, {
        Quantity[486, "Days"], 1}, {
        Quantity[490, "Days"], 2}, {
        Quantity[494, "Days"], 1}, {
        Quantity[495, "Days"], 1}, {
        Quantity[512, "Days"], 4}, {
        Quantity[535, "Days"], 2}, {
        Quantity[543, "Days"], 1}, {
        Quantity[545, "Days"], 3}, {
        Quantity[563, "Days"], 1}, {
        Quantity[570, "Days"], 2}, {
        Quantity[572, "Days"], 1}, {
        Quantity[579, "Days"], 1}, {
        Quantity[582, "Days"], 1}, {
        Quantity[583, "Days"], 1}, {
        Quantity[590, "Days"], 1}, {
        Quantity[596, "Days"], 1}, {
        Quantity[615, "Days"], 1}, {
        Quantity[621, "Days"], 1}, {
        Quantity[630, "Days"], 1}, {
        Quantity[631, "Days"], 1}, {
        Quantity[633, "Days"], 1}, {
        Quantity[652, "Days"], 2}, {
        Quantity[654, "Days"], 2}, {
        Quantity[655, "Days"], 1}, {
        Quantity[659, "Days"], 1}, {
        Quantity[670, "Days"], 3}, {
        Quantity[692, "Days"], 1}, {
        Quantity[697, "Days"], 1}, {
        Quantity[701, "Days"], 1}, {
        Quantity[719, "Days"], 1}, {
        Quantity[723, "Days"], 1}, {
        Quantity[725, "Days"], 1}, {
        Quantity[730, "Days"], 1}, {
        Quantity[734, "Days"], 1}, {
        Quantity[753, "Days"], 2}, {
        Quantity[757, "Days"], 2}, {
        Quantity[773, "Days"], 1}, {
        Quantity[776, "Days"], 1}, {
        Quantity[790, "Days"], 1}, {
        Quantity[806, "Days"], 1}, {
        Quantity[834, "Days"], 1}, {
        Quantity[835, "Days"], 1}, {
        Quantity[864, "Days"], 4}, {
        Quantity[875, "Days"], 1}, {
        Quantity[888, "Days"], 1}, {
        Quantity[890, "Days"], 1}, {
        Quantity[903, "Days"], 2}, {
        Quantity[909, "Days"], 2}, {
        Quantity[915, "Days"], 2}, {
        Quantity[932, "Days"], 1}, {
        Quantity[939, "Days"], 1}, {
        Quantity[945, "Days"], 2}, {
        Quantity[946, "Days"], 1}, {
        Quantity[951, "Days"], 2}, {
        Quantity[961, "Days"], 1}, {
        Quantity[965, "Days"], 1}, {
        Quantity[968, "Days"], 1}, {
        Quantity[1016, "Days"], 2}, {
        Quantity[1028, "Days"], 1}, {
        Quantity[1050, "Days"], 1}, {
        Quantity[1058, "Days"], 2}, {
        Quantity[1092, "Days"], 2}, {
        Quantity[1105, "Days"], 1}, {
        Quantity[1110, "Days"], 2}, {
        Quantity[1114, "Days"], 2}, {
        Quantity[1115, "Days"], 1}, {
        Quantity[1118, "Days"], 1}, {
        Quantity[1124, "Days"], 3}, {
        Quantity[1125, "Days"], 2}, {
        Quantity[1128, "Days"], 2}, {
        Quantity[1145, "Days"], 1}, {
        Quantity[1149, "Days"], 2}, {
        Quantity[1154, "Days"], 2}, {
        Quantity[1165, "Days"], 1}, {
        Quantity[1186, "Days"], 1}, {
        Quantity[1191, "Days"], 1}, {
        Quantity[1196, "Days"], 3}, {
        Quantity[1208, "Days"], 2}, {
        Quantity[1210, "Days"], 1}, {
        Quantity[1224, "Days"], 2}, {
        Quantity[1229, "Days"], 2}, {
        Quantity[1230, "Days"], 2}, {
        Quantity[1252, "Days"], 2}, {
        Quantity[1256, "Days"], 1}, {
        Quantity[1274, "Days"], 1}, {
        Quantity[1291, "Days"], 5}, {
        Quantity[1297, "Days"], 2}, {
        Quantity[1302, "Days"], 1}, {
        Quantity[1313, "Days"], 1}, {
        Quantity[1316, "Days"], 1}, {
        Quantity[1350, "Days"], 2}, {
        Quantity[1357, "Days"], 1}, {
        Quantity[1383, "Days"], 4}, {
        Quantity[1386, "Days"], 1}, {
        Quantity[1388, "Days"], 1}, {
        Quantity[1395, "Days"], 1}, {
        Quantity[1418, "Days"], 1}, {
        Quantity[1428, "Days"], 1}, {
        Quantity[1429, "Days"], 1}, {
        Quantity[1435, "Days"], 2}, {
        Quantity[1449, "Days"], 3}, {
        Quantity[1450, "Days"], 2}, {
        Quantity[1457, "Days"], 2}, {
        Quantity[1463, "Days"], 1}, {
        Quantity[1470, "Days"], 1}, {
        Quantity[1497, "Days"], 3}, {
        Quantity[1500, "Days"], 1}, {
        Quantity[1509, "Days"], 1}, {
        Quantity[1522, "Days"], 1}, {
        Quantity[1527, "Days"], 2}, {
        Quantity[1541, "Days"], 1}, {
        Quantity[1567, "Days"], 2}, {
        Quantity[1571, "Days"], 1}, {
        Quantity[1578, "Days"], 1}, {
        Quantity[1586, "Days"], 2}, {
        Quantity[1594, "Days"], 2}, {
        Quantity[1610, "Days"], 2}, {
        Quantity[1611, "Days"], 2}, {
        Quantity[1617, "Days"], 1}, {
        Quantity[1624, "Days"], 2}, {
        Quantity[1638, "Days"], 2}, {
        Quantity[1641, "Days"], 1}, {
        Quantity[1655, "Days"], 1}, {
        Quantity[1668, "Days"], 2}, {
        Quantity[1674, "Days"], 2}, {
        Quantity[1699, "Days"], 2}, {
        Quantity[1700, "Days"], 2}, {
        Quantity[1707, "Days"], 2}, {
        Quantity[1717, "Days"], 2}, {
        Quantity[1718, "Days"], 2}, {
        Quantity[1734, "Days"], 1}, {
        Quantity[1736, "Days"], 4}, {
        Quantity[1739, "Days"], 4}, {
        Quantity[1745, "Days"], 2}, {
        Quantity[1746, "Days"], 2}, {
        Quantity[1749, "Days"], 1}, {
        Quantity[1770, "Days"], 2}, {
        Quantity[1795, "Days"], 4}, {
        Quantity[1802, "Days"], 2}, {
        Quantity[1803, "Days"], 1}, {
        Quantity[1808, "Days"], 2}, {
        Quantity[1815, "Days"], 2}, {
        Quantity[1820, "Days"], 1}, {
        Quantity[1839, "Days"], 1}, {
        Quantity[1861, "Days"], 2}, {
        Quantity[1893, "Days"], 2}, {
        Quantity[1900, "Days"], 1}, {
        Quantity[1920, "Days"], 1}, {
        Quantity[1937, "Days"], 1}, {
        Quantity[1947, "Days"], 2}, {
        Quantity[1959, "Days"], 2}, {
        Quantity[1975, "Days"], 1}, {
        Quantity[1988, "Days"], 2}, {
        Quantity[1995, "Days"], 2}, {
        Quantity[2001, "Days"], 2}, {
        Quantity[2016, "Days"], 1}, {
        Quantity[2025, "Days"], 2}, {
        Quantity[2032, "Days"], 1}, {
        Quantity[2035, "Days"], 1}, {
        Quantity[2038, "Days"], 2}, {
        Quantity[2041, "Days"], 1}, {
        Quantity[2043, "Days"], 1}, {
        Quantity[2048, "Days"], 2}, {
        Quantity[2049, "Days"], 2}, {
        Quantity[2056, "Days"], 1}, {
        Quantity[2060, "Days"], 2}, {
        Quantity[2090, "Days"], 2}, {
        Quantity[2095, "Days"], 2}, {
        Quantity[2096, "Days"], 2}, {
        Quantity[2098, "Days"], 1}, {
        Quantity[2102, "Days"], 2}, {
        Quantity[2109, "Days"], 1}, {
        Quantity[2135, "Days"], 2}, {
        Quantity[2147, "Days"], 1}, {
        Quantity[2190, "Days"], 1}, {
        Quantity[2211, "Days"], 2}, {
        Quantity[2221, "Days"], 2}, {
        Quantity[2223, "Days"], 2}, {
        Quantity[2253, "Days"], 2}, {
        Quantity[2264, "Days"], 2}, {
        Quantity[2267, "Days"], 1}, {
        Quantity[2270, "Days"], 1}, {
        Quantity[2291, "Days"], 3}, {
        Quantity[2313, "Days"], 3}, {
        Quantity[2330, "Days"], 1}, {
        Quantity[2332, "Days"], 2}, {
        Quantity[2335, "Days"], 2}, {
        Quantity[2356, "Days"], 2}, {
        Quantity[2367, "Days"], 1}, {
        Quantity[2384, "Days"], 1}, {
        Quantity[2418, "Days"], 1}, {
        Quantity[2421, "Days"], 3}, {
        Quantity[2430, "Days"], 1}, {
        Quantity[2433, "Days"], 2}, {
        Quantity[2434, "Days"], 2}, {
        Quantity[2462, "Days"], 3}, {
        Quantity[2488, "Days"], 2}, {
        Quantity[2489, "Days"], 1}, {
        Quantity[2497, "Days"], 1}, {
        Quantity[2516, "Days"], 1}, {
        Quantity[2531, "Days"], 2}, {
        Quantity[2533, "Days"], 1}, {
        Quantity[2575, "Days"], 1}, {
        Quantity[2585, "Days"], 1}, {
        Quantity[2589, "Days"], 1}, {
        Quantity[2601, "Days"], 1}, {
        Quantity[2607, "Days"], 1}, {
        Quantity[2625, "Days"], 2}, {
        Quantity[2630, "Days"], 1}, {
        Quantity[2646, "Days"], 1}, {
        Quantity[2654, "Days"], 2}, {
        Quantity[2690, "Days"], 1}, {
        Quantity[2696, "Days"], 1}, {
        Quantity[2700, "Days"], 2}, {
        Quantity[2712, "Days"], 1}, {
        Quantity[2714, "Days"], 1}, {
        Quantity[2716, "Days"], 2}, {
        Quantity[2740, "Days"], 1}, {
        Quantity[2761, "Days"], 1}, {
        Quantity[2762, "Days"], 1}, {
        Quantity[2765, "Days"], 1}, {
        Quantity[2789, "Days"], 2}, {
        Quantity[2812, "Days"], 1}, {
        Quantity[2815, "Days"], 1}, {
        Quantity[2827, "Days"], 1}, {
        Quantity[2831, "Days"], 1}, {
        Quantity[2846, "Days"], 1}, {
        Quantity[2867, "Days"], 1}, {
        Quantity[2871, "Days"], 2}, {
        Quantity[2889, "Days"], 1}, {
        Quantity[2909, "Days"], 2}, {
        Quantity[2922, "Days"], 1}, {
        Quantity[2936, "Days"], 1}, {
        Quantity[2948, "Days"], 2}, {
        Quantity[2955, "Days"], 1}, {
        Quantity[2957, "Days"], 1}, {
        Quantity[2994, "Days"], 3}, {
        Quantity[2999, "Days"], 1}, {
        Quantity[3007, "Days"], 1}, {
        Quantity[3045, "Days"], 1}, {
        Quantity[3060, "Days"], 1}, {
        Quantity[3078, "Days"], 2}, {
        Quantity[3084, "Days"], 3}, {
        Quantity[3110, "Days"], 1}, {
        Quantity[3130, "Days"], 1}, {
        Quantity[3131, "Days"], 1}, {
        Quantity[3146, "Days"], 1}, {
        Quantity[3147, "Days"], 1}, {
        Quantity[3172, "Days"], 2}, {
        Quantity[3179, "Days"], 1}, {
        Quantity[3187, "Days"], 2}, {
        Quantity[3255, "Days"], 2}, {
        Quantity[3260, "Days"], 1}, {
        Quantity[3287, "Days"], 1}, {
        Quantity[3289, "Days"], 1}, {
        Quantity[3300, "Days"], 2}, {
        Quantity[3301, "Days"], 1}, {
        Quantity[3319, "Days"], 1}, {
        Quantity[3361, "Days"], 1}, {
        Quantity[3402, "Days"], 1}, {
        Quantity[3425, "Days"], 1}, {
        Quantity[3434, "Days"], 1}, {
        Quantity[37, "Days"], 1}, {
        Quantity[80, "Days"], 1}, {
        Quantity[82, "Days"], 2}, {
        Quantity[114, "Days"], 1}, {
        Quantity[152, "Days"], 1}, {
        Quantity[158, "Days"], 1}, {
        Quantity[172, "Days"], 1}, {
        Quantity[206, "Days"], 1}, {
        Quantity[231, "Days"], 2}, {
        Quantity[280, "Days"], 2}, {
        Quantity[402, "Days"], 1}, {
        Quantity[414, "Days"], 1}, {
        Quantity[443, "Days"], 1}, {
        Quantity[450, "Days"], 1}, {
        Quantity[479, "Days"], 1}, {
        Quantity[499, "Days"], 1}, {
        Quantity[642, "Days"], 2}, {
        Quantity[646, "Days"], 1}, {
        Quantity[661, "Days"], 1}, {
        Quantity[663, "Days"], 2}, {
        Quantity[671, "Days"], 1}, {
        Quantity[750, "Days"], 2}, {
        Quantity[777, "Days"], 4}, {
        Quantity[863, "Days"], 2}, {
        Quantity[868, "Days"], 1}, {
        Quantity[934, "Days"], 1}, {
        Quantity[992, "Days"], 1}, {
        Quantity[1001, "Days"], 1}, {
        Quantity[1002, "Days"], 1}, {
        Quantity[1109, "Days"], 1}, {
        Quantity[1122, "Days"], 1}, {
        Quantity[1178, "Days"], 1}, {
        Quantity[1232, "Days"], 1}, {
        Quantity[1242, "Days"], 2}, {
        Quantity[1275, "Days"], 1}, {
        Quantity[1352, "Days"], 1}, {
        Quantity[1384, "Days"], 1}, {
        Quantity[1681, "Days"], 2}, {
        Quantity[1778, "Days"], 2}, {
        Quantity[1877, "Days"], 2}, {
        Quantity[1989, "Days"], 1}, {
        Quantity[2094, "Days"], 2}, {
        Quantity[2369, "Days"], 2}, {
        Quantity[2414, "Days"], 1}, {
        Quantity[2425, "Days"], 1}, {
        Quantity[2451, "Days"], 1}, {
        Quantity[2455, "Days"], 1}, {
        Quantity[2557, "Days"], 1}, {
        Quantity[2598, "Days"], 1}, {
        Quantity[2659, "Days"], 2}, {
        Quantity[2688, "Days"], 1}, {
        Quantity[2726, "Days"], 2}, {
        Quantity[2741, "Days"], 1}, {
        Quantity[2750, "Days"], 2}, {
        Quantity[2961, "Days"], 1}, {
        Quantity[3019, "Days"], 1}, {
        Quantity[3281, "Days"], 1}, {
        Quantity[3430, "Days"], 1}, {
        Quantity[2, "Days"], 1}, {
        Quantity[3, "Days"], 1}, {
        Quantity[10, "Days"], 2}, {
        Quantity[21, "Days"], 1}, {
        Quantity[33, "Days"], 1}, {
        Quantity[48, "Days"], 1}, {
        Quantity[50, "Days"], 1}, {
        Quantity[52, "Days"], 1}, {
        Quantity[78, "Days"], 1}, {
        Quantity[97, "Days"], 1}, {
        Quantity[115, "Days"], 1}, {
        Quantity[124, "Days"], 1}, {
        Quantity[141, "Days"], 1}, {
        Quantity[142, "Days"], 1}, {
        Quantity[143, "Days"], 1}, {
        Quantity[154, "Days"], 1}, {
        Quantity[173, "Days"], 1}, {
        Quantity[193, "Days"], 1}, {
        Quantity[205, "Days"], 1}, {
        Quantity[209, "Days"], 1}, {
        Quantity[239, "Days"], 1}, {
        Quantity[246, "Days"], 2}, {
        Quantity[250, "Days"], 2}, {
        Quantity[260, "Days"], 1}, {
        Quantity[269, "Days"], 1}, {
        Quantity[273, "Days"], 1}, {
        Quantity[297, "Days"], 1}, {
        Quantity[306, "Days"], 2}, {
        Quantity[337, "Days"], 1}, {
        Quantity[366, "Days"], 1}, {
        Quantity[377, "Days"], 1}, {
        Quantity[387, "Days"], 1}, {
        Quantity[388, "Days"], 1}, {
        Quantity[399, "Days"], 1}, {
        Quantity[417, "Days"], 1}, {
        Quantity[424, "Days"], 1}, {
        Quantity[448, "Days"], 3}, {
        Quantity[459, "Days"], 1}, {
        Quantity[470, "Days"], 1}, {
        Quantity[507, "Days"], 1}, {
        Quantity[549, "Days"], 1}, {
        Quantity[593, "Days"], 1}, {
        Quantity[604, "Days"], 1}, {
        Quantity[614, "Days"], 1}, {
        Quantity[660, "Days"], 1}, {
        Quantity[675, "Days"], 1}, {
        Quantity[678, "Days"], 1}, {
        Quantity[693, "Days"], 1}, {
        Quantity[715, "Days"], 1}, {
        Quantity[731, "Days"], 2}, {
        Quantity[759, "Days"], 1}, {
        Quantity[762, "Days"], 1}, {
        Quantity[772, "Days"], 2}, {
        Quantity[793, "Days"], 1}, {
        Quantity[840, "Days"], 1}, {
        Quantity[852, "Days"], 1}, {
        Quantity[900, "Days"], 1}, {
        Quantity[907, "Days"], 2}, {
        Quantity[963, "Days"], 1}, {
        Quantity[995, "Days"], 2}, {
        Quantity[1012, "Days"], 1}, {
        Quantity[1013, "Days"], 1}, {
        Quantity[1051, "Days"], 1}, {
        Quantity[1072, "Days"], 1}, {
        Quantity[1086, "Days"], 1}, {
        Quantity[1164, "Days"], 1}, {
        Quantity[1254, "Days"], 2}, {
        Quantity[1269, "Days"], 1}, {
        Quantity[1299, "Days"], 1}, {
        Quantity[1304, "Days"], 1}, {
        Quantity[1309, "Days"], 1}, {
        Quantity[1315, "Days"], 1}, {
        Quantity[1326, "Days"], 1}, {
        Quantity[1331, "Days"], 1}, {
        Quantity[1365, "Days"], 1}, {
        Quantity[1368, "Days"], 2}, {
        Quantity[1427, "Days"], 1}, {
        Quantity[1473, "Days"], 1}, {
        Quantity[1605, "Days"], 1}, {
        Quantity[1606, "Days"], 1}, {
        Quantity[1623, "Days"], 1}, {
        Quantity[1673, "Days"], 1}, {
        Quantity[1698, "Days"], 1}, {
        Quantity[1702, "Days"], 2}, {
        Quantity[1732, "Days"], 1}, {
        Quantity[1777, "Days"], 1}, {
        Quantity[1785, "Days"], 1}, {
        Quantity[1786, "Days"], 2}, {
        Quantity[1791, "Days"], 1}, {
        Quantity[1835, "Days"], 1}, {
        Quantity[1875, "Days"], 1}, {
        Quantity[1914, "Days"], 1}, {
        Quantity[1939, "Days"], 1}, {
        Quantity[1940, "Days"], 1}, {
        Quantity[1942, "Days"], 2}, {
        Quantity[1962, "Days"], 1}, {
        Quantity[1966, "Days"], 1}, {
        Quantity[1973, "Days"], 1}, {
        Quantity[1980, "Days"], 1}, {
        Quantity[2014, "Days"], 2}, {
        Quantity[2034, "Days"], 3}, {
        Quantity[2083, "Days"], 1}, {
        Quantity[2108, "Days"], 1}, {
        Quantity[2129, "Days"], 1}, {
        Quantity[2193, "Days"], 1}, {
        Quantity[2233, "Days"], 1}, {
        Quantity[2236, "Days"], 1}, {
        Quantity[2252, "Days"], 2}, {
        Quantity[2271, "Days"], 1}, {
        Quantity[2301, "Days"], 1}, {
        Quantity[2312, "Days"], 1}, {
        Quantity[2392, "Days"], 1}, {
        Quantity[2405, "Days"], 2}, {
        Quantity[2486, "Days"], 1}, {
        Quantity[2504, "Days"], 1}, {
        Quantity[2529, "Days"], 2}, {
        Quantity[2556, "Days"], 1}, {
        Quantity[2567, "Days"], 1}, {
        Quantity[2632, "Days"], 1}, {
        Quantity[2638, "Days"], 2}, {
        Quantity[2663, "Days"], 1}, {
        Quantity[2670, "Days"], 1}, {
        Quantity[2680, "Days"], 2}, {
        Quantity[2701, "Days"], 1}, {
        Quantity[2705, "Days"], 1}, {
        Quantity[2759, "Days"], 1}, {
        Quantity[2768, "Days"], 1}, {
        Quantity[2783, "Days"], 1}, {
        Quantity[2795, "Days"], 1}, {
        Quantity[2870, "Days"], 1}, {
        Quantity[2876, "Days"], 1}, {
        Quantity[2900, "Days"], 1}, {
        Quantity[2906, "Days"], 1}, {
        Quantity[2918, "Days"], 1}, {
        Quantity[2993, "Days"], 1}, {
        Quantity[3028, "Days"], 1}, {
        Quantity[3042, "Days"], 1}, {
        Quantity[3063, "Days"], 2}, {
        Quantity[3072, "Days"], 2}, {
        Quantity[3077, "Days"], 1}, {
        Quantity[3086, "Days"], 1}, {
        Quantity[3096, "Days"], 1}, {
        Quantity[3102, "Days"], 1}, {
        Quantity[3106, "Days"], 1}, {
        Quantity[3116, "Days"], 1}, {
        Quantity[3124, "Days"], 1}, {
        Quantity[3142, "Days"], 1}, {
        Quantity[3145, "Days"], 2}, {
        Quantity[3173, "Days"], 1}, {
        Quantity[3175, "Days"], 1}, {
        Quantity[3186, "Days"], 1}, {
        Quantity[3202, "Days"], 1}, {
        Quantity[3215, "Days"], 1}, {
        Quantity[3224, "Days"], 1}, {
        Quantity[3229, "Days"], 1}, {
        Quantity[3265, "Days"], 1}, {
        Quantity[3325, "Days"], 1}, {
        Quantity[3360, "Days"], 1}, {
        Quantity[3372, "Days"], 1}, {
        Quantity[3379, "Days"], 1}, {
        Quantity[3412, "Days"], 1}, {
        Quantity[3420, "Days"], 1}, {
        Quantity[14, "Days"], 1}, {
        Quantity[40, "Days"], 1}, {
        Quantity[45, "Days"], 1}, {
        Quantity[229, "Days"], 1}, {
        Quantity[344, "Days"], 1}, {
        Quantity[442, "Days"], 1}, {
        Quantity[625, "Days"], 1}, {
        Quantity[673, "Days"], 1}, {
        Quantity[879, "Days"], 1}, {
        Quantity[887, "Days"], 1}, {
        Quantity[899, "Days"], 2}, {
        Quantity[920, "Days"], 1}, {
        Quantity[929, "Days"], 1}, {
        Quantity[943, "Days"], 1}, {
        Quantity[953, "Days"], 2}, {
        Quantity[1151, "Days"], 1}, {
        Quantity[1508, "Days"], 1}, {
        Quantity[2026, "Days"], 1}, {
        Quantity[2171, "Days"], 1}, {
        Quantity[2268, "Days"], 1}, {
        Quantity[2276, "Days"], 1}, {
        Quantity[2413, "Days"], 1}, {
        Quantity[2463, "Days"], 1}, {
        Quantity[2650, "Days"], 1}, {
        Quantity[2935, "Days"], 1}, {
        Quantity[3161, "Days"], 1}, {
        Quantity[3211, "Days"], 1}, {
        Quantity[3304, "Days"], 1}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[75], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 2, {All}]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[
          Quantity[1, "Days"]], 
         TypeSystem`Atom[Integer]}], 607], "Meta" -> 
     Association["ID" -> 177622909649409], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[75], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 2, {All}]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[
          Quantity[1, "Days"]], 
         TypeSystem`Atom[Integer]}], 607], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     607, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1", "\"day\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"5", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"7", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"9", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"13", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"17", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"20", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"26", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"28", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"32", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"44", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"51", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"56", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"57", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"59", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"62", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"66", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"67", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"68", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 607, 1], {1, 607 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 607, 1], {1, 607 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    607, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    607, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 607, 1], {1, 607 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 607, 1], {1, 607 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{199., {254.5, 261.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{199., {254.5, 261.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8396720337072124`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"930a7b7b-5c58-4064-89ed-d9c646523c8b"]
}, Open  ]],

Cell["Kateri dan je najve\[CHacek] primerov imel.", "Text",
 CellChangeTimes->{{3.839680798220332*^9, 
  3.8396808139139595`*^9}},ExpressionUUID->"73e5bc3c-43ca-4b14-b982-\
2420019558fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prvo", " ", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"SteviloPodneh", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
      RowBox[{"Max", "[", 
       RowBox[{"SteviloPodneh", "[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8273086992432117`*^9, 3.8273087396347656`*^9}, {
  3.8273091092101974`*^9, 3.827309111121811*^9}, {3.8286210081621685`*^9, 
  3.82862100945774*^9}, {3.8396723207093163`*^9, 3.839672330116133*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"04b270ba-86cb-4805-8b92-9be20d2e8394"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {{
        Quantity[116, "Days"], 6}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[75], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 2, {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[
          Quantity[1, "Days"]], 
         TypeSystem`Atom[Integer]}], 1], "Meta" -> 
     Association["ID" -> 180234249765678], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[75], 
           TypeSystem`PackageScope`AtomShape[34]}], 
         DirectedInfinity[1], 2, {All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[
          Quantity[1, "Days"]], 
         TypeSystem`Atom[Integer]}], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     1, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"116", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{146., {25.5, 32.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{146., {25.5, 32.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.83967233401614*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"d6812700-ffca-419d-8a6e-47711cc2646c"]
}, Open  ]],

Cell["Drugi po vrsti dan z najve\[CAcute]im \[SHacek]tevilom.", "Text",
 CellChangeTimes->{{3.8396808170027647`*^9, 
  3.839680831978791*^9}},ExpressionUUID->"f58f742e-3a5d-4770-88b5-\
123c5d4b0d2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drugo", " ", "=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"SteviloPodneh", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
      RowBox[{"RankedMax", "[", 
       RowBox[{
        RowBox[{"SteviloPodneh", "[", 
         RowBox[{"All", ",", "2"}], "]"}], ",", "2"}], "]"}]}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8286039401770706`*^9, 3.828603941789215*^9}, {
  3.828605027197411*^9, 3.828605202917162*^9}, {3.828605390533716*^9, 
  3.8286053949009743`*^9}, {3.8286210121935244`*^9, 3.8286210133621016`*^9}, {
  3.839672359713785*^9, 3.839672387372634*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"52c04355-5de2-48f8-a8a7-c4e5c9c8b2cb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {{
        Quantity[43, "Days"], 5}, {
        Quantity[1291, "Days"], 5}}, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 2], 2], "Meta" -> 
     Association["ID" -> 182845589881704], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[2, 2], 2, 2, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[TypeSystem`AnyType, 2], 2], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 2, "DisplayedColumnCount" -> 
     2, "DataRowCount" -> 2, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"43", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"1291", "\"days\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{146., {37.5, 44.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{146., {37.5, 44.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.839672380680222*^9, 3.839672392489443*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"70cc3057-f7e6-45b1-97c7-2b3a796075e8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0c794846-1460-4f2e-941d-ed48a70d941a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 194, 3, 78, "Subtitle",ExpressionUUID->"166ed084-126c-4039-95fb-04fdd7847506"],
Cell[777, 27, 173, 3, 53, "Subtitle",ExpressionUUID->"28332046-5308-4b83-bd08-5a3a5c625a0f"],
Cell[CellGroupData[{
Cell[975, 34, 170, 3, 67, "Section",ExpressionUUID->"aacb228d-71b7-4dd6-b92a-93fbed7bb007"],
Cell[1148, 39, 315, 9, 34, "Text",ExpressionUUID->"56bd5a75-e853-43d1-b705-e321272c9c8e"],
Cell[CellGroupData[{
Cell[1488, 52, 666, 12, 28, "Input",ExpressionUUID->"d0a908c5-1ceb-44a8-9bc4-a1651be7832f"],
Cell[2157, 66, 242695, 4640, 557, "Output",ExpressionUUID->"8a60d899-1266-4c1c-996b-082092733b28"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[244901, 4712, 294, 4, 67, "Section",ExpressionUUID->"789dbfc5-6f20-4584-b957-255349c700f1"],
Cell[245198, 4718, 789, 21, 34, "Text",ExpressionUUID->"a9a28ba2-f75b-429c-85f2-ffdfb768adae"],
Cell[CellGroupData[{
Cell[246012, 4743, 728, 14, 28, "Input",ExpressionUUID->"8dc2d149-5b81-41a8-8eb7-a19404426233"],
Cell[246743, 4759, 152, 2, 32, "Output",ExpressionUUID->"c1790ae5-a7f7-4d26-9340-95da633eeb3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246932, 4766, 533, 12, 28, "Input",ExpressionUUID->"e405838c-f056-4bf0-bf2d-d522d7a85a4d"],
Cell[247468, 4780, 150, 2, 32, "Output",ExpressionUUID->"b5c4d0a7-587b-4f87-9608-48f271f70010"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247655, 4787, 238, 4, 53, "Subsection",ExpressionUUID->"112e0d62-a4ca-4676-beeb-3910d12b0fbf"],
Cell[247896, 4793, 366, 7, 34, "Text",ExpressionUUID->"5dd196db-b208-4689-9081-1b0db1ccd758"],
Cell[CellGroupData[{
Cell[248287, 4804, 357, 6, 28, "Input",ExpressionUUID->"eaa52ee9-89b3-4c67-b67d-027bc0e2d00f"],
Cell[248647, 4812, 192651, 4497, 535, "Output",ExpressionUUID->"17e08edd-0c91-474d-ae5b-2e477ece971e"]
}, Open  ]],
Cell[441313, 9312, 359, 9, 34, "Text",ExpressionUUID->"966188f1-e6de-4cad-ad46-c9ae7e4fd7c1"],
Cell[CellGroupData[{
Cell[441697, 9325, 1883, 33, 53, "Input",ExpressionUUID->"f830bc83-a3f7-4825-b358-0d2d29c9b96e"],
Cell[443583, 9360, 55674, 1144, 569, "Output",ExpressionUUID->"d6c54124-3182-401b-84bf-19a2937814ab"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499306, 10510, 175, 3, 53, "Subsection",ExpressionUUID->"8649a981-22e8-4bde-8eb7-fb240cfd03ef"],
Cell[499484, 10515, 356, 9, 34, "Text",ExpressionUUID->"5885bc31-25cd-4477-af59-f8c8b37e745e"],
Cell[CellGroupData[{
Cell[499865, 10528, 693, 14, 28, "Input",ExpressionUUID->"f97ace9c-aad9-4f5e-a85d-ec9985e1589a"],
Cell[500561, 10544, 110851, 2469, 535, "Output",ExpressionUUID->"3f22757f-051a-49df-8a46-b0e7cd0e881f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[611449, 13018, 1447, 27, 53, "Input",ExpressionUUID->"b0f0971a-d9df-4553-a430-f45998aa79d3"],
Cell[612899, 13047, 50837, 1048, 319, "Output",ExpressionUUID->"e059fc90-22ea-4401-a097-cf9a25dc2816"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[663785, 14101, 172, 3, 53, "Subsection",ExpressionUUID->"09562cd7-0553-4534-9d05-a36ec96dea1c"],
Cell[663960, 14106, 309, 8, 34, "Text",ExpressionUUID->"04d42265-7347-4f5c-a8de-f9dfce80796e"],
Cell[CellGroupData[{
Cell[664294, 14118, 642, 14, 28, "Input",ExpressionUUID->"e75e67af-9fcf-4383-b7b7-569dc60bb0d3"],
Cell[664939, 14134, 138392, 3155, 535, "Output",ExpressionUUID->"b0d7c59e-799c-438b-9895-cd58f545fcc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[803368, 17294, 1342, 26, 53, "Input",ExpressionUUID->"c9a6a104-188f-4325-9330-b6df07f0ef25"],
Cell[804713, 17322, 53921, 1111, 519, "Output",ExpressionUUID->"6ea60663-cd4c-43ac-a8cc-424e37e07a90"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[858683, 18439, 156, 3, 53, "Subsection",ExpressionUUID->"c1d8d97d-da7f-4e87-861f-c34f4a6aefff"],
Cell[858842, 18444, 548, 10, 56, "Text",ExpressionUUID->"8398793e-ff2f-45ff-9c1d-bdf80b0bd4c1"],
Cell[CellGroupData[{
Cell[859415, 18458, 270, 5, 28, "Input",ExpressionUUID->"bb9cfb05-51a4-4348-b06d-6ada51fba123"],
Cell[859688, 18465, 146916, 3030, 535, "Output",ExpressionUUID->"d0b977a5-99e0-443d-b131-5f58e09eaf94"]
}, Open  ]],
Cell[1006619, 21498, 287, 7, 28, "Input",ExpressionUUID->"3c3fefc7-a1ac-4a35-a749-9ccd1d464f98"],
Cell[CellGroupData[{
Cell[1006931, 21509, 615, 10, 28, "Input",ExpressionUUID->"1a101cdd-cd6d-4e08-a55d-53965b39d0e1"],
Cell[1007549, 21521, 21689, 383, 101, "Output",ExpressionUUID->"43a5ee90-6d05-4da6-8c37-814b1f13fd66"]
}, Open  ]],
Cell[1029253, 21907, 339, 8, 34, "Text",ExpressionUUID->"9438b850-dba3-45f9-b32a-287df856a9b8"],
Cell[CellGroupData[{
Cell[1029617, 21919, 1330, 27, 48, "Input",ExpressionUUID->"5d5558a5-0baf-431a-87c0-8540348f8418"],
Cell[1030950, 21948, 23862, 467, 419, "Output",ExpressionUUID->"bbeaf20b-e03b-4e12-b4f5-bd04496fe631"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054873, 22422, 185, 3, 67, "Section",ExpressionUUID->"9c2486a3-fa77-4153-b9ee-eb2499eb43d2"],
Cell[1055061, 22427, 511, 8, 28, "Input",ExpressionUUID->"eb4b3946-7d67-4605-a09b-043ac539e8ed"],
Cell[1055575, 22437, 151841, 3154, 564, InheritFromParent,ExpressionUUID->"c5bc66ab-4602-4a8a-92af-5a4fea855858"],
Cell[1207419, 25593, 156, 3, 28, InheritFromParent,ExpressionUUID->"dc15a22c-db33-4ffd-958a-d75252edf475"],
Cell[CellGroupData[{
Cell[1207600, 25600, 363, 9, 28, "Input",ExpressionUUID->"74c737c3-3a4b-4442-b520-768e0dc286ef"],
Cell[1207966, 25611, 175, 2, 32, "Output",ExpressionUUID->"8cdba892-0347-4588-b6be-827c4d21d9f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208178, 25618, 443, 10, 28, "Input",ExpressionUUID->"e67ddf91-158c-4228-9962-1df4ad4f031f"],
Cell[1208624, 25630, 153, 2, 32, "Output",ExpressionUUID->"3bbd3aa5-b97a-4478-a421-e7d5ede0374a"]
}, Open  ]],
Cell[1208792, 25635, 378, 9, 32, "Input",ExpressionUUID->"3161a181-ef23-4274-a57b-970d561717cf"],
Cell[1209173, 25646, 519, 10, 28, "Input",ExpressionUUID->"8a5700d1-dc7a-4daa-90ab-112f150d0e84"],
Cell[CellGroupData[{
Cell[1209717, 25660, 777, 13, 28, "Input",ExpressionUUID->"f29c636e-ebbb-4784-8645-b8459d9140bb"],
Cell[1210497, 25675, 21783, 384, 101, "Output",ExpressionUUID->"600ebcbb-1bd3-47ce-bd8b-5e8a51c9deec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232317, 26064, 1414, 29, 48, "Input",ExpressionUUID->"3101196d-41cd-4317-8ca1-759347c9c823"],
Cell[1233734, 26095, 23889, 471, 419, "Output",ExpressionUUID->"02d67bd6-f12d-4002-9332-a1e41251f945"]
}, Open  ]],
Cell[1257638, 26569, 182, 3, 34, "Text",ExpressionUUID->"9d3f8708-baf1-41d1-8683-49577b50a17a"],
Cell[CellGroupData[{
Cell[1257845, 26576, 511, 8, 28, "Input",ExpressionUUID->"3b8c5d9d-1b83-474a-aa4c-fdefcdf06efc"],
Cell[1258359, 26586, 193384, 4497, 535, "Output",ExpressionUUID->"4772a290-f68c-4084-b8fa-01b7df36a040"]
}, Open  ]],
Cell[1451758, 31086, 286, 7, 32, "Input",ExpressionUUID->"f2864a5c-8b25-4b7c-aeb3-ebe970827e04"],
Cell[1452047, 31095, 558, 11, 28, "Input",ExpressionUUID->"09e7a180-ec4c-43ac-bb49-fc5d3c1e69a3"],
Cell[CellGroupData[{
Cell[1452630, 31110, 661, 11, 28, "Input",ExpressionUUID->"e42e23ff-623d-49ef-8a56-14aa9bc36acf"],
Cell[1453294, 31123, 82199, 1789, 535, "Output",ExpressionUUID->"930a7b7b-5c58-4064-89ed-d9c646523c8b"]
}, Open  ]],
Cell[1535508, 32915, 187, 3, 34, "Text",ExpressionUUID->"73e5bc3c-43ca-4b14-b982-2420019558fc"],
Cell[CellGroupData[{
Cell[1535720, 32922, 647, 14, 28, "Input",ExpressionUUID->"04b270ba-86cb-4805-8b92-9be20d2e8394"],
Cell[1536370, 32938, 21554, 384, 77, "Output",ExpressionUUID->"d6812700-ffca-419d-8a6e-47711cc2646c"]
}, Open  ]],
Cell[1557939, 33325, 199, 3, 34, "Text",ExpressionUUID->"f58f742e-3a5d-4770-88b5-123c5d4b0d2e"],
Cell[CellGroupData[{
Cell[1558163, 33332, 741, 17, 28, "Input",ExpressionUUID->"52c04355-5de2-48f8-a8a7-c4e5c9c8b2cb"],
Cell[1558907, 33351, 22163, 395, 101, "Output",ExpressionUUID->"70cc3057-f7e6-45b1-97c7-2b3a796075e8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

